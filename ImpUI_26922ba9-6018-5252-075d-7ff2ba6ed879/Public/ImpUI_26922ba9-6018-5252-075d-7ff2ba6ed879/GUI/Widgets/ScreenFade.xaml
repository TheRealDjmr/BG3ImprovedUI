<ls:UIWidget x:Name="ScreenFade"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ls="clr-namespace:ls;assembly=Code"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type ls:Widget}, IsDesignTimeCreatable=True}"
             d:DesignHeight="2160" d:DesignWidth="3840">
    <ls:UIWidget.Template>
        <ControlTemplate TargetType="ls:UIWidget">
            <ControlTemplate.Resources>
                <Storyboard x:Key="HideSpinnerAtTheStart">
                    <ObjectAnimationUsingKeyFrames FillBehavior="Stop" Duration="0:0:2" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Spinner">
                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                </Storyboard>
            </ControlTemplate.Resources>
            <Grid x:Name="Root" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding CurrentPlayer.UIData.ScreenFadeVisibility}">
                <Border x:Name="Bg" Background="{StaticResource ScreenFade.Default}" Opacity="{Binding CurrentPlayer.UIData.ScreenFadeOpacity}"/>
                <Control x:Name="Spinner" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,140,100" Template="{StaticResource BusyElement}" Visibility="{Binding CurrentPlayer.UIData.ScreenFadeHasSpin, Converter={StaticResource BoolToVisibleConverter}}"/>
                <ls:LSInputBinding x:Name="BlockingInput" AnyClick="True" AnyKey="True" EatInput="True" IsEnabled="{Binding CurrentPlayer.UIData.ScreenFadeBlockAllInput, FallbackValue=False}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="StateOwner" Value="All">
                    <Setter TargetName="Root" Property="Visibility" Value="{Binding Data.ScreenFadeVisibility}"/>
                    <Setter TargetName="Bg" Property="Opacity" Value="{Binding Data.ScreenFadeOpacity}"/>
                    <Setter TargetName="Spinner" Property="Visibility" Value="{Binding Data.ScreenFadeHasSpin, Converter={StaticResource BoolToVisibleConverter}}"/>
                    <Setter TargetName="BlockingInput" Property="IsEnabled" Value="{Binding Data.ScreenFadeBlockAllInput, FallbackValue=False}"/>
                </Trigger>
                <Trigger SourceName="Root" Property="Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="BeginHideSpinnerAtTheStart" Storyboard="{StaticResource HideSpinnerAtTheStart}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="BeginHideSpinnerAtTheStart"/>
                    </Trigger.ExitActions>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StateOwner, ElementName=ScreenFade}" Value="All"/>
                        <Condition Binding="{Binding Data.ScreenFadeStyle}" Value="Bright"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScreenFade.Bright}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StateOwner, ElementName=ScreenFade}" Value="DefaultPlayer"/>
                        <Condition Binding="{Binding CurrentPlayer.UIData.ScreenFadeStyle}" Value="Bright"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScreenFade.Bright}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding StateOwner, ElementName=ScreenFade}" Value="Player"/>
                        <Condition Binding="{Binding CurrentPlayer.UIData.ScreenFadeStyle}" Value="Bright"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="Bg" Property="Background" Value="{StaticResource ScreenFade.Bright}"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </ls:UIWidget.Template>
</ls:UIWidget>
