<ls:StateMachine RootState = "Root" xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
			  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ls:StateMachine.States>
		<ls:State Name = "Root" Layout = "Common" Owner = "All">
			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="EditorRoot"/>
				<ls:InitialSubstate Name="GameRoot"/>
				<ls:InitialSubstate Name="SystemRoot"/>
				<ls:InitialSubstate Name="SystemOverlayRoot"/>
			</ls:State.InitialSubstates>
		</ls:State>

		<ls:State Name = "EditorRoot" Layout = "Common" Owner = "All">
			<ls:State.Events>
				<ls:StateEvent Name = "GE.EditorMode">
					<ls:StateEvent.Actions>
						<ls:RemoveAllSubstates/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "SystemRoot" Layout = "Common" Owner = "All">
			<ls:State.Events>
				<!-- MOD START - Removes story message for Controller UI -->
				<!--<ls:StateEvent Name = "OpenSystemMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SystemMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>-->
				<!-- MOD END -->
				<ls:StateEvent Name = "OpenOptions">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Options"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "LoadGameOpen">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Paused.LoadGame"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "SaveGameOpen">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Paused.SaveGame"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenDifficultySettings">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="GameSettings"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "SystemOverlayRoot" Layout = "Common" Owner = "All">
			<ls:State.Events>
				<ls:StateEvent Name = "ShowVoiceChat">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="VoiceChat"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Root-->
		<ls:State Name = "GameRoot" Layout = "Common" Owner = "All">
			<ls:State.Events>
				<ls:StateEvent Name = "GE.OnStateMainMenu">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="Eula"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "GE.OnStateLoadingStart">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="Loading"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "GE.OnStateRunning">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="Running"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.OnStateLobby">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="Lobby"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				 <ls:StateEvent Name = "GE.OnBusyShow">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Busy"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.OnSaveShow">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Saving"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.OnMovieShow">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Movie"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.EditorMode">
					<ls:StateEvent.Actions>
						<ls:RemoveAllSubstates/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				
			</ls:State.Events>
		</ls:State>

		<!--STATE: SplashScreen-->
		<ls:State Name = "SplashScreen" DisableStatesBelow = "True" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="SplashScreen.xaml" Layer="Default"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenMainMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MainMenu"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: SensitiveSettings-->
		<ls:State Name="SensitiveSettings" DisableStatesBelow = "True" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="SensitiveSettings_c.xaml"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenGammaCalibration">
					<ls:StateEvent.Actions>
						<ls:PushState Name="GammaCalibration"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenHDR">
					<ls:StateEvent.Actions>
						<ls:PushState Name="HDRCalibration"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: SignUp-->
		<ls:State Name = "SignUp" DisableStatesBelow = "True" HideStatesBelow = "True" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="SignUp_c.xaml" Layer="Default"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSensitiveSettings">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SensitiveSettings"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: VoiceChat-->
		<ls:State Name = "VoiceChat" Layout="Common" Owner="All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="VoiceChat.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "ShowVoiceChat">
				</ls:StateEvent>
				<ls:StateEvent Name = "HideVoiceChat">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>
		
		<!--STATE: ScreenFade-->
		<ls:State Name = "ScreenFadePlayer" DisableStatesBelow = "False" HideStatesBelow = "False" Layout="Player" Owner="Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>
		</ls:State>
		<ls:State Name = "ScreenFadeGlobal" DisableStatesBelow = "False" HideStatesBelow = "False" Layout="Common" Owner="All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Eula-->
		<ls:State Name = "Eula" DisableStatesBelow = "True" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="Eula_c.xaml"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenSignUp">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SignUp"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSensitiveSettings">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SensitiveSettings"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSplashScreen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SplashScreen"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: MainMenu-->
		<ls:State Name = "MainMenu" DisableStatesBelow = "False" HideStatesBelow = "True" Layout = "Common" Owner = "All" DisableSoundLayersAbove="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="MainMenu_c.xaml" Layer="Pause"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "ProfileSelectOpen">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ProfileSelect"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCredits">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Credits"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="CommonMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "LoadGameOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MainMenu.LoadGame"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenLobbyBrowser">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="LobbyBrowser"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenLobby">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Lobby"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenHDR">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="HDRCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenGammaCalibration">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="GammaCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name="OpenDMSettings">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="GameSettings"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSignUp">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SignUp"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: HDRCalibration -->
		<ls:State Name = "HDRCalibration" HideStatesBelow = "True" Layout = "Common" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="HDRCalibration_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenSplashScreen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SplashScreen"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: GammaCalibration -->
		<ls:State Name = "GammaCalibration" HideStatesBelow = "True" IsModal = "True" Layout = "Common" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="GammaCalibration_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenSplashScreen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SplashScreen"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: CharacterCreation -->
		<ls:State Name = "CharacterCreation" HideStatesBelow = "True" DisableStatesBelow = "True" Layout = "Player" Owner = "Player" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
				<ls:StateWidget Filename="CharacterCreation_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<!-- MOD START - Remove CC tutorial message -->
				<!--<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>-->
				<!-- MOD END -->
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.OnDialogueShow">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Dialogue"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "PreloadDialogue">
					<ls:StateEvent.Actions>
						<ls:PreloadState Name="Dialogue"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: CharacterLevelUp -->
		<ls:State Name = "CharacterLevelUp" HideStatesBelow = "True" IsModal="True" IsModalCameraControlAllowed="True" ForceSplitscreen="True" Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
				<ls:StateWidget Filename="CharacterLevelUp_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.OnDialogueShow">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
						<ls:PushState Name="Dialogue"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<!--HandlesEvent="False" let's the CloseWidget event to keep going up the state tree. Be *VERY* careful when using it, it's a last resort-->
				<ls:StateEvent Name = "CloseWidget" HandlesEvent="False">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>
		
		<!--STATE: CharacterFullRespec -->
		<ls:State Name = "CharacterFullRespec" HideStatesBelow = "True" DisableStatesBelow = "True" IsModal="True" IsModalCameraControlAllowed="True" Layout = "Player" Owner = "Player" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
				<ls:StateWidget Filename="CharacterFullRespec_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: CharacterRespec -->
		<ls:State Name = "CharacterRespec" HideStatesBelow = "True" DisableStatesBelow = "True" IsModal="True" IsModalCameraControlAllowed="True" Layout = "Player" Owner = "Player" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
				<ls:StateWidget Filename="CharacterRespec_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: CharacterChangeAppearance -->
		<ls:State Name = "CharacterChangeAppearance" HideStatesBelow = "True" DisableStatesBelow = "True" IsModal="True" IsModalCameraControlAllowed="True" Layout = "Player" Owner = "Player" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
				<ls:StateWidget Filename="CharacterChangeAppearance_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>        
		
		<!--STATE: Henchmen -->
		<ls:State Name = "Henchmen" HideStatesBelow = "True" DisableStatesBelow = "True" IsModal="True" IsModalCameraControlAllowed="True" Layout="Player" Owner="Player" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
				<ls:StateWidget Filename="Henchmen_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Loading-->
		<ls:State Name = "Loading" DisableStatesBelow = "True" Layout = "Common" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="LoadingScreen.xaml" Layer="Default" BlockedLoading="True"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Credits -->
		<ls:State Name = "Credits" IsModal="True" HideStatesBelow = "True" DisableStatesBelow = "True" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Credits.xaml"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Paused-->
		<ls:State Name = "Paused" Layout = "Player" Owner = "Player" DisableStatesBelow = "True" HideStatesBelow = "True" IsModal="True" TutorialLayer="Paused">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="GameMenu_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CharacterAssignOpen">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="CharacterAssign"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseGameMenuWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenGameOverMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="GameOverMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ClosePanelSelect">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "IE.UICancel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

			</ls:State.Events>
		</ls:State>

		<ls:State Name = "ShortcutMenu" Layout = "Player" Owner = "Player" IsModal="True" >
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="ShortcutsMenu_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>

			<ls:State.Events>

				<ls:StateEvent Name = "CloseGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseAllFullscreen">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ClosePanelSelect">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

			</ls:State.Events>
		</ls:State>

		<!--STATE: Running-->
		<ls:State Name = "Running" Layout = "Common" Owner = "All">
			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerUIs"/>
				<ls:InitialSubstate Name="OverlayShared"/>
				<ls:InitialSubstate Name="ScreenFadeGlobal"/>
			</ls:State.InitialSubstates>
			<ls:State.Events>
				<!-- eat GE.OnStateRunning to avoid restarting the Running state (for example, when autosaving ends) -->
				<ls:StateEvent Name = "GE.OnStateRunning" />
				<ls:StateEvent Name = "ProfileSelectOpen">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ProfileSelect"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenGameOverMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="GameOverMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "LoadGameOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused.LoadGame"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ShowBook">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Book"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenTutorial">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Tutorial"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>				
				<ls:StateEvent Name = "OpenActOver">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ActOver"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenEndGameCredits">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Credits" Metadata="Ending"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!-- STATE: PlayerPanelsHandle -->
		<ls:State Name = "PlayerPanelsHolder" Layout = "Player" Owner = "Player">
			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPanels"/>
				<ls:InitialSubstate Name="PlayerRadials"/>
			</ls:State.InitialSubstates>
		</ls:State>

		<ls:State Name = "PlayerRadials" Layout = "Player" Owner = "Player">
			<ls:State.Events>
				<ls:StateEvent Name = "OpenActionRadials">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="ActionRadials"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenActionRadialsAndCallAllies">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="ActionRadials" Metadata="CallAllies"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenActionRadialsEnd">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="ActionRadials" Metadata="MoveToEnd"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="ActionRadials" Layout="Player" Owner="Player" IsModal="True" TutorialLayer="ActionRadials">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ActionRadials.xaml" Layer="Panels" AllowCreationDelay="True"/>
			</ls:State.Widgets>

			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits" Metadata="InRadials" />
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ToggleShortcutMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ShortcutMenu"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseRadials">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: PlayerUIsHolder-->
		<ls:State Name = "PlayerUIsHolder" Layout = "Player" Owner = "Player">
			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerHUD"/>
				<ls:InitialSubstate Name="PlayerWorldContextMenu"/>
				<ls:InitialSubstate Name="PlayerPanelsHolder"/>
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.OnDialogueShow">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Dialogue"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "PreloadDialogue">
					<ls:StateEvent.Actions>
						<ls:PreloadState Name="Dialogue"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ClearPreloadDialogue">
					<ls:StateEvent.Actions>
						<ls:ClearPreloadState Name="Dialogue"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenContainerInventory">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ContainerInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPickpocket">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Pickpocket"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenExamine">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Examine"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenExamineSurfaces">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ExamineSurfaces"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ActiveRollOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ActiveRoll"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ActiveSearchOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ActiveSearch"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenRewardPanel">
					<ls:StateEvent.Actions>
						<ls:PushState Name="RewardPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenLongRest">
					<ls:StateEvent.Actions>
						<ls:PushState Name="LongRest"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name="OpenMakeCamp">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MakeCamp"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenInsert">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Insert"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCombine">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Combine"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenTrade">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Trade"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCharacterCreation">
					<ls:StateEvent.Actions>
						<ls:PushState Name="CharacterCreation"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCharacterFullRespec">
					<ls:StateEvent.Actions>
						<ls:PushState Name="CharacterFullRespec"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCharacterRespec">
					<ls:StateEvent.Actions>
						<ls:PushState Name="CharacterRespec"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCharacterLevelUp">
					<ls:StateEvent.Actions>
						<ls:PushState Name="CharacterLevelUp"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenHenchmen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Henchmen"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleShortcutMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ShortcutMenu"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenReactionsPopup">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ReactionsPopup"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCharacterChangeAppearance">
					<ls:StateEvent.Actions>
						<ls:PushState Name="CharacterChangeAppearance"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: PlayerUIs-->
		<ls:State Name = "PlayerUIs" Layout = "Player" Owner = "Player">
			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerNotifications"/>
				<ls:InitialSubstate Name="PlayerUIsHolder" />
				<ls:InitialSubstate Name="ScreenFadePlayer"/>
			</ls:State.InitialSubstates>
		</ls:State>

		<!--STATE: PlayerPortraitsActive -->
		<ls:State Name = "PlayerPortraitsActive" Layout = "Player" Owner = "Player"  DisableStatesBelow = "False" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="PlayerPortraitsActive_c.xaml" Layer="HUDTop"/>
			</ls:State.Widgets>

			<ls:State.Events>

				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RequestCloseWidget/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<!--RemovePanelState happens after closing animation so the widget is cleaned up-->
				<ls:StateEvent Name = "RemovePanelState">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ClosePlayerPortraits">
					<ls:StateEvent.Actions>
						<ls:RequestCloseWidget/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenTutorial">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Tutorial"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: PlayerPortraits-->
		<ls:State Name = "PlayerPortraits" Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="PlayerPortraits_c.xaml" Layer="HUDTop"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenPlayerPortraits">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PlayerPortraitsActive"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPlayerPortraitsDialogue">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PlayerPortraitsActive" Metadata="InDialogue"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPlayerPortraitsHUD">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PlayerPortraitsActive" Metadata="InHUD"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPlayerPortraitsCharacterPanel">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PlayerPortraitsActive" Metadata="InCharacterPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPlayerPortraitsRewardPanel">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PlayerPortraitsActive" Metadata="InRewardPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: PlayerWorldContextMenu-->
		<ls:State Name = "PlayerWorldContextMenu" Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="WorldContextMenu.xaml" Layer="Notifications"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: PlayerHUD-->
		<ls:State Name = "PlayerHUD" Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Overlay_c.xaml" Layer="Notifications"/>
				<ls:StateWidget Filename="HudIndicator.xaml" Layer="HUD" IgnoreHitTest="True"/>
				<ls:StateWidget Filename="OverheadInfo_c.xaml" Layer="HUD" IgnoreHitTest="True"/>
				<ls:StateWidget Filename="WorldTooltips.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="ActionResources_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="Minimap_c.xaml" Layer="HUDTop"/>
				<ls:StateWidget Filename="TargetInfo_c.xaml" Layer="HUDTop"/>
				<ls:StateWidget Filename="TurnModeInfo.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="CombatLog_c.xaml" Layer="HUD"/>
				<ls:StateWidget Filename="CombatantsOverlay.xaml" Layer="HUDTop"/>
				<ls:StateWidget Filename="CursorText_c.xaml" Layer="HUDTop"/>
				<ls:StateWidget Filename="PassiveRoll.xaml" Layer="PopupPanels"/>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits" Metadata="InHUD"/>
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenSelectionFlyOut">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SelectionFlyOut"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleCombatLog">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="CombatLog"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCursor">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ControllerCursor"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: ReactionsPopup -->
		<ls:State Name = "ReactionsPopup" Layout = "Player" Owner = "Player" IsModal = "True" DisableStatesBelow="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ReactionDecisionPopup_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseReactionsPopup">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: RewardPanel -->
		<ls:State Name = "RewardPanel" DisableStatesBelow = "False" Layout = "Player" Owner = "Player" IsModal = "True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="RewardPanel_c.xaml" Layer="HUDTop"/>
			</ls:State.Widgets>
			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits" Metadata="InRewardPanel"/>
			</ls:State.InitialSubstates>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseRewardPanel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: SelectionFlyOut-->
		<ls:State Name= "SelectionFlyOut" Layout="Player" Owner="Player" IsModal = "True">

			<ls:State.Widgets>
				<ls:StateWidget Filename="SelectionFlyOut_c.xaml" Layer="DragAndDrop"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseSelectionFlyOut">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: PlayerNotifications-->
		<ls:State Name= "PlayerNotifications" Layout="Player" Owner="Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: PlayerPanels-->
		<ls:State Name = "PlayerPanels" Layout = "Player" Owner = "Player">
			<ls:State.Events>

				<ls:StateEvent Name = "CloseAll">
					<ls:StateEvent.Actions>
						<ls:RemoveAllSubstates/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ToggleJournalInspiration">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalInspiration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleJournalInfo">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalInfo"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleJournalTutorial">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalTutorial"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleInventory">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="PartyInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ToggleRestPanel">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="RestPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenInventoryPanel">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="OpenCharacterInventoryPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenSpellBook">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="OpenSpellBook"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenAlchemyPanel">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="OpenAlchemyPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenTadpolePowers">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="OpenTadpolePowers"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenJournalCombatLog">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="OpenJournalCombatLog"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenJournalQuests">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="OpenJournalQuestsFocus"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ShowJournalMap">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="ShowJournalMap"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ToggleWaypoints">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="ShowJournalMapWithWaypoints"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenCharacterFullRespec">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="CharacterFullRespec"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ShowInterrupts">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="MainPanels" OnCreateStateEvent="ShowInterrupts"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

			</ls:State.Events>
		</ls:State>

		<!--STATE: Rest panel -->
		<ls:State Name="RestPanel" Layout="Player" Owner="Player" HideStatesBelow="False" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="RestPanel_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleWaypoints">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MainPanels" OnCreateStateEvent="ShowJournalMapWithWaypoints"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Party panels-->
		<ls:State Name="PartyPanel" Layout="Player" Owner="Player">
		</ls:State>

		<ls:State Name = "CharacterCondition_c" Layout = "Player" Owner = "Player" IsModal="True" HideStatesBelow="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="CharacterSelect_Conditions_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.Events>

				<ls:StateEvent Name = "CloseCondition">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "IE.UICancel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="MainPanels" Layout="Player" Owner="Player" ForceSplitscreen="True" HideStatesBelow="True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="MainPanels_c.xaml" Layer="Panels"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="Notifications"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseAll">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "ClosePanelSelect">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "IE.PanelSelect">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ShortcutMenu"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenExamine">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Examine"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>

					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>

					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "SplitItemToggle">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SplitItem"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ShowBook">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Book"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenInsert">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Insert"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCombine">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Combine"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenJournalQuests">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalQuests"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenJournalQuestsFocus">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalQuests" Metadata="FocusContent"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<!-- Event from gui::DCJournalMap -->
				<ls:StateEvent Name = "ToggleJournalQuests">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalQuests" Metadata="FocusContent"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenJournalCombatLog">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalCombatLog"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenJournaldialogues">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalDialogues"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenJournalInspiration">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalInspiration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenJournalTutorials">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalTutorials"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ShowJournalMap">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalMap"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ShowJournalMapWithWaypoints">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalMap" Metadata="Waypoints"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleWaypoints">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="JournalMap" Metadata="Waypoints"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ShowInterrupts">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="CharacterPanel" Metadata="Interrupts"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenCharacterInventoryPanel">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="CharacterPanel" Metadata="Inventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenInventoryPanel">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="CharacterPanel" Metadata="Inventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenAlchemyPanel">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="AlchemyPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenAlchemyFromItem">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="AlchemyPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenTadpolePowers">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="TadpoleTree"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenSpellBook">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="SpellBook"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenContainerInventory">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ContainerInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenCharacterStats">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="CharacterPanel" Metadata="CoreStats"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

			</ls:State.Events>
		</ls:State>

		<ls:State Name="LearnSpellsPanel" Layout="Player" Owner="Player" HideStatesBelow="False" DisableStatesBelow="True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="LearnSpells_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseLearnSpells">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="JournalQuests" Layout="Player" Owner="Player" HideStatesBelow="False" DisableStatesBelow="False" IsModal="False">
			<ls:State.Widgets>
				<ls:StateWidget Filename="JournalQuests_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenJournalQuests"/>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "JournalInspiration" Layout = "Player" Owner = "Player" HideStatesBelow="False" DisableStatesBelow="False" IsModal="False">
			<ls:State.Widgets>
				<ls:StateWidget Filename="JournalInspiration_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenJournalInspiration"/>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "JournalDialogues" Layout = "Player" Owner = "Player" HideStatesBelow="False" DisableStatesBelow="False" IsModal="False">
			<ls:State.Widgets>
				<ls:StateWidget Filename="JournalDialogues_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenJournalDialogues"/>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="JournalTutorials" Layout="Player" Owner="Player" HideStatesBelow="False" DisableStatesBelow="False" IsModal="False">
			<ls:State.Widgets>
				<ls:StateWidget Filename="JournalTutorials_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenJournalTutorials"/>
			</ls:State.Events>
		</ls:State>

		<!-- States of character panel with different metadata -->
		<ls:State Name="CharacterPanel" Layout="Player" Owner="Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="CharacterPanel_c.xaml" Layer="Panels" AllowCreationDelay="True"/>
			</ls:State.Widgets>

			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits" Metadata="InCharacterPanel"/>
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="AlchemyPanel" Layout="Player" Owner="Player" HideStatesBelow="False" DisableStatesBelow="False" IsModal="False">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlchemyPanel_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits"/>
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenAlchemyPanel"/>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="TadpoleTree" Layout="Player" Owner="Player" HideStatesBelow="False" DisableStatesBelow="False" IsModal="False">
			<ls:State.Widgets>
				<ls:StateWidget Filename="TadpolePowersTree_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits"/>
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenTadpolePowers"/>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!-- STATE : Combat Log -->
		<ls:State Name="JournalCombatLog" Layout="Player" Owner="Player" HideStatesBelow="True" DisableStatesBelow="False" IsModal="False" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="JournalCombatLog_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>
			<ls:State.Events>
  
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: JournalMap-->
		<ls:State Name = "JournalMap" Layout = "Player" DisableStatesBelow="False" IsModal="False" >
			<ls:State.Widgets>
				<ls:StateWidget Filename="JournalMap_c.xaml" Layer="Panels"/>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			
			<ls:State.Events>
				<ls:StateEvent Name = "JournalMap"/>
			</ls:State.Events>
		</ls:State>

		<!--STATE: JournalInfo -->
		<ls:State Name = "JournalInfo" Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="JournalInfo.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: TutorialPopup -->
		<ls:State Name = "TutorialPopup" Layout = "Player" Owner = "Player" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="TutorialPopup_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: SpellBook-->
		<ls:State Name = "SpellBook" Layout = "Player" Owner = "Player" HideStatesBelow="False" DisableStatesBelow="False" IsModal="False" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="SpellBook_c.xaml" Layer="Panels"/>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits"/>
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenSpellBookPanel"/>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenLearnSpells">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="LearnSpellsPanel"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: ProfileSelect-->
		<ls:State Name = "ProfileSelect" DisableStatesBelow = "True" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ProfileSelect_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: ProofOfHonour-->
		<ls:State Name = "ProofOfHonour" DisableStatesBelow = "True" IsModal = "True" Layout = "Common" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ProofOfHonour_c.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Messagebox-->
		<ls:State Name = "MessageBox" DisableStatesBelow = "True" Layout = "Player" Owner = "Player" IsModal="True" TutorialLayer="MessageBox">
			<ls:State.Widgets>
				<ls:StateWidget Filename="MessageBox_c.xaml" Layer="MessageBox" BlockedLoading="True"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "TestAction">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseMessageBox">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "LoadGameOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused.LoadGame"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenHDR">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="HDRCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenGammaCalibration">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="GammaCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSignUp">
					<ls:StateEvent.Actions>
						<ls:PushState Name="SignUp"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Messagebox for all players (this is a copy of Messagebox but with a different Layout) -->
		<ls:State Name = "CommonMessageBox" DisableStatesBelow = "True" Layout = "Common" Owner = "Player" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="MessageBox_c.xaml" Layer="MessageBox" BlockedLoading="True"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "TestAction">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseMessageBox">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "LoadGameOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused.LoadGame"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenHDR">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="HDRCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenGammaCalibration">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="GammaCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: GameOverMessagebox-->
		<ls:State Name = "GameOverMessageBox" DisableStatesBelow = "True" IsModal = "True" Layout = "Common" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="MessageBox_c.xaml" Layer="Pause" />
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseMessageBox">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "LoadGameOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused.LoadGame"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenProofOfHonour">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ProofOfHonour"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: SystemMessagebox-->
		<ls:State Name = "SystemMessageBox" DisableStatesBelow = "True" Layout = "Common" IsModal = "True" Owner = "DefaultPlayer" ForceVisible="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="MessageBox_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseMessageBox">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Book -->
		<ls:State Name = "Book" DisableStatesBelow = "True" Layout = "Player" Owner = "Player" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Book_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseAllFullscreen">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>
		
		<!--STATE: Dialogue-->
		<ls:State Name = "Dialogue" DisableStatesBelow = "True" HideStatesBelow = "True" Layout = "Adaptive" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Dialogue_c.xaml" Layer="HUD">
					<ls:StateWidget.Libraries>
						<ls:StateLibrary Filename="Library/DialogueTemplates.xaml"/>
					</ls:StateWidget.Libraries>
				</ls:StateWidget>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="PlayerPortraits" MetaData="InDialogue"/>
			</ls:State.InitialSubstates>

			<ls:State.Events>
				<ls:StateEvent Name = "GE.OnDialogueShow" />
				<ls:StateEvent Name = "OpenTrade">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Trade"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "GE.OnDialogueHide">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "DialogueHide">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenDialogueHistory">
					<ls:StateEvent.Actions>
						<ls:PushState Name="DialogueHistory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.OpenDialogueHistory">
					<ls:StateEvent.Actions>
						<ls:PushState Name="DialogueHistory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "DialogActiveRollOpen">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ActiveRoll"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ActiveRollOpen">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ActiveRoll"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenTutorial">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Tutorial"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>				
				<ls:StateEvent Name = "OpenGameOverMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="GameOverMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenLongRest">
					<ls:StateEvent.Actions>
						<ls:PushState Name="LongRest"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!-- STATE: DialogueHistory -->
		<ls:State Name = "DialogueHistory" DisableStatesBelow = "True" Layout = "Adaptive" Owner = "Player" HideStatesBelow = "True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="DialogueHistory_c.xaml" Layer="HUD"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseDialogueHistory">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.CloseDialogueHistory">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: SplitItem-->
		<ls:State Name = "SplitItem" DisableStatesBelow = "True" Layout = "Player" Owner = "Player" HideStatesBelow = "False" IsModal="True" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="SplitItem_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "SplitItemToggle">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: GameSettings-->
		<ls:State Name="GameSettings" HideStatesBelow="True" IsModal="True" DisableStatesBelow="True" Layout="Common" Owner="All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="NewGameSettings_c.xaml" Layer="HUDTop"/>
				<ls:StateWidget Filename="Notification_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name= "OpenMoreInfo">
					<ls:StateEvent.Actions>
						<ls:PushState Name="GameSettingsMoreInfo"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: GameSettingsMoreInfo-->
		<ls:State Name="GameSettingsMoreInfo" IsModal="True" DisableStatesBelow="True" Layout="Common" Owner="All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="NewGameSettingsInformationPopup_c.xaml" Layer="HUDTop"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: HUD CombatLog-->
		<ls:State Name = "CombatLog" Layout = "Player" Owner = "Player" HideStatesBelow = "False" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="CombatLog_c.xaml" Layer="HUD"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "ToggleCombatLog">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: MainMenu.LoadGame-->
		<ls:State Name = "MainMenu.LoadGame" DisableStatesBelow = "True" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="LoadGame_c.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "LoadGameClose">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.LoadGameClose">
					<ls:StateEvent.Actions>

						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="CommonMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Paused.LoadGame-->
		<ls:State Name = "Paused.LoadGame" Layout = "Common" Owner = "All" DisableStatesBelow = "True" HideStatesBelow = "True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="LoadGame_c.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "LoadGameClose">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.LoadGameClose">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="CommonMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseCursor">
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Paused.SaveGame-->
		<ls:State Name = "Paused.SaveGame" Layout = "Common" Owner = "All"  DisableStatesBelow = "True" HideStatesBelow = "True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="SaveGame_c.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "SaveGameClose">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="CommonMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenNewSaveDialog">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SaveGame.InputSaveName"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: SaveGame.InputSaveName-->
		<ls:State Name = "SaveGame.InputSaveName" DisableStatesBelow = "True" Layout = "Common" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="SaveGameInputSaveNameDialog_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="CommonMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseMessageBox">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Trade-->
		<ls:State Name = "Trade" HideStatesBelow = "True" DisableStatesBelow="True" Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Trade_c.xaml" Layer="Panels"/>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "OpenContainerInventory">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ContainerInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "SplitItemToggle">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SplitItem"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenExamine">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Examine"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSortInventory">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="SortInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseAllFullscreen">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "SortInventory" Layout = "Player" Owner = "Player" DisableStatesBelow="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="SortInventory_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "IE.UICancel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Examine-->
		<ls:State Name = "Examine" DisableStatesBelow = "True" HideStatesBelow = "False" IsModal="True"  Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Examine_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "IE.UICancel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: ExamineSurfaces-->
		<ls:State Name = "ExamineSurfaces" DisableStatesBelow = "True" HideStatesBelow = "False" IsModal="True"  Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ExamineSurfaces_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "IE.UICancel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Options-->
		<ls:State Name = "Options" Layout = "Common" Owner = "All" DisableStatesBelow = "True" HideStatesBelow = "True" IsModal="True">
			<ls:State.InitialSubstates>
				<ls:InitialSubstate Name="GameOptions"/>
			</ls:State.InitialSubstates>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenAudioOptions">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="AudioOptions"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenVideoOptions">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="VideoOptions"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenGameOptions">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="GameOptions"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenKeybindingOptions">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="KeybindingOptions"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenControllerOptions">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="ControllerOptions"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenInterfaceOptions">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="InterfaceOptions"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenAccessibilityOptions">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="AccessibilityOptions"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenControllerRebinding">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ControllerRebinding"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="CommonMessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenHDR">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="HDRCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenGammaCalibration">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="GammaCalibration"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseGameOptions">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Audio Options-->
		<ls:State Name = "AudioOptions" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AudioOptions_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Video Options-->
		<ls:State Name = "VideoOptions" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="VideoOptions_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Game Options-->
		<ls:State Name = "GameOptions" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="GameOptions_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Keybinding Options-->
		<ls:State Name = "KeybindingOptions" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="KeybindingOptions_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Controller Options-->
		<ls:State Name = "ControllerOptions" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ControllerOptions_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Interface Options-->
		<ls:State Name = "InterfaceOptions" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="InterfaceOptions_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>
		</ls:State>

		<!--STATE: Accessibility Options-->
		<ls:State Name = "AccessibilityOptions" Layout = "Common" Owner = "All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AccessibilityOptions_c.xaml" Layer="Pause" SoundLayer="EscapeMenu"/>
			</ls:State.Widgets>
		</ls:State>

		<ls:State Name = "ControllerRebinding" DisableStatesBelow = "True" Layout = "Player" Owner = "Player" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ControllerRebinding.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Container Inventory -->
		<ls:State Name = "ContainerInventory" DisableStatesBelow = "False" IsModal="True"  Layout = "Player" Owner = "Player" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Container_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseAll">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "SplitItemToggle">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SplitItem"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenContainerInventory">

				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Pickpocket -->
		<ls:State Name = "Pickpocket" DisableStatesBelow = "False" IsModal="True" Layout = "Player" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Pickpocket_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "SplitItemToggle">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SplitItem"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Combine UI-->
		<ls:State Name="Combine" DisableStatesBelow="True" Layout="Player" Owner="Player" IsModal="True" TutorialLayer="Combine">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Combine_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenSortInventory">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="SortInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>
		
		<!--STATE: Insert UI-->
		<ls:State Name="Insert" DisableStatesBelow="True" IsModal="True" Layout="Player" Owner="Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Insert_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSortInventory">
					<ls:StateEvent.Actions>
						<ls:SetSubstate Name="SortInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "SplitItemToggle">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SplitItem"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Active Roll -->
		<ls:State Name = "ActiveRoll" DisableStatesBelow = "True" HideStatesBelow="True" IsModal="True" Layout = "Adaptive" Owner = "Player">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ActiveRoll_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenTutorial">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Tutorial"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>				
				<ls:StateEvent Name = "OpenSelectionFlyOut">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SelectionFlyOut"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ToggleGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Active Search -->
		<ls:State Name = "ActiveSearch" DisableStatesBelow = "True" Layout = "Player" IsModal = "True" Owner = "Player" IsModalCameraControlAllowed = "True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ActiveSearch_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.UICancel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenContainerInventory">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="ContainerInventory"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenSelectionFlyOut">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SelectionFlyOut"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.ToggleInGameMenu">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Paused"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "ShowBook">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="Book"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenCombine">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Combine"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenExamine">
					<ls:StateEvent.Actions>
						<ls:PushState Name="Examine"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name="OpenMakeCamp">
					<ls:StateEvent.Actions>
						<ls:PushState Name="MakeCamp"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: CharacterAssign -->
		<ls:State Name = "CharacterAssign" DisableStatesBelow = "True" HideStatesBelow = "True" Layout = "Player" Owner = "Player" IsModal="True" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="CharacterAssign_c.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "ConnectivityMenuOpen">
					<ls:StateEvent.Actions>
						<ls:PushState Name="ConnectivityMenu"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseMessageBox">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: ConnectivityMenu -->
		<ls:State Name = "ConnectivityMenu" DisableStatesBelow = "True" Layout = "Player" Owner = "Player" IsModal="True" ForceSplitscreen="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ConnectivityMenu_c.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseMessageBox">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: LobbyBrowser-->
		<ls:State Name = "LobbyBrowser" HideStatesBelow="True"  DisableStatesBelow = "True" Layout = "Common" Owner = "DefaultPlayer">
			<ls:State.Widgets>
				<ls:StateWidget Filename="LobbyBrowser_c.xaml" Layer="Panels" />
				<ls:StateWidget Filename="Notification_c.xaml" Layer="MessageBox"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "Lobby" Layout = "Common" Owner = "All" DisableStatesBelow = "True" HideStatesBelow = "True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="Lobby_c.xaml" Layer="Panels"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "GE.Lobby">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<!-- Compared to KBM, we open custom only when the player wants to-->
				<ls:StateEvent Name="OpenCustom"/>

				<ls:StateEvent Name="EditCustom">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="GameSettings" MetaData="Lobby"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<!--STATE: Tutorials - The modal tutorial showing and highlighting other UIs while explaining their use-->
		<ls:State Name="Tutorial" Layout="Player" Owner="Player" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Tutorial_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="ActOver" DisableStatesBelow="True" Layout="Player" Owner="Player" HideStatesBelow = "True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="OverviewMap.xaml" Layer="Pause"/>
			</ls:State.Widgets>
			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.UICancel">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
				<ls:StateEvent Name = "IE.UIAccept">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "Busy" Layout = "Common" Owner = "All" DisableStatesBelow = "False" HideStatesBelow = "False" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Busy.xaml" Layer="Pause"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "GE.OnBusyHide">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "Saving" Layout = "Common" Owner = "All" DisableStatesBelow = "True" HideStatesBelow = "False" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="Saving.xaml" Layer="Notifications"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "GE.OnSaveHide">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "Movie" Layout = "Common" Owner = "All" DisableStatesBelow = "True" HideStatesBelow = "True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="AlwaysOnTopOverlay.xaml" Layer="MessageBox"/>
				<ls:StateWidget Filename="ScreenFade.xaml" Layer="ScreenFade" BlockedLoading="True"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "GE.OnMovieHide">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "LongRest" Layout = "Player" Owner = "Player" DisableStatesBelow = "True" HideStatesBelow = "True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="LongRest.xaml" Layer="Pause"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "HideLongRest">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="MakeCamp" Layout="Player" Owner="Player" DisableStatesBelow="True" HideStatesBelow="True" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="MakeCamp_c.xaml" Layer="PopupPanels"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseWidget">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "CloseMakeCamp">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenMessageBox">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="MessageBox"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "SplitItemToggle">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="SplitItem"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>

				<ls:StateEvent Name = "OpenPinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:AddSubstate Name="PinnedTooltips"/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="ControllerCursor" Layout="Player" Owner="Player" >
			<ls:State.Widgets>
				<ls:StateWidget Filename="CursorPointer.xaml" Layer="HUD"/>
			</ls:State.Widgets>

			<ls:State.Events>
				<ls:StateEvent Name = "CloseCursor">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name="PinnedTooltips" Layout="Player" Owner="Player" DisableStatesBelow="False" IsModal="True">
			<ls:State.Widgets>
				<ls:StateWidget Filename="PinnedTooltips_c.xaml" Layer="Notifications" BlockedLoading="True"/>
			</ls:State.Widgets>


			<ls:State.Events>
				<ls:StateEvent Name="ClosePinnedTooltips">
					<ls:StateEvent.Actions>
						<ls:RemoveState/>
					</ls:StateEvent.Actions>
				</ls:StateEvent>
			</ls:State.Events>
		</ls:State>

		<ls:State Name = "OverlayShared" DisableStatesBelow = "False" HideStatesBelow = "False" Layout="Common" Owner="All">
			<ls:State.Widgets>
				<ls:StateWidget Filename="OverlayShared_c.xaml" Layer="Notifications"/>
			</ls:State.Widgets>
		</ls:State>
	</ls:StateMachine.States>
</ls:StateMachine>
