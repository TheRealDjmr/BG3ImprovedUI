<!--

	Resources common to both keyboard and controller versions of CC & LevelUp
	
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:System="clr-namespace:System;assembly=mscorlib"
					xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
					xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="DataTemplates.xaml"/>
		<ResourceDictionary Source="DiceAnimation.xaml"/>
		<!-- MOD START - Custom modded icon files to load -->
		<ResourceDictionary Source="../Library/IUI_DeityIcons.xaml"/>
		<ResourceDictionary Source="Plus CC Colors.xaml"/>
		<ResourceDictionary Source="../Library/Colorful Words for CC.xaml"/>
		<ResourceDictionary Source="../Colorful Words Master.xaml" />
		<!-- MOD END -->
	</ResourceDictionary.MergedDictionaries>

	<!-- CC Grid Icons -->
	<SolidColorBrush x:Key="CCIconDefault" Color="{StaticResource baseColor}"/>
	<SolidColorBrush x:Key="CCIconSelected" Color="{StaticResource accent75Color}"/>
	<SolidColorBrush x:Key="CCIconSelectedPad" Color="{StaticResource accent100Color}"/>
	<SolidColorBrush x:Key="CCIconHovered" Color="{StaticResource accent75Color}"/>

	<SolidColorBrush x:Key="CCTextPrimary" Color="{StaticResource tint100}"/>
	<SolidColorBrush x:Key="CCTextNormal" Color="{StaticResource baseColor}"/>
	<SolidColorBrush x:Key="CCTextLight" Color="{StaticResource accent75Color}"/>
	<SolidColorBrush x:Key="CCTextLightest" Color="{StaticResource accent100Color}"/>
	<SolidColorBrush x:Key="CCTextSpecial" Color="{StaticResource accent25Color}"/>

	<SolidColorBrush x:Key="CCTabSelected" Color="{StaticResource tint100}"/>
	<SolidColorBrush x:Key="CCTabToDo" Color="{StaticResource alertColor}"/>
	<SolidColorBrush x:Key="CCTabDone" Color="{StaticResource baseColor}"/>

	<BitmapImage x:Key="LevelUpBanner" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/bannergame.png"/>
	<BitmapImage x:Key="IconRace" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_race.png"/>
	<BitmapImage x:Key="IconClass" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class.png"/>
	<BitmapImage x:Key="IconLock" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_lock.png"/>
	<BitmapImage x:Key="IconLevelUpCross" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_levelup_d.png"/>
	<BitmapImage x:Key="DetailsBoxSmall" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/detailsBox_small.png"/>
	<BitmapImage x:Key="DetailsBoxBig" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/detailsBox_big.png"/>
	<BitmapImage x:Key="SpellReplaceFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/frame_singleItem.png"/>
	<BitmapImage x:Key="SpellReplaceOutOverlay" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/overlay_replacer_out.png"/>
	<BitmapImage x:Key="SpellSlot" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/spellslot.png"/>
	<BitmapImage x:Key="SelectorSpellSlot" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/selector_spellslot.png"/>
	<BitmapImage x:Key="RemoverSpellSlot" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterCreation/remover_spellslot.png"/>

	<System:String x:Key="CarouselButtonSoundEvent">UI_HUD_CC_Class_Passive</System:String>

	<System:Single x:Key="RightRotationRate">1.5</System:Single>
	<System:Single x:Key="LeftRotationRate">-1.5</System:Single>
	<System:Single x:Key="StopRotationRate">0.0</System:Single>

	<ls:LSTooltip x:Key="CCSpellTooltip" Content="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
	<ls:LSTooltip x:Key="CCSpellRefTooltip" Content="{Binding Path=DataContext.Spell, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding Path=DataContext.Spell, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}}"/>

	<Style x:Key="MissingRequirementsErrorStyle" TargetType="{x:Type ls:LSNineSliceImage}" BasedOn="{StaticResource {x:Type ls:LSNineSliceImage}}">
		<Setter Property="ImageSource" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Notification/errorNotice_bg.png"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Slices" Value="40"/>
		<Setter Property="Padding" Value="52,0"/>
		<Setter Property="Height" Value="124"/>
		<Setter Property="MinWidth" Value="100"/>
		<Setter Property="Panel.ZIndex" Value="1"/>
		<Style.Triggers>
			<Trigger Property="Content" Value="{x:Null}">
				<Setter Property="Template" Value="{StaticResource ContentNineSlice}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="PanelSubHeaderText" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource CCTextPrimary}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
	</Style>
	<Style x:Key="OverPanelHeaderText" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource CCTextPrimary}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
	</Style>
	<Style x:Key="StatsText" TargetType="TextBlock">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource CCTextLight}"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
	</Style>    
	
	<Style x:Key="selectorPreviewText" TargetType="TextBlock">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource CCTextPrimary}"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Margin" Value="48,0"/>
	</Style>

	<Style x:Key="UpdateStateItemStyle" TargetType="FrameworkElement">
		<Setter Property="Visibility" Value="Collapsed"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding UpdateState}" Value="New">
				<Setter Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding UpdateState}" Value="Replaced">
				<Setter Property="Visibility" Value="Visible"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>    
	
	<!-- MOD START - Custom Deity icons -->
	<Style x:Key="DeityIconStyle" TargetType="Rectangle" BasedOn="{StaticResource IUI_DeityIconStyle}">
		<!-- MOD END -->
		<Style.Triggers>
			<DataTrigger Binding="{Binding Guid}" Value="182b6754-ca35-436a-a17a-8d30fe8e8179">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Oghma.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="7f990c80-7c33-4e29-a73c-0317f46e9dc6">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Selune.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="2eb3557f-7ada-41d6-a892-e02def72ef77">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Shar.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="acb14573-c20c-41d7-9d63-007f0afe582b">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Talos.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="614180f6-1887-4a54-920b-b0428ebca99e">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Tempus.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="30da56bc-ab24-4641-86d7-0560d8ba1681">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Tiamat.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="24fe5266-6ec9-4864-83ab-de2d374638e3">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Tymora.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="e32d20f7-a46f-40f1-ae4a-c47b45d6d348">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Tyr.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="5d733ec3-ad9a-4d26-bc9c-46a597b109b3">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Vlaakith.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="4bf364ec-f3ac-4ec1-9269-40a7f2a39a63">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Yondolla.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="f5084c3e-5ced-4d42-9e54-842d080d389f">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Bahamut.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="78352132-4ac3-44a1-abd4-c4129d284ffb">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Bane.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="a53de00b-9856-495c-b9f9-aac8bbae7f3b">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Bhaal.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="c3fdb44c-1743-458d-a688-15a25fda4c06">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Corellon.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="f7c7d010-40c4-4f32-baa0-433f8b0eb6e1">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Elistrae.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="f48231ce-96d1-4ff6-b974-d3bead8302c5">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Garl.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="f50690bc-8364-4a8c-83d7-3f9bf4878546">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Gruumsh.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="a6b25ccc-4df9-4a28-a599-7f409d9fbc4f">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Helm.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="ac739c37-99c5-4e8f-9658-de6bd84ba969">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Ilmater.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="4dded16c-9936-4c54-9454-957d4ba9583a">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Kelemvor.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="eba713d1-bfa3-4117-8680-6d07ce1f29f0">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Laduguer.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="a3f608b1-2190-4761-8844-e5a398b37384">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Lathandar.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="751cddf4-4aa1-40d8-9c49-b8cd8e48b52d">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Lolth.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="8985ae89-0e72-4ebb-b4f6-14e4ecdd2c74">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Mielikki.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="468fbf60-95c5-4b75-a315-dd4064ee39d8">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Moradin.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="36c799c5-9193-47d9-9ba3-2ff944948985">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Myrkul.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
			<DataTrigger Binding="{Binding Guid}" Value="3e1c9bfc-f15c-46c1-8c2d-725da5e4d896">
				<Setter Property="OpacityMask">
					<Setter.Value>
						<ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_deities/Mystra.png"/>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="abilityIconStyle" TargetType="Image">
		<Setter Property="Stretch" Value="None"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Ability}" Value="Strength">
				<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_strength.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Ability}" Value="Constitution">
				<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_constitution.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Ability}" Value="Dexterity">
				<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_dexterity.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Ability}" Value="Intelligence">
				<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_intelligence.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Ability}" Value="Wisdom">
				<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_wisdom.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Ability}" Value="Charisma">
				<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/icons_abilities/ico_charisma.png"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Storyboard x:Key="ExclamationAnim" RepeatBehavior="Forever" Duration="0:0:0.5">
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Image.Source)" Storyboard.TargetName="cross">
			<DiscreteObjectKeyFrame KeyTime="0:0:0">
				<DiscreteObjectKeyFrame.Value>
					<BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_exclamation_01.png" />
				</DiscreteObjectKeyFrame.Value>
			</DiscreteObjectKeyFrame>
			<DiscreteObjectKeyFrame KeyTime="0:0:0.25">
				<DiscreteObjectKeyFrame.Value>
					<BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_exclamation_02.png" />
				</DiscreteObjectKeyFrame.Value>
			</DiscreteObjectKeyFrame>
		</ObjectAnimationUsingKeyFrames>
	</Storyboard>

	<ControlTemplate x:Key="clearCameraOffsets">
		<Canvas>
			<b:Interaction.Triggers>
				<b:EventTrigger EventName="Loaded">
					<b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
						<b:InvokeCommandAction.CommandParameter>
							<MultiBinding Converter="{StaticResource PassThroughConverter}">
								<Binding>
									<Binding.Source>
										<System:Single>0</System:Single>
									</Binding.Source>
								</Binding>
								<Binding>
									<Binding.Source>
										<System:Single>0</System:Single>
									</Binding.Source>
								</Binding>
								<Binding>
									<Binding.Source>
										<System:Single>0</System:Single>
									</Binding.Source>
								</Binding>
							</MultiBinding>
						</b:InvokeCommandAction.CommandParameter>
					</b:InvokeCommandAction>
				</b:EventTrigger>
			</b:Interaction.Triggers>
		</Canvas>
	</ControlTemplate>

	<ControlTemplate x:Key="setGameplayCameraOffsets">
		<Canvas x:Name="base" Visibility="{TemplateBinding Visibility}">
			<b:Interaction.Triggers>
				<b:DataTrigger Binding="{Binding ElementName=base, Path=IsVisible}" Value="True">
					<b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
						<b:InvokeCommandAction.CommandParameter>
							<MultiBinding Converter="{StaticResource PassThroughConverter}">
								<Binding>
									<Binding.Source>
										<System:Single>-14.8</System:Single>
									</Binding.Source>
								</Binding>
								<Binding>
									<Binding.Source>
										<System:Single>-6.5</System:Single>
									</Binding.Source>
								</Binding>
								<Binding>
									<Binding.Source>
										<System:Single>-6.15</System:Single>
									</Binding.Source>
								</Binding>
							</MultiBinding>
						</b:InvokeCommandAction.CommandParameter>
					</b:InvokeCommandAction>
				</b:DataTrigger>
			</b:Interaction.Triggers>
		</Canvas>
	</ControlTemplate>
	
	<ControlTemplate x:Key="setOverviewCamera">
		<Canvas>
			<b:Interaction.Triggers>
				<b:EventTrigger EventName="Loaded">
					<b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
				</b:EventTrigger>
			</b:Interaction.Triggers>
			<Control Template="{StaticResource setGameplayCameraOffsets}"/>
		</Canvas>
	</ControlTemplate>

	<ControlTemplate x:Key="setNamingCamera">
		<Canvas x:Name="base" Visibility="{TemplateBinding Visibility}">
			<b:Interaction.Triggers>
				<b:DataTrigger Binding="{Binding ElementName=base, Path=Visibility}" Value="Visible">
					<b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="CloseupA"/>
					<b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
						<b:InvokeCommandAction.CommandParameter>
							<MultiBinding Converter="{StaticResource PassThroughConverter}">
								<Binding>
									<Binding.Source>
										<System:Single>-6.0</System:Single>
									</Binding.Source>
								</Binding>
								<Binding>
									<Binding.Source>
										<System:Single>-2.2</System:Single>
									</Binding.Source>
								</Binding>
								<Binding>
									<Binding.Source>
										<System:Single>-2.2</System:Single>
									</Binding.Source>
								</Binding>
							</MultiBinding>
						</b:InvokeCommandAction.CommandParameter>
					</b:InvokeCommandAction>
				</b:DataTrigger>
			</b:Interaction.Triggers>
		</Canvas>
	</ControlTemplate>

	<ItemsPanelTemplate x:Key="gameplayItemsPanelTemplate">
		<WrapPanel MaxWidth="1156" HorizontalAlignment="Center"/>
	</ItemsPanelTemplate>

	<Style x:Key="gameplayIconGridStyle" TargetType="ListBox">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBox">
					<ItemsPresenter/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel" Value="{StaticResource gameplayItemsPanelTemplate}"/>
	</Style>

	<ControlTemplate x:Key="MultiplayerPanelTemplate">
		<StackPanel x:Name="panel" Visibility="Collapsed" Orientation="Horizontal" HorizontalAlignment="Center">

			<ItemsControl ItemsSource="{Binding Data.Players}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid x:Name="root">
							<Border Background="Black" Height="114" Width="114" />
							<Border Background="{Binding CommunityIcon}" Height="110" Width="110">
								<Border.ToolTip>
									<ls:LSTooltip Content="{Binding DataContext.Name , RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
								</Border.ToolTip>
							</Border>
							<Image x:Name="frame" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_profile_d.png" Stretch="None" IsHitTestVisible="False"/>
							<Image IsHitTestVisible="False" Visibility="{Binding Ready, Converter={StaticResource BoolToVisibleConverter}}" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_confirm.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Top"/>
							<Control Template="{DynamicResource KickButton}" VerticalAlignment="Bottom" Margin="0 0 0 -30" />
						</Grid>
						<DataTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="frame" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_profile_h.png"/>
							</Trigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

			<StackPanel x:Name="invites" Orientation="Horizontal" Margin="-10,0,0,0">
				<StackPanel.Resources>
					<ControlTemplate x:Key="InviteButtonTemplate">
						<ls:LSButton Command="{Binding DataContext.InvitePlayer, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_Shared_Invite">
							<ls:LSButton.ToolTip>
								<ls:LSTooltip Content="{Binding Source='h5bacb1e0geecag4473g9aa1g3f3ed207377e',Converter={StaticResource TranslatedStringConverter}, ConverterParameter='ToUpper'}"/>
							</ls:LSButton.ToolTip>
							<ls:LSButton.Template>
								<ControlTemplate TargetType="ls:LSButton">
									<Image x:Name="img" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_d.png" Stretch="None"/>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_h.png" TargetName="img"/>
										</Trigger>
										<Trigger Property="IsPressed" Value="True">
											<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_p.png" TargetName="img"/>
										</Trigger>
										<Trigger Property="IsEnabled" Value="False">
											<Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/frame_addToParty_disabled.png" TargetName="img"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ls:LSButton.Template>
						</ls:LSButton>
					</ControlTemplate>
				</StackPanel.Resources>
				<ContentControl x:Name="invite0" Visibility="Collapsed" Template="{StaticResource InviteButtonTemplate}"/>
				<ContentControl x:Name="invite1" Visibility="Collapsed" Template="{StaticResource InviteButtonTemplate}"/>
				<ContentControl x:Name="invite2" Visibility="Collapsed" Template="{StaticResource InviteButtonTemplate}"/>
			</StackPanel>
		</StackPanel>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Layout}" Value="Common">
				<Setter TargetName="panel" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding IsHost}" Value="False">
				<Setter Property="Visibility" Value="Hidden"/>
				<Setter TargetName="invites" Property="Visibility" Value="Hidden"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DataContext.Data.LobbyVisibility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Offline">
				<Setter Property="Visibility" Value="Hidden"/>
				<Setter TargetName="invites" Property="Visibility" Value="Hidden"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Data.Players.Count}" Value="1">
				<Setter TargetName="invite0" Property="Visibility" Value="Visible"/>
				<Setter TargetName="invite1" Property="Visibility" Value="Visible"/>
				<Setter TargetName="invite2" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Data.Players.Count}" Value="2">
				<Setter Property="Visibility" Value="Visible"/>
				<Setter TargetName="invite0" Property="Visibility" Value="Visible"/>
				<Setter TargetName="invite1" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Data.Players.Count}" Value="3">
				<Setter Property="Visibility" Value="Visible"/>
				<Setter TargetName="invite0" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Data.Players.Count}" Value="4">
				<Setter Property="Visibility" Value="Visible"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>



	<Style x:Key="SpellSelectorItemControlStyle" TargetType="ItemsControl">
		<Setter Property="ItemsControl.ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<WrapPanel MaxWidth="630"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsControl.ItemTemplate" Value="{DynamicResource SpellRefIcon}"/>
	</Style>


	<ImageBrush x:Key="missingIconBrush" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/ico_class.png"/>


	<ControlTemplate x:Key="ShowFeaturesTemplate" TargetType="ContentControl">
		<ls:LSNineSliceImage Padding="50,0,50,32" Slices="100,80,100,80" MinWidth="388" MaxWidth="1000" MinHeight="200" ImageSource="{StaticResource DetailsBoxSmall}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}" HorizontalAlignment="Center" Margin="0,20,0,0">
			<StackPanel>
				<TextBlock ls:TextBlockFormatter.SourceText="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource selectorPreviewText}" MaxWidth="808"/>
				<ItemsControl ItemsSource="{Binding .}" ItemTemplate="{DynamicResource FeatureIcon}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,16,0,-16">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel MaxWidth="900"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
			</StackPanel>
		</ls:LSNineSliceImage>
	</ControlTemplate>

	<ControlTemplate x:Key="LevelUpShowFeaturesTemplate" TargetType="ContentControl">
		<ContentControl Template="{DynamicResource NewItemStripTemplate}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}">
			<StackPanel>
				<TextBlock ls:TextBlockFormatter.SourceText="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Center" FontSize="{StaticResource ScaledDefaultFontSize}"/>
				<ItemsControl ItemsSource="{Binding .}" ItemTemplate="{DynamicResource FeatureIcon}" HorizontalAlignment="Center" VerticalAlignment="Center">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel MaxWidth="900"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
				</ItemsControl>
			</StackPanel>
		</ContentControl>
	</ControlTemplate>

	<ControlTemplate x:Key="ShowSpellsTemplate" TargetType="ContentControl">
		<ControlTemplate.Resources>
			<DataTemplate x:Key="FeatureIcon">
				<Control Template="{DynamicResource SpellIconTemplate}"/>
			</DataTemplate>
		</ControlTemplate.Resources>
		<ContentControl x:Name="Content" Template="{StaticResource ShowFeaturesTemplate}" Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding ParentState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="CharacterLevelUp">
				<Setter TargetName="Content" Property="Template" Value="{StaticResource LevelUpShowFeaturesTemplate}"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="boostList">
		<ItemsControl x:Name="itemsControl" ItemsSource="{Binding .}" AlternationCount="{Binding Count}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel Width="550" IsItemsHost="True"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate DataType="ls:VMFeatureBoost">

					<StackPanel x:Name="item" Orientation="Horizontal">
						<StackPanel.Resources>
							<Style TargetType="TextBlock">
								<Setter Property="Foreground" Value="{StaticResource CCTextNormal}"/>
								<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
							</Style>
						</StackPanel.Resources>
						<StackPanel.Tag>
							<MultiBinding Converter="{StaticResource EqualConverter}">
								<Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
								<Binding Path="DataContext.Count" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
							</MultiBinding>
						</StackPanel.Tag>
						<Control x:Name="label" Visibility="Collapsed" Template="{DynamicResource labelTemplate}"/>
						<TextBlock x:Name="text" ls:TextBlockFormatter.SourceText="{Binding ShortName}" ToolTip="{StaticResource ManagedTooltip}" Foreground="{StaticResource CCTextNormal}"/>
						<TextBlock x:Name="separator" ls:TextBlockFormatter.SourceText="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}"/>
					</StackPanel>

					<DataTemplate.Triggers>
						<Trigger Property="ItemsControl.AlternationIndex" Value="0">
							<Setter TargetName="label" Property="Visibility" Value="Visible"/>
						</Trigger>
						<DataTrigger Binding="{Binding Tag, ElementName=item}" Value="True">
							<Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
					</DataTemplate.Triggers>

				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
	</ControlTemplate>

	<ControlTemplate x:Key="skillProgressions">
		<ItemsControl ItemsSource="{Binding .}" AlternationCount="{Binding Count}" Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel MaxWidth="550" IsItemsHost="True"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate DataType="ls:VMSkill">
					<StackPanel x:Name="item" Orientation="Horizontal">
						<StackPanel.Resources>
							<Style TargetType="TextBlock">
								<Setter Property="Foreground" Value="{StaticResource CCTextNormal}"/>
								<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
							</Style>
							<Style TargetType="Control">
								<Setter Property="Foreground" Value="{StaticResource CCTextNormal}"/>
								<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
							</Style>
						</StackPanel.Resources>
						<StackPanel.Tag>
							<MultiBinding Converter="{StaticResource EqualConverter}">
								<Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
								<Binding Path="DataContext.Count" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
							</MultiBinding>
						</StackPanel.Tag>

						<TextBlock x:Name="label" Visibility="Collapsed" Foreground="{StaticResource CCTextPrimary}" ls:TextBlockFormatter.SourceText="{Binding Source=h12abe296ga0fbg44feg9451gb10a0bf92acb, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} - '}" />
						<Control Template="{StaticResource SkillDisplayName}" ToolTip="{StaticResource ManagedTooltip}"/>
						<TextBlock Text="(&#x00D7;2)" Visibility="{Binding IsExpert, Converter={StaticResource BoolToVisibleConverter}}"/>
						<TextBlock x:Name="separator" ls:TextBlockFormatter.SourceText="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}"/>
					</StackPanel>
					<DataTemplate.Triggers>
						<Trigger Property="ItemsControl.AlternationIndex" Value="0">
							<Setter TargetName="label" Property="Visibility" Value="Visible"/>
						</Trigger>
						<DataTrigger Binding="{Binding Tag, ElementName=item}" Value="True">
							<Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
	</ControlTemplate>

	<Style x:Key="SummaryClassIconsStyle" TargetType="ItemsControl">
		<Setter Property="ItemsSource" Value="{Binding DummyCharacter.stats.ClassList}"/>
		<Setter Property="Visibility" Value="{Binding DataContext.DummyCharacter.stats.ClassList.Count, Converter={StaticResource LessThanConverter}, ConverterParameter=5}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<WrapPanel MaxWidth="450"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<Image x:Name="icon" DataContext="{Binding .}" Style="{StaticResource MainClassIconStyle}" Stretch="Uniform" MaxWidth="100"/>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding ElementName=summaryClassIcon, Path=DataContext.DummyCharacter.stats.ClassList.Count}" Value="1">
							<Setter TargetName="icon" Property="MaxWidth" Value="300"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=summaryClassIcon, Path=DataContext.DummyCharacter.stats.ClassList.Count}" Value="2">
							<Setter TargetName="icon" Property="MaxWidth" Value="200"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=summaryClassIcon, Path=DataContext.DummyCharacter.stats.ClassList.Count}" Value="3">
							<Setter TargetName="icon" Property="MaxWidth" Value="150"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="summaryPanelContents">
		<StackPanel>
			<StackPanel.Resources>
				<Style TargetType="TextBlock">
					<Setter Property="HorizontalAlignment" Value="Center"/>
					<Setter Property="Foreground" Value="{StaticResource CCTextPrimary}"/>
					<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
				</Style>
			</StackPanel.Resources>

			<ItemsControl x:Name="summaryClassIcon" Style="{StaticResource SummaryClassIconsStyle}" Margin="0,-20,0,-40"/>

			<TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.Race.DisplayName}" Style="{StaticResource StatsText}">
				<TextBlock.ToolTip>
					<ls:LSTooltip>
						<TextBlock ls:TextBlockFormatter.SourceText="{Binding Path=DataContext.DummyCharacter.Stats.Race.Description, ElementName=summary}" TextWrapping="Wrap"/>
					</ls:LSTooltip>
				</TextBlock.ToolTip>   
			</TextBlock>

			<!-- Class/Classes -->
			<ItemsControl ItemsSource="{Binding DummyCharacter.Stats.ClassList}" AlternationCount="{Binding DummyCharacter.Stats.ClassList.Count}" HorizontalAlignment="Center">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<ls:AlignableWrapPanel HorizontalContentAlignment="Center" IsItemsHost="True" MaxWidth="610"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate DataType="ls:VMClass">
						<StackPanel x:Name="class" Orientation="Horizontal">
							<StackPanel.ToolTip>
								<ls:LSTooltip>
									<TextBlock ls:TextBlockFormatter.SourceText="{Binding Path=DataContext.ClassDescription, ElementName=class}" FontSize="{StaticResource ScaledDefaultFontSize}" TextWrapping="Wrap"/>
								</ls:LSTooltip>
							</StackPanel.ToolTip>
							<StackPanel.Resources>
								<Style TargetType="TextBlock">
									<Setter Property="Foreground" Value="{StaticResource CCTextLightest}"/>
									<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
								</Style>
							</StackPanel.Resources>
							<StackPanel.Tag>
								<MultiBinding Converter="{StaticResource EqualConverter}">
									<Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
									<Binding Path="DataContext.DummyCharacter.Stats.ClassList.Count" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
								</MultiBinding>
							</StackPanel.Tag>
 
							<TextBlock x:Name="classInfo">
								<TextBlock.Text>
									<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
										<Binding Source="hd678d4eeg181fg499dg9e81g2146ab24e03a"/>
										<Binding Path="DataContext.Level.Value" RelativeSource="{RelativeSource Mode=Self}"/>
										<Binding Path="DataContext.ClassDisplayName" RelativeSource="{RelativeSource Mode=Self}"/>
									</MultiBinding>
								</TextBlock.Text>
							</TextBlock>

							<TextBlock x:Name="separator" Text=" / "/>
						</StackPanel>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Tag, ElementName=class}" Value="True">
								<Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>

				</ItemsControl.ItemTemplate>
			</ItemsControl>

			<TextBlock x:Name="SubclassLabel" HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Text="{Binding DummyCharacter.Stats.ClassList[0].SubclassDisplayName}" Style="{StaticResource StatsText}" Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={StaticResource NullToCollapsedConverter}, ConverterParameter='EmptyString'}">
				<TextBlock.ToolTip>
					<ls:LSTooltip>
						<TextBlock ls:TextBlockFormatter.SourceText="{Binding Path=DataContext.DummyCharacter.Stats.ClassList[0].SubclassDescription, ElementName=SubclassLabel}" TextWrapping="Wrap"/>
					</ls:LSTooltip>
				</TextBlock.ToolTip>
			</TextBlock>

			<TextBlock x:Name="deity" Text="{Binding DummyCharacter.Stats.God}" Style="{StaticResource StatsText}" Visibility="{Binding DummyCharacter.Stats.God, Converter={StaticResource StringToVisibilityConverter}}">
				<TextBlock.ToolTip>
					<ls:LSTooltip>
						<TextBlock ls:TextBlockFormatter.SourceText="{Binding Path=DataContext.DummyCharacter.Stats.GodDescription, ElementName=deity}" TextWrapping="Wrap"/>
					</ls:LSTooltip>
				</TextBlock.ToolTip>                
			</TextBlock>

			<Viewbox Width="612" Height="150" Stretch="Uniform" StretchDirection="DownOnly" Margin="0,10,0,0">
				<ItemsControl x:Name="Abilities" ItemsSource="{Binding DummyCharacter.Stats.Abilities}" HorizontalAlignment="Center">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Horizontal"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="ls:VMAbility">
							<StackPanel x:Name="base" Background="Transparent" Margin="12,0,12,0" ToolTip="{StaticResource ManagedTooltip}" ls:MoveFocus.Focusable="True" Focusable="True">
								<StackPanel.Resources>
									<Style TargetType="TextBlock">
										<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
									</Style>
								</StackPanel.Resources>
								<Image x:Name="primary" Visibility="Hidden" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/proficient_ability.png" Stretch="None" Margin="-16">
									<Image.ToolTip>
										<ls:LSTooltip IsHitTestVisible="False" ContentTemplate="{StaticResource PrimaryAbilityTooltipContentTemplate}" Style="{StaticResource ManagedTooltipStyle}"/>
									</Image.ToolTip>
								</Image>

								<Control x:Name="attrName" Template="{StaticResource AbilityShortDisplayName}" Foreground="{StaticResource CCTextLight}" />
								<TextBlock x:Name="value" ls:TextBlockFormatter.SourceText="{Binding Value}" FontSize="{StaticResource ScaledBigFontSize}" HorizontalAlignment="Center" Foreground="{StaticResource CCTextPrimary}"/>
							</StackPanel>
							<DataTemplate.Triggers>
								<DataTrigger Binding="{Binding IsPrimary}" Value="True">
									<Setter TargetName="primary" Property="Visibility" Value="Visible"/>

								</DataTrigger>
								<DataTrigger Binding="{Binding Path=IsFocused, ElementName=base}" Value="True">
									<Setter TargetName="attrName" Property="Foreground" Value="{StaticResource CCTextPrimary}"/>
								</DataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Viewbox>

			<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,0">
				<Grid x:Name="statInitiative" DataContext="{Binding DummyCharacter.Stats.Initiative}" ToolTip="{StaticResource PlacementParentDCTooltip}" Visibility="{Binding Value, Converter={StaticResource CountToVisibilityConverter}}" ls:MoveFocus.Focusable="True" Focusable="True">
					<Image Source="/GustavNoesisGUI;component/Assets/CharacterPanel/mainStats_basic_single.png" Stretch="None" />
					<Image Source="/GustavNoesisGUI;component/Assets/CharacterPanel/ico_initiative.png" Stretch="None" VerticalAlignment="Top" Margin="0,-8,0,0"/>
					<TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,8"  FontSize="{DynamicResource ScaledSmallishFontSize}" Text="{Binding Value, StringFormat={}{0:+#;-#;0}}"/>
				</Grid>

				<Grid x:Name="statHealth" DataContext="{Binding DummyCharacter.Stats.Health}" ToolTip="{StaticResource PlacementParentDCTooltip}" Visibility="{Binding Max, Converter={StaticResource CountToVisibilityConverter}}" Margin="20,0,20,0" ls:MoveFocus.Focusable="True" Focusable="True">
					<Image Source="/GustavNoesisGUI;component/Assets/CharacterPanel/mainStats_basic_single.png" Stretch="None"/>
					<Image Source="/GustavNoesisGUI;component/Assets/CharacterPanel/ico_hp.png" Stretch="None" VerticalAlignment="Top" Margin="0,8,0,0"/>
					<TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,8" FontSize="{DynamicResource ScaledSmallishFontSize}" Text="{Binding Max}"/>
				</Grid>

				<Grid x:Name="statMovement" DataContext="{Binding DummyCharacter.Stats.MovementResource}" ToolTip="{StaticResource PlacementParentDCTooltip}" Visibility="{Binding Value, Converter={StaticResource CountToVisibilityConverter}}" ls:MoveFocus.Focusable="True" Focusable="True">
					<Image Source="/GustavNoesisGUI;component/Assets/CharacterPanel/mainStats_basic_single.png" Stretch="None"/>
					<Image Source="/GustavNoesisGUI;component/Assets/CharacterPanel/ico_speed.png" Stretch="None"  VerticalAlignment="Top" Margin="0,8,0,0"/>
					<TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,8" FontSize="{DynamicResource ScaledSmallishFontSize}" Text="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}"/>
				</Grid>
			</StackPanel>

			<ls:LSScrollViewer Template="{StaticResource NoForcedStyleScrollViewerTemplate}" VerticalScrollBarVisibility="Auto" Margin="0,0,0,0"
							   Padding="0,0,0,20" MaxHeight="1080" Width="630">
				<StackPanel HorizontalAlignment="Left">
			<StackPanel x:Name="Cantrips" Margin="0,20,0,0" Visibility="{Binding ProgressionCantrips.Count, Converter={StaticResource CountToVisibilityConverter}}">
				<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h7d02199dg44ecg4a1egbcacg9cc1cec197b3', Converter={StaticResource TranslatedStringConverter}}" Foreground="{DynamicResource CCTextPrimary}"/>
				<Grid HorizontalAlignment="Center">
					<Image Style="{DynamicResource SummarySpellsDecorationStyle}"/>
					<ItemsControl Style="{StaticResource SpellSelectorItemControlStyle}" ItemsSource="{Binding ProgressionCantrips}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				</Grid>
			</StackPanel>

			<StackPanel x:Name="Spells" Visibility="{Binding ProgressionSpells.Count, Converter={StaticResource CountToVisibilityConverter}}">
				<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h2975f9c0gc2aag47d9ga3b3g3dd5171b9bf4', Converter={StaticResource TranslatedStringConverter}}"/>
				<Grid HorizontalAlignment="Center">
					<Image Style="{DynamicResource SummarySpellsDecorationStyle}"/>
					<ItemsControl Style="{StaticResource SpellSelectorItemControlStyle}" ItemsSource="{Binding ProgressionSpells}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				</Grid>
			</StackPanel>

			<StackPanel x:Name="Actions" Visibility="{Binding ProgressionActions.Count, Converter={StaticResource CountToVisibilityConverter}}">
				<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h7ba895aaga020g4cf0g9ec0g6a98f5eaaa3c', Converter={StaticResource TranslatedStringConverter}}"/>
				<Grid HorizontalAlignment="Center">
					<Image Style="{DynamicResource SummarySpellsDecorationStyle}"/>
					<ItemsControl Style="{StaticResource SpellSelectorItemControlStyle}" ItemsSource="{Binding ProgressionActions}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
				</Grid>
			</StackPanel>

			<TextBlock x:Name="ProficienciesTitle" ls:TextBlockFormatter.SourceText="{Binding Source='hbdc95889g6f3fg46efg9993g036cf077a0e7', Converter={StaticResource TranslatedStringConverter}}" Margin="0,20,0,0"/>
			<StackPanel HorizontalAlignment="Center" Margin="0,10,0,20">

				<Control Template="{StaticResource boostList}" DataContext="{Binding ProgressionData.AllProgressions.WeaponProficiencies}" Visibility="{Binding ProgressionData.AllProgressions.WeaponProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">
					<Control.Resources>
						<ControlTemplate x:Key="labelTemplate">
							<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h4a198683gedadg497dg9f15ga8606e44fc56, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} - '}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}"/>
						</ControlTemplate>
					</Control.Resources>
				</Control>

				<Control Template="{StaticResource boostList}" DataContext="{Binding ProgressionData.AllProgressions.ArmourProficiencies}" Visibility="{Binding ProgressionData.AllProgressions.ArmourProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">
					<Control.Resources>
						<ControlTemplate x:Key="labelTemplate">
							<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=had29e589gd812g473bg90dfg66d1280fbbf1, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} - '}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}"/>
						</ControlTemplate>
					</Control.Resources>
				</Control>

				<Control Template="{StaticResource skillProgressions}" DataContext="{Binding SortedItems, ElementName=SortedSummarySkills}"/>

			</StackPanel>
				</StackPanel>
			</ls:LSScrollViewer>

		</StackPanel>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding ParentState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="CharacterLevelUp">
				<Setter TargetName="summaryClassIcon" Property="Margin" Value="0,10,0,0"/>
				<Setter TargetName="Abilities" Property="Margin" Value="0,54,0,30"/>
				<Setter TargetName="Cantrips" Property="Margin" Value="0,40,0,0"/>
				<Setter TargetName="Spells" Property="Margin" Value="0,20,0,0"/>
				<Setter TargetName="Actions" Property="Margin" Value="0,20,0,0"/>
				<Setter TargetName="ProficienciesTitle" Property="Margin" Value="0,40,0,0"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding SelectedClass}" Value="{x:Null}">
				<Setter TargetName="summaryClassIcon" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=SelectableSubClasses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
					<Condition Binding="{Binding SelectedSubClass}" Value="{x:Null}"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="summaryClassIcon" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=ProgressionData.AllProgressions.WeaponProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
					<Condition Binding="{Binding Path=ProgressionData.AllProgressions.ArmourProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
					<Condition Binding="{Binding Path=SortedItems.Count, ElementName=SortedSummarySkills, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ProficienciesTitle" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<!--Hide subclass when Multiclassing-->
			<DataTrigger Binding="{Binding DummyCharacter.stats.ClassList.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True" >
				<Setter TargetName="SubclassLabel" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>


			<!-- ToDo: update with assets when avaiable -->
			<DataTrigger Binding="{Binding ElementName=statInitiative, Path=IsFocused}" Value="True">
				<Setter TargetName="statInitiative" Property="Background" Value="White"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ElementName=statHealth, Path=IsFocused}" Value="True">
				<Setter TargetName="statHealth" Property="Background" Value="White"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ElementName=statMovement, Path=IsFocused}" Value="True">
				<Setter TargetName="statMovement" Property="Background" Value="White"/>
			</DataTrigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="progressionInfo">
		<StackPanel>

			<TextBlock x:Name="featuresHeader" ls:TextBlockFormatter.SourceText="{Binding Source=hc1d70a06g88a4g4ce6g8dc0ge2c17c5f0eb2, Converter={StaticResource TranslatedStringConverter}}" Visibility="{Binding Other.Count, Converter={StaticResource CountToVisibilityConverter}}" HorizontalAlignment="Center"/>
			<ItemsControl ItemsSource="{Binding Other}">
				<ItemsControl.ItemTemplate>
					<DataTemplate DataType="ls:VMFeatureBoost">
						<StackPanel Orientation="Horizontal" Margin="0,20,0,0">
							<Grid VerticalAlignment="Top">
								<Image x:Name="SlotHolder" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/features_slot_d.png" Stretch="None"/>
								<Ellipse Width="60" Height="60" Fill="{Binding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							</Grid>

							<StackPanel Orientation="Vertical" MaxWidth="{DynamicResource summaryPanelWidth}" Margin="8,0,0,0">
								<TextBlock Foreground="{StaticResource CCTextPrimary}" TextWrapping="Wrap" VerticalAlignment="Top">
									<b:Interaction.Behaviors>
										<ls:CtxTransStringRunGeneratorBehavior Source="{Binding NameCTS}"/>
									</b:Interaction.Behaviors>
								</TextBlock>
								<TextBlock TextWrapping="Wrap" Foreground="{StaticResource CCTextNormal}" VerticalAlignment="Top" HorizontalAlignment="Left">
									<b:Interaction.Behaviors>
										<ls:CtxTransStringRunGeneratorBehavior Source="{Binding Description}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
									</b:Interaction.Behaviors>
								</TextBlock>
							</StackPanel>
						</StackPanel>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

			<ItemsControl ItemsSource="{Binding AbilityBonuses}" AlternationCount="{Binding AbilityBonuses.Count}" Visibility="{Binding AbilityBonuses.Count, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,20,0,0">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel Width="610" IsItemsHost="True"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate DataType="ls:VMAbility">
						<StackPanel x:Name="item" Orientation="Horizontal">
							<StackPanel.Resources>
								<Style TargetType="TextBlock">
									<Setter Property="Foreground" Value="{StaticResource CCTextNormal}"/>
									<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
								</Style>
								<Style TargetType="Control">
									<Setter Property="Foreground" Value="{StaticResource CCTextNormal}"/>
									<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
								</Style>
							</StackPanel.Resources>
							<StackPanel.Tag>
								<MultiBinding Converter="{StaticResource EqualConverter}">
									<Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
									<Binding Path="DataContext.AbilityBonuses.Count" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
								</MultiBinding>
							</StackPanel.Tag>
							<TextBlock  x:Name="label" Visibility="Collapsed" Foreground="{StaticResource CCTextPrimary}" ls:TextBlockFormatter.SourceText="{Binding Source=h6406727cg0668g4fdag9ca1g72c679c0aeab, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} - '}" />
							<StackPanel ToolTip="{StaticResource ManagedTooltip}">
								<Control Template="{StaticResource AbilityDisplayName}" />
								<TextBlock x:Name="AbilitySuffix" Text="{Binding Value, StringFormat={}{0: +#; -#; +0}}"/>
							</StackPanel>
							<TextBlock x:Name="separator" Text="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}"/>
						</StackPanel>
						<DataTemplate.Triggers>
							<Trigger Property="ItemsControl.AlternationIndex" Value="0">
								<Setter TargetName="label" Property="Visibility" Value="Visible"/>
							</Trigger>
							<DataTrigger Binding="{Binding Tag, ElementName=item}" Value="True">
								<Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>

			<Control Template="{StaticResource skillProgressions}" DataContext="{Binding Skills}"/>

			<TextBlock x:Name="proficienciesHeader" ls:TextBlockFormatter.SourceText="{Binding Source=hbdc95889g6f3fg46efg9993g036cf077a0e7, Converter={StaticResource TranslatedStringConverter}}" Visibility="Collapsed" HorizontalAlignment="Center" Margin="0,50,0,20"/>

			<Control Template="{StaticResource boostList}" DataContext="{Binding SaveProficiencies}" Visibility="{Binding SaveProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">
				<Control.Resources>
					<ControlTemplate x:Key="labelTemplate">
						<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hb41a9fcag75cag4931g9a1fg374b4d83f8cf, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} - '}" />
					</ControlTemplate>
				</Control.Resources>
			</Control>

			<Control Template="{StaticResource boostList}" DataContext="{Binding WeaponProficiencies}" Visibility="{Binding WeaponProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">
				<Control.Resources>
					<ControlTemplate x:Key="labelTemplate">
						<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h4a198683gedadg497dg9f15ga8606e44fc56, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} - '}" />
					</ControlTemplate>
				</Control.Resources>
			</Control>

			<Control Template="{StaticResource boostList}" DataContext="{Binding ArmourProficiencies}" Visibility="{Binding ArmourProficiencies.Count, Converter={StaticResource CountToVisibilityConverter}}">
				<Control.Resources>
					<ControlTemplate x:Key="labelTemplate">
						<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=had29e589gd812g473bg90dfg66d1280fbbf1, Converter={StaticResource TranslatedStringConverter}, StringFormat='{}{0} - '}" />
					</ControlTemplate>
				</Control.Resources>
			</Control>

		</StackPanel>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding SaveProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
				<Setter TargetName="proficienciesHeader" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding WeaponProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
				<Setter TargetName="proficienciesHeader" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ArmourProficiencies.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
				<Setter TargetName="proficienciesHeader" Property="Visibility" Value="Visible"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<DataTemplate x:Key="ProgressionSpellsTemplate">
		<StackPanel x:Name="ProgressionSpellsTemplateRoot">
			<ContentControl Template="{DynamicResource ShowSpellsTemplate}" DataContext="{Binding Features.Actions}" Content="{Binding Source='h7ba895aaga020g4cf0g9ec0g6a98f5eaaa3c', Converter={StaticResource TranslatedStringConverter}}"/>
			<ContentControl Template="{DynamicResource ShowSpellsTemplate}" DataContext="{Binding Features.Cantrips}" Content="{Binding Source='h7d02199dg44ecg4a1egbcacg9cc1cec197b3', Converter={StaticResource TranslatedStringConverter}}"/>
			<ContentControl x:Name="SpellFeaturesControl" Template="{DynamicResource ShowSpellsTemplate}" DataContext="{Binding Features.Spells}" Content="{Binding DataContext.NameCTS.Text, ElementName=ProgressionSpellsTemplateRoot}" />
		</StackPanel>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding NameCTS.Text, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="True">
				<Setter TargetName="SpellFeaturesControl" Property="Content" Value="{Binding Source='h2975f9c0gc2aag47d9ga3b3g3dd5171b9bf4', Converter={StaticResource TranslatedStringConverter}}" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<ControlTemplate x:Key="skillsEditorSummaryTemplate">
		<ItemsControl ItemsSource="{Binding SortedItems, ElementName=SortedSummarySkills}" AlternationCount="{Binding ProgressionData.AllProgressions.Skills.Count}" Visibility="{Binding ProgressionData.AllProgressions.Skills.Count, Converter={StaticResource CountToVisibilityConverter}}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel IsItemsHost="True"/>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate DataType="ls:VMSkill">
					<StackPanel x:Name="item" Orientation="Horizontal">
						<StackPanel.Resources>
							<Style TargetType="TextBlock">
								<Setter Property="Foreground" Value="{StaticResource CCTextLightest}"/>
								<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
							</Style>

							<Style TargetType="Control">
								<Setter Property="Foreground" Value="{StaticResource CCTextLightest}"/>
								<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
							</Style>
						</StackPanel.Resources>
						<StackPanel.Tag>
							<MultiBinding Converter="{StaticResource EqualConverter}">
								<Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}" Converter="{StaticResource AddConverter}" ConverterParameter="1"/>
								<Binding Path="DataContext.ProgressionData.AllProgressions.Skills.Count" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
							</MultiBinding>
						</StackPanel.Tag>
						<Control x:Name="name" Template="{StaticResource SkillDisplayName}" ToolTip="{StaticResource ManagedTooltip}"/>
						<TextBlock Text="(&#x00D7;2)" Visibility="{Binding IsExpert, Converter={StaticResource BoolToVisibleConverter}}"/>
						<TextBlock x:Name="separator" ls:TextBlockFormatter.SourceText="{Binding Source=h2519408dg5fd7g4cbcg840cg14370239edf8, Converter={StaticResource TranslatedStringConverter}}"/>
					</StackPanel>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Tag, ElementName=item}" Value="True">
							<Setter TargetName="separator" Property="Visibility" Value="Collapsed"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
	</ControlTemplate>

	<!--
	
	LevelUp
	
-->
	<ControlTemplate x:Key="LevelChangeIndicationTemplate">
		<ControlTemplate.Resources>
			<ControlTemplate x:Key="currentLevelTemplate">
				<TextBlock TextAlignment="Right" FontSize="{StaticResource ScaledDefaultFontSize}">
						<Run Text="{Binding Source='h8e782babg516fg4d7cgbd57g335de64c94a3', Converter={StaticResource TranslatedStringConverter}}"/><Run Text="{Binding CurrentCharacterLevel, StringFormat=' {0}'}"/>
				</TextBlock>
			</ControlTemplate>
			<ControlTemplate x:Key="nextLevelTemplate">
				<TextBlock Foreground="{StaticResource LS_specialTxtColor}" FontSize="{StaticResource ScaledDefaultFontSize}">
						<Run Text="{Binding Source='h8e782babg516fg4d7cgbd57g335de64c94a3', Converter={StaticResource TranslatedStringConverter}}"/><Run Text="{Binding AvailableCharacterLevel, StringFormat=' {0}'}"/>
				</TextBlock>
			</ControlTemplate>
		</ControlTemplate.Resources>
		<StackPanel Orientation="Horizontal">
			<Image x:Name="icon" Source="{StaticResource IconLevelUpArrow}" Stretch="None" VerticalAlignment="Center"/>
			<Control x:Name="currentLevel" Template="{DynamicResource currentLevelTemplate}" VerticalAlignment="Center"/>
			<Image x:Name="arrow" Stretch="None" VerticalAlignment="Center">
				<Image.Triggers>
					<EventTrigger RoutedEvent="FrameworkElement.Loaded">
						<BeginStoryboard>
							<Storyboard RepeatBehavior="Forever" Duration="0:0:0.5">
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Image.Source)" Storyboard.TargetName="arrow">
									<DiscreteObjectKeyFrame KeyTime="0:0:0">
										<DiscreteObjectKeyFrame.Value>
											<BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/levelUp_sideArrow_h1.png" />
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
									<DiscreteObjectKeyFrame KeyTime="0:0:0.25">
										<DiscreteObjectKeyFrame.Value>
											<BitmapImage UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC/levelUp_sideArrow_h2.png" />
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
				</Image.Triggers>
			</Image>
			<Control x:Name="nextLevel" Template="{DynamicResource nextLevelTemplate}" VerticalAlignment="Center"/>
		</StackPanel>
	</ControlTemplate>

	<ControlTemplate x:Key="LevelUpFadeInTemplate">
		<Grid Background="Black" Opacity="0.9"/>
	</ControlTemplate>

</ResourceDictionary>