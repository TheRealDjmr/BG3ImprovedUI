<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/GustavNoesisGUI;component/Library/NewOptionTemplates_c.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<BitmapImage x:Key="CharacterSheetBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Options/opaqueBG.png"/>
	<BitmapImage x:Key="IconHourglass" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_hourGlass.png"/>
	<BitmapImage x:Key="equipmentDecor" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_equipmentDecor.png"/>
	<BitmapImage x:Key="equipmentDecorBottom" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_equipmentDecorBottom.png"/>
	<BitmapImage x:Key="xpBarDecor" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_xp_barFrame.png"/>
	<BitmapImage x:Key="icoProficiencyStar" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_proficiencyStar.png"/>


	<BitmapImage x:Key="LevelUpArrow" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_levelup_2.png"/>
	<BitmapImage x:Key="CharSheetRadial" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_characterSheetRadial.png"/>
	<BitmapImage x:Key="SlotHelmet" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_helmet.png"/>
	<BitmapImage x:Key="SlotArmour" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_armour.png"/>
	<BitmapImage x:Key="SlotUnderwear" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_underwear.png"/>
	<BitmapImage x:Key="SlotRing1" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_ring1.png"/>
	<BitmapImage x:Key="SlotNecklace" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_necklace.png"/>
	<BitmapImage x:Key="SlotCloak" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_cloak.png"/>
	<BitmapImage x:Key="SlotBoots" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_boots.png"/>
	<BitmapImage x:Key="SlotGloves" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_gloves.png"/>
	<BitmapImage x:Key="SlotRing2" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_ring2.png"/>
	<BitmapImage x:Key="SlotInstrument" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_instrument.png"/>
	<BitmapImage x:Key="SlotVanityClothes" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_vanityClothes.png"/>
	<BitmapImage x:Key="SlotVanityBoots" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_vanityBoots.png"/>
	<BitmapImage x:Key="SlotMeleeMainHand" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_meleeMainHand.png"/>
	<BitmapImage x:Key="SlotMeleeOffHand" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_meleeOffHand.png"/>
	<BitmapImage x:Key="SlotRangedMainHand" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_rangedMainHand.png"/>
	<BitmapImage x:Key="SlotRangedOffHand" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_rangedOffHand.png"/>
	<BitmapImage x:Key="SlotLightSource" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_slot_lightSource.png"/>
	<BitmapImage x:Key="MeleeDualWieldLinkIco" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_slotJoin.png"/>


	<System:Double x:Key="GenericSlotSize">116</System:Double>
	<System:Double x:Key="EquipmentSlotSize">116</System:Double>
	<System:Double x:Key="EquipmentFrameSize">110</System:Double>
	<System:Double x:Key="EquipmentIconSize">100</System:Double>

	<System:Double x:Key="ScrollViewerHeight">1324</System:Double>
	<Thickness x:Key="equipmentSlotMargin">2,2,2,2</Thickness>

	<BitmapImage x:Key="BackgroundHeader" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_inventoryButton.png"/>

	<Thickness x:Key="TabContentMargin">8,78,124,180</Thickness>

	<ControlTemplate x:Key="ResistanceLineTemplate">
		<DockPanel>
			<Grid x:Name="Object">
				<Image x:Name="ImmuneShield"  Stretch="None" Source="{StaticResource ImmuneShield}" Margin="-6" Visibility="Hidden"/>
				<Image x:Name="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" Source="{x:Null}"/>
				<Image x:Name="NonMagicalArrow" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{StaticResource ResistantNonMagical}" Stretch="None" Margin="-12,-20,0,0" Visibility="Collapsed"/>
				<Image x:Name="MagicalArrow" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{StaticResource ResistantMagical}" Stretch="None" Margin="-12,-20,0,0" Visibility="Collapsed"/>
			</Grid>

			<StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="{Binding Duration, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,10,28,0">
				<Image Source="{StaticResource IconHourglass}" Stretch="None" VerticalAlignment="Center" Margin="-8,0,-8,0"/>
				<TextBlock Text="{Binding Duration}" Foreground="{StaticResource LS_tint100}" FontWeight="Bold" FontSize="{StaticResource ScaledLargeFontSize}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" VerticalAlignment="Center"/>
			</StackPanel>

			<ContentPresenter/>
		</DockPanel>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding NonMagical}" Value="Immune">
				<Setter TargetName="ImmuneShield" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ImmuneShield" Property="Source" Value="{StaticResource ImmuneNonMagicalShield}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Magical}" Value="Immune">
				<Setter TargetName="ImmuneShield" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ImmuneShield" Property="Source" Value="{StaticResource ImmuneMagicalShield}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Full}" Value="Immune">
				<Setter TargetName="ImmuneShield" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ImmuneShield" Property="Source" Value="{StaticResource ImmuneShield}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding NonMagical}" Value="Resistant">
				<Setter TargetName="NonMagicalArrow" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Magical}" Value="Resistant">
				<Setter TargetName="MagicalArrow" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Full}" Value="Resistant">
				<Setter TargetName="NonMagicalArrow" Property="Margin" Value="-12,-6,0,0"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Full}" Value="Vulnerable">
				<Setter TargetName="NonMagicalArrow" Property="Visibility" Value="Visible"/>
				<Setter TargetName="NonMagicalArrow" Property="Source" Value="{StaticResource Vulnerable}"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding DamageType}" Value="Slashing">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_slashing.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Piercing">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_piercing.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Bludgeoning">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_bludgeoning.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Acid">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_acid.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Thunder">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_thunder.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Necrotic">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_necrotic.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Fire">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_fire.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Lightning">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_lightning.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Cold">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_cold.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Psychic">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_psychic.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Poison">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_poison.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Radiant">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_radiant.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Force">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_force.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DamageType}" Value="Spell">
				<Setter TargetName="Icon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_ico_resistance_spell.png"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ImageBrush x:Key="NavigableGridSlotBrush"  ImageSource="{StaticResource InventoryGridBackground}" TileMode="Tile" Stretch="Uniform"  ViewportUnits="Absolute">
		<ImageBrush.Viewport>
			<MultiBinding Converter="{StaticResource CreateRectConverter}">
				<Binding Source="0"/>
				<Binding Source="0"/>
				<Binding Source="{StaticResource GenericSlotSize}"/>
				<Binding Source="{StaticResource GenericSlotSize}"/>
			</MultiBinding>
		</ImageBrush.Viewport>
	</ImageBrush>

	<Style TargetType="{x:Type TextBox}">
		<Setter Property="noesis:Text.Stroke" Value="Black"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="24"/>
	</Style>


	<Style x:Key="BaseTitleStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
		<Setter Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}"/>
	</Style>

	<Style x:Key="SkillTextStyle" TargetType="TextBlock">
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="DockPanel.Dock" Value="Left"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="FontWeight" Value="DemiBold" />
		<Setter Property="Margin" Value="{StaticResource TextTopBottomMargin}" />
	</Style>
	<Style x:Key="StatsNameStyle" TargetType="Control">
		<Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="DockPanel.Dock" Value="Left"/>
		<Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_textStrokeColor}"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="4"/>
		<Setter Property="Margin" Value="{StaticResource TextTopBottomMargin}" />
		<Setter Property="FontWeight" Value="DemiBold" />
	</Style>
	<Style x:Key="StatsStyle" TargetType="TextBlock">
		<Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="DockPanel.Dock" Value="Left"/>
		<Setter Property="Margin" Value="{StaticResource TextTopBottomMargin}" />
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="FontWeight" Value="DemiBold" />
		<Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_textStrokeColor}"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="4"/>
	</Style>
	<Style x:Key="CenteredStatsStyle" TargetType="TextBlock">
		<Setter Property="FontSize" Value="{StaticResource ScaledMediumFontSize}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="Margin" Value="0,-2,0,0" />
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="FontWeight" Value="DemiBold" />
		<Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_textStrokeColor}"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="4"/>
	</Style>
	<Style x:Key="StatsValueStyle" TargetType="TextBlock">
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="DockPanel.Dock" Value="Right"/>
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}" />
		<Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_textStrokeColor}"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="4"/>
	</Style>

	<Style x:Key="SkillTitleTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="ToolTipService.Placement" Value="Right"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="DockPanel.Dock" Value="Right"/>
		<Setter Property="Margin" Value="0,0,32,0" />
		<Setter Property="FontWeight" Value="DemiBold" />
		<Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_textStrokeColor}"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="4"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
		<Setter Property="Margin" Value="{StaticResource TextTopBottomMargin}" />
	</Style>

	<Style x:Key="SkillTitleTextStyleControl" TargetType="Control">
		<Setter Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="ToolTipService.Placement" Value="Right"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="DockPanel.Dock" Value="Right"/>
		<Setter Property="Margin" Value="0,0,32,0" />
		<Setter Property="FontWeight" Value="DemiBold" />
		<Setter Property="noesis:Text.Stroke" Value="{StaticResource LS_textStrokeColor}"/>
		<Setter Property="noesis:Text.StrokeThickness" Value="4"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
		<Setter Property="Margin" Value="{StaticResource TextTopBottomMargin}" />
	</Style>

	<Style x:Key="equipmentSlotLabelStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="{StaticResource ScaledMiniFontSize}"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="FontWeight" Value="DemiBold"/>
		<Setter Property="Margin" Value="0,12,0,8" />
		<Setter Property="Height" Value="48" />
		<Setter Property="Width" Value="220" />
		<Setter Property="TextWrapping" Value="Wrap" />
		<Setter Property="Height" Value="Auto" />
	</Style>

	<Style x:Key="EquipmentSlotImage" TargetType="Image">
		<Setter Property="Width" Value="{StaticResource EquipmentSlotSize}"/>
		<Setter Property="Height" Value="{StaticResource EquipmentSlotSize}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style x:Key="StatsEntryBgStyle" TargetType="Image">
		<Setter Property="Stretch" Value="Fill"/>
	</Style>
	<!-- Party Inventory Styles-->
	<Style x:Key="TradeDefaultFontStyle" TargetType="TextBlock">
		<Style.Resources>
			<Style TargetType="ls:LSSpan" BasedOn="{StaticResource {x:Type ls:LSSpan}}">
				<Style.Triggers>
					<Trigger Property="TagType" Value="hl">
						<Setter Property="Foreground" Value="{StaticResource LS_accent75TxtColor}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
		</Style.Resources>
		<Setter Property="FontSize" Value="{StaticResource ScaledIntermediateFontSize}" />
		<Setter Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}" />
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<ControlTemplate x:Key="WeightIconTemplate">
		<StackPanel Orientation="Horizontal">
			<TextBlock>
				<Run Text="{Binding EncumbranceStats.CurrentWeight, Converter={StaticResource UnitConverter}, ConverterParameter='Weight N2'}"/> / <Run Text="{Binding EncumbranceStats.WeightMaximum, Converter={StaticResource UnitConverter}, ConverterParameter='Weight N2'}"/>
			</TextBlock>
			<Image x:Name="IconHolder" Source="{StaticResource NormalWeightIcon}" Stretch="None"/>
		</StackPanel>

		<ControlTemplate.Triggers>
			<!-- Light encumbrance -->
			<DataTrigger Value="True">
				<DataTrigger.Binding>
					<MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
						<Binding Path="EncumbranceStats.CurrentWeight"/>
						<Binding Path="EncumbranceStats.WeightLight"/>
					</MultiBinding>
				</DataTrigger.Binding>
				<Setter TargetName="IconHolder" Property="Source" Value="{StaticResource IconWeightEncumbered}"/>
			</DataTrigger>

			<!-- Heavy encumbrance -->
			<DataTrigger Value="True">
				<DataTrigger.Binding>
					<MultiBinding Converter="{StaticResource GreaterOrEqualThanMultiConverter}">
						<Binding Path="EncumbranceStats.CurrentWeight"/>
						<Binding Path="EncumbranceStats.WeightHeavy"/>
					</MultiBinding>
				</DataTrigger.Binding>
				<Setter TargetName="IconHolder" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Weight_Encumbrance/ico_weight_heavilyEncumbered.png"/>
			</DataTrigger>

			<!-- Over encumbrance -->
			<DataTrigger Binding="{Binding EncumbranceStats.IsOverEncumbared}" Value="True">
				<Setter TargetName="IconHolder" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/Weight_Encumbrance/ico_weight_weightLimit.png"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ParallelTimeline x:Key="SubSectionFadeIn">
		<!-- We need to handle the focus on changing the sub-section inside the same section (otherwise, the focus is not set on changing the sub-section) -->
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CharSheetPanelRoot">
			<EasingDoubleKeyFrame KeyTime="0" Value="0.99"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
		</DoubleAnimationUsingKeyFrames>
	</ParallelTimeline>

	<!-- Character Sheet Core Stats Templates and Styles-->
	<ControlTemplate x:Key="StatsEntryTemplate" TargetType="ContentControl" >
		<ls:LSButton x:Name="EntryRoot" Style="{StaticResource FocusableButtonStyleMinimal}">
			<ls:LSButton.ToolTip>
				<ls:LSTooltip DataContext="{Binding Stats}" Placement="Right" HorizontalOffset="20" VerticalOffset="-12">
					<TextBlock Text="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource TooltipBaseTextStyle}" Width="{StaticResource MaxTooltipContentWidth}"/>
				</ls:LSTooltip>
			</ls:LSButton.ToolTip>
			<ContentPresenter  HorizontalAlignment="Stretch"/>
		</ls:LSButton>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Common" >
				<Setter TargetName="EntryRoot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="EntryRoot" Property="ToolTipService.HorizontalOffset" Value="20" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<BitmapImage x:Key="IconProficiencyStar" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_proficiencyStar.png"/>

	<!--DataType can be either VMStat or VMActionResource. VMTooltipDataBase is the common ancestor type so the best we can do.-->
	<DataTemplate x:Key="StatsValueEntryTemplate" DataType="ls:VMTooltipDataBase">
		<ls:LSButton x:Name="EntryRoot" Style="{StaticResource FocusableButtonStyleMinimal}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="40" ToolTipService.VerticalOffset="0">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="20" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Image Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource StatsEntryBgStyle}"/>

				<Image Grid.Column="0" Visibility="{Binding IsPrimary, Converter={StaticResource BoolToVisibleConverter},FallbackValue=Hidden}"  Stretch="Uniform" VerticalAlignment="Center" Height="60" Width="60" HorizontalAlignment="Right"
								   Source="{StaticResource IconProficiencyStar}" Margin="0,0,0,10"/>

				<Control x:Name="StatName" Grid.Column="1" Template="{StaticResource StatsDisplayName}" Style="{StaticResource StatsNameStyle}" FontSize="{StaticResource ScaledMediumFontSize}"
									 FontWeight="DemiBold" Margin="2,4,0,0"/>
				<TextBlock x:Name="ActionResourceName" Grid.Column="1" Text="{Binding Name}" HorizontalAlignment="Left" FontSize="{StaticResource ScaledMediumFontSize}" FontWeight="DemiBold" Margin="2,4,0,0"
									   Visibility="Collapsed"/>

				<TextBlock x:Name="TxtValue" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,20,0" Text="{Binding Value}" FontWeight="Bold" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource LS_selectedTextPad}" />
			</Grid>
		</ls:LSButton>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="sign">
				<Setter TargetName="TxtValue" Property="Text" Value="{Binding Value, StringFormat={}{0:+#;-#;0}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="max">
				<Setter TargetName="TxtValue" Property="Text" Value="{Binding Max}"/>
			</DataTrigger>
			<!--VMActionResource has a Name property, VMStat doesn't-->
			<DataTrigger Binding="{Binding ., Converter={StaticResource TypeConverter}}" Value="ls.VMActionResource">
				<Setter TargetName="ActionResourceName" Property="Visibility" Value="Visible"/>
				<Setter TargetName="StatName" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Common" >
				<Setter TargetName="EntryRoot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="EntryRoot" Property="ToolTipService.HorizontalOffset" Value="40" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="StatsAbilitiesEntryTemplate" DataType="{x:Type ls:VMAbility}">
		<Grid>
			<ls:LSButton x:Name="EntryRoot" Width="120" Height="120" Margin="2,0" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="20" ToolTipService.PlacementTarget="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" ToolTipService.VerticalOffset="-12" Style="{StaticResource FocusableButtonStyleMinimal}">
				<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
					<Control x:Name="attrName" Template="{StaticResource AbilityShortDisplayName}" Foreground="{StaticResource LS_baseTxtColor}" FontWeight="DemiBold"  FontSize="{StaticResource ScaledSmallFontSize}" HorizontalAlignment="Center" Margin="0,0,0,0"/>
					<TextBlock Text="{Binding Value}" FontSize="{StaticResource ScaledLargeFontSize}" HorizontalAlignment="Center" FontWeight="DemiBold" Margin="0,-20,0,0" Foreground="{StaticResource LS_selectedTextPad}"/>
				</StackPanel>

		</ls:LSButton>
			<Image x:Name="PrimaryAbillity" Visibility="Hidden" Source="{StaticResource icoProficiencyStar}" Stretch="None" Margin="0,-160,0,0" Panel.ZIndex="100" />
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Common" >
				<Setter TargetName="EntryRoot" Property="ToolTipService.Placement" Value="Left" />
			</DataTrigger>
			<DataTrigger Binding="{Binding IsPrimary}" Value="True">
				<Setter TargetName="PrimaryAbillity" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<Trigger SourceName="EntryRoot"  Property="ls:MoveFocus.IsFocused" Value="True">
				<Setter TargetName="attrName"  Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
			</Trigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="CombatStatsValueEntryTemplate" DataType="{x:Type ls:VMRangeStat}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="20" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>

			<TextBlock Grid.Column="1" Text="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource StatsStyle}"/>
			<TextBlock x:Name="StatAmount"  Grid.Column="2" Style="{StaticResource StatsValueStyle}" Margin="0,0,20,0">
							<ls:TextBlockFormatter.SourceText>
								<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
									<Binding Source="h1c706361g066ag4701gb902g31e2406b5dea"/>
									<Binding Path="Value"/>
									<Binding Path="Max"/>
								</MultiBinding>
							</ls:TextBlockFormatter.SourceText>
			</TextBlock>
		</Grid>

		<DataTemplate.Triggers>
			<DataTrigger Value="True">
				<DataTrigger.Binding>
					<MultiBinding Converter="{StaticResource EqualConverter}">
						<Binding Path="Value"/>
						<Binding Path="Max"/>
					</MultiBinding>
				</DataTrigger.Binding>
				<Setter TargetName="StatAmount" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Value}"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="CombatStatsBonusEntryTemplate" DataType="{x:Type ls:VMStat}">
		<ls:LSButton x:Name="EntryRoot" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12" Style="{StaticResource FocusableButtonStyleMinimal}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="20" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Image Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource StatsEntryBgStyle}"/>
				<TextBlock Grid.Column="1" Text="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Left" Style="{StaticResource StatsStyle}"/>
				<TextBlock Grid.Column="2" Foreground="{StaticResource LS_extraspecialTxtColor}" Text="{Binding Value, StringFormat=' {0:+#;-#;- }'}" Style="{StaticResource StatsValueStyle}" Margin="0,0,20,0"/>
			</Grid>
		</ls:LSButton>
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Common" >
				<Setter TargetName="EntryRoot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="EntryRoot" Property="ToolTipService.HorizontalOffset" Value="20" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<!-- Inventory Slot Template -->
	<DataTemplate x:Key="InventorySlotDataTemplate" DataType="ls:VMInventorySlot">
		<Grid>
			<ContentPresenter x:Name="Presenter" Content="{Binding Object}" Style="{StaticResource Style.GameObject}" />
			<!-- MOD START - Supporting stackable equipment -->
			<Control x:Name="EquipmentIcon" Template="{StaticResource EquippedItemIconIndicator}" Height="42" Width="54" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,8" DataContext="{Binding Object}" />
		</Grid>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Object.Type}" Value="Item">
				<Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource Template.Item}"/>
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Object.IsEquipment}" Value="True"/>
					<Condition Binding="{Binding Object.Count}" Value="1"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource Template.ItemEquipment}"/>
			</MultiDataTrigger>
			<DataTrigger Binding="{Binding Object.IsContainer}" Value="True">
				<Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource Template.ItemContainer}"/>
			</DataTrigger>
			<!-- MOD END -->
		</DataTemplate.Triggers>
	</DataTemplate>

	<!-- Equipment Slot Templates -->
	<DataTemplate x:Key="EquipmentSlotDataTemplate" DataType="ls:VMEquipmentSlot">
		<DataTemplate.Resources>
			<BitmapImage x:Key="EquipmentSlotCover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_equipmentSlotCover.png"/>
			<BitmapImage x:Key="IconVisibility" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_visibility.png"/>
		</DataTemplate.Resources>
		<ContentControl x:Name="EquipmentButtonRoot" Style="{StaticResource FocusableContentControlNoBG}" ToolTipService.IsEnabled="True" ToolTipService.Placement="{Binding (ToolTipService.Placement), RelativeSource={RelativeSource Mode=TemplatedParent}}" Tag="Equipment" ls:MoveFocus.FocusMovementMode="{Binding (ls:MoveFocus.FocusMovementMode), RelativeSource={RelativeSource Mode=TemplatedParent}}">
			<ContentControl.ToolTip>
				<ls:LSTooltip x:Name="EquipmentSlotTooltip" Content="{Binding ElementName=EquipmentButtonRoot,Path=DataContext}" Placement="Top" VerticalOffset="4" HorizontalOffset="{Binding (ToolTipService.HorizontalOffset), RelativeSource={RelativeSource Mode=TemplatedParent}}">
				</ls:LSTooltip>
			</ContentControl.ToolTip>
			<Grid>
				<Image x:Name="CoverImage" Stretch="Fill" Source="{StaticResource EquipmentSlotCover}" Visibility="{Binding Item, Converter={StaticResource NullToCollapsedConverter}}"
					   Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" />

				<ls:LSEntityObject x:Name="EquipmentButtonContent" DataContext="{Binding Item}" EntityRef="{Binding EntityHandle}" Background="{x:Null}" Context="Inventory" Width="{StaticResource EquipmentFrameSize}" Height="{StaticResource EquipmentFrameSize}">
					<Image x:Name="RarityBackground" Style="{StaticResource RarityFrameBackgroundImageStyle}" Width="{StaticResource EquipmentIconSize}" Height="{StaticResource EquipmentIconSize}"/>
					<Rectangle x:Name="ItemIcon" Fill="{Binding Icon}" Width="{StaticResource EquipmentIconSize}" Height="{StaticResource EquipmentIconSize}"/>
					<Image x:Name="RarityForeground" Style="{StaticResource RarityFrameForegroundImageStyle}" Width="{StaticResource EquipmentIconSize}" Height="{StaticResource EquipmentIconSize}"/>
					<Image x:Name="HelmetVisibility" Source="{StaticResource IconVisibility}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8,0,0,8" Visibility="Collapsed"/>
					<Image x:Name="InstrumentVisibility" Source="{StaticResource IconVisibility}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8,0,0,8" Visibility="Collapsed"/>
					<Image x:Name="VanityVisibility" Source="{StaticResource IconVisibility}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="8,0,0,8" Visibility="Collapsed"/>
				</ls:LSEntityObject>
			</Grid>
		</ContentControl>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding Item, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
				<Setter TargetName="EquipmentSlotTooltip" Property="Content" Value="{Binding Path=DataContext.Item, ElementName=EquipmentButtonRoot}"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding Item, Converter={StaticResource NullToBoolFalseConverter}}" Value="False">
				<Setter TargetName="EquipmentSlotTooltip" Property="ContentTemplate" >
					<Setter.Value>
						<DataTemplate>
							<StackPanel Orientation="Vertical">
								<TextBlock x:Name="EquipmentEmptySlotText" Style="{StaticResource TooltipBaseTextStyle}"/>
								<Control x:Name="EquipmentEmptySlotAdditionalContent"/>
							</StackPanel>
							<DataTemplate.Triggers>
								<!-- Empty slot tooltip text -->
								<DataTrigger Binding="{Binding SlotType}" Value="Helmet">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h58b71a66g5678g4147g937cg48c99e07c2d5',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger  Binding="{Binding SlotType}" Value="Breast">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h68f694c7g0fb3g4834gaac5gf97f2b38c8a7',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="Cloak">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h964f4414g7c0bg4715g831eg39bf21ce2745',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger  Binding="{Binding SlotType}" Value="MeleeMainHand">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h0e518959g37d5g4e35gbf7egc6afda67a039',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger  Binding="{Binding SlotType}" Value="MeleeOffHand">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h7cdae3b4g06abg4a48g8823ge88f2a4780f4',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="RangedMainHand">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hc329f807gcc38g44ecgb42eg48c2cb68decf',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="RangedOffHand">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hfa1f065fgade6g4c9bg994dgb9878543c145',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="Ring">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hc30ca60cgaa5cg40c5gad5dgd3f1d5857138',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="Ring2">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h46199a04ga3a5g4e27g8d33g96a06b50041c',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="Underwear">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h0f579c48g7258g4366g96e7g01c5b072eacc',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="VanityBody">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h0dc46cf0g765ag49a1gbdaeg8639e7d8051d',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="VanityBoots">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hf8bce7a9g3cebg4f76g947bgde059de59696',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="Boots">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hf8bce7a9g3cebg4f76g947bgde059de59696',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="Gloves">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='h9f02bd2dg175fg4d2eg9c98gc24da803a7da',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="Amulet">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hcfa38834g8bc7g4cfbg9ceag7fcea042f28f',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="MusicalInstrument">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hd29bbe68g0a7fg4861g8e94gf6e9ee63804d',Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding SlotType}" Value="MAX">
									<Setter TargetName="EquipmentEmptySlotText" Property="Text" Value="{Binding Source='hca818edeg944cg493egbeecg567fbdc92d04',Converter={StaticResource TranslatedStringConverter}}"/>
									<Setter TargetName="EquipmentEmptySlotText" Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}"/>
									<Setter TargetName="EquipmentEmptySlotText" Property="FontSize" Value="{StaticResource ScaledDefaultFontSize}"/>
									<Setter TargetName="EquipmentEmptySlotAdditionalContent" Property="Margin" Value="0,8,0,0"/>
									<Setter TargetName="EquipmentEmptySlotAdditionalContent" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<TextBlock x:Name="Description" Style="{StaticResource TooltipBaseTextStyle}" TextWrapping="Wrap">
													<b:Interaction.Behaviors>
														<ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Source='h418b6862gef28g49c1gb180g642701762715',Converter={StaticResource TranslatedStringConverter}}" NamedParamInputEvents="{Binding Path=DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
															<ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
																<Style TargetType="ContentControl">
																	<Setter Property="Margin" Value="-20,0,-20,-46" />
																	<Setter Property="Template" Value="{StaticResource ControllerButton.ImageSwitcher}"/>
																	<Setter Property="Width" Value="{StaticResource ScaledControllerHintSize}"/>
																	<Setter Property="Height" Value="{StaticResource ScaledControllerHintSize}"/>
																</Style>
															</ls:CtxTransStringRunGeneratorBehavior.NamedParamContentStyle>
														</ls:CtxTransStringRunGeneratorBehavior>
													</b:Interaction.Behaviors>
												</TextBlock>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</DataTrigger>

			<DataTrigger Binding="{Binding EquippedType}" Value="FromTwoHanded">
				<Setter TargetName="EquipmentButtonContent" Property="Opacity" Value="0.6"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Equipment.ShowAvailableEquipment, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True">
				<Setter TargetName="EquipmentButtonRoot" Property="ToolTipService.IsEnabled" Value="False"/>
			</DataTrigger>
			<!--Helmet Toggle States -->
			<DataTrigger Binding="{Binding VisibilityType}" Value="CinematicsHidden">
				<Setter TargetName="HelmetVisibility" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_visibility_dialogueNone.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding VisibilityType}" Value="Hidden">
				<Setter TargetName="HelmetVisibility" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_visibility_None.png"/>
			</DataTrigger>

			<!--Musical Instrument States -->
			<DataTrigger Binding="{Binding StowedVisibility}" Value="ShowAll">
				<Setter TargetName="InstrumentVisibility" Property="Source" Value="{StaticResource IconVisibility}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding StowedVisibility}" Value="ShowWeaponOnly">
				<Setter TargetName="InstrumentVisibility" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_visibility_None.png"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding StowedVisibility}" Value="ShowMusicalInstrumentOnly">
				<Setter TargetName="InstrumentVisibility" Property="Source" Value="{StaticResource IconVisibility}"/>
			</DataTrigger>
			<!--Vanity Clothes States -->
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.ArmorSetVisibility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Vanity">
				<Setter TargetName="VanityVisibility" Property="Source" Value="{StaticResource IconVisibility}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.ArmorSetVisibility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Normal">
				<Setter TargetName="VanityVisibility" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_visibility_None.png"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding SlotType}" Value="Helmet">
				<Setter TargetName="HelmetVisibility" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding SlotType}" Value="VanityBody">
				<Setter TargetName="VanityVisibility" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding SlotType}" Value="MusicalInstrument">
				<Setter TargetName="InstrumentVisibility" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<!--Hide Helmet Toggle if Vanity-->
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.ArmorSetVisibility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Vanity">
				<Setter TargetName="HelmetVisibility" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<Storyboard x:Key="ShowEquipmentSelectorAnimation" FillBehavior="Stop">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EquipmentSelector">
			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
		</DoubleAnimationUsingKeyFrames>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EquipmentSelector">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
	</Storyboard>

	<ParallelTimeline x:Key="HideEquipmentSelectAnimation" FillBehavior="Stop">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EquipmentSelector">
			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
		</DoubleAnimationUsingKeyFrames>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EquipmentSelector">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
	</ParallelTimeline>

	<ParallelTimeline x:Key="ShowEquipmentFilterAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EquipmentFilter">
			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
		</DoubleAnimationUsingKeyFrames>
	</ParallelTimeline>

	<ParallelTimeline x:Key="HideEquipmentFilterAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="EquipmentFilter">
			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
		</DoubleAnimationUsingKeyFrames>
	</ParallelTimeline>

	<Storyboard x:Key="ZoomCharacterIn" FillBehavior="Stop">
		<ThicknessAnimation Storyboard.TargetName="PaperDoll" Storyboard.TargetProperty="Margin" Duration="0:0:0.44" To="400,0,0,0">
			<ThicknessAnimation.EasingFunction>
				<SineEase EasingMode="EaseInOut"/>
			</ThicknessAnimation.EasingFunction>
		</ThicknessAnimation>
		<DoubleAnimation Duration="0:0:0.5" To="1.2" Storyboard.TargetProperty="Zoom" Storyboard.TargetName="PaperDoll">
			<DoubleAnimation.EasingFunction>
				<SineEase EasingMode="EaseInOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>
	</Storyboard>

	<Storyboard x:Key="ZoomCharacterOut" FillBehavior="Stop">
		<DoubleAnimation Duration="0:0:0.5" To="0.2" Storyboard.TargetProperty="Zoom" Storyboard.TargetName="PaperDoll">
			<DoubleAnimation.EasingFunction>
				<SineEase EasingMode="EaseInOut"/>
			</DoubleAnimation.EasingFunction>
		</DoubleAnimation>
		<ThicknessAnimation Storyboard.TargetName="PaperDoll" Storyboard.TargetProperty="Margin" Duration="0:0:0.5" To="400,180,0,0" >
			<ThicknessAnimation.EasingFunction>
				<SineEase EasingMode="EaseInOut"/>
			</ThicknessAnimation.EasingFunction>
		</ThicknessAnimation>
	</Storyboard>

	<!-- Equipment slot visibility change labels -->

	<Storyboard x:Key="HelmetVisibilityAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HelmetVisibilityText">
			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<Storyboard x:Key="InstrumentVisibilityAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InstrumentVisibilityText">
			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<Storyboard x:Key="VanityVisibilityAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VanityVisibilityText">
			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<Storyboard x:Key="DualWieldVisibilityAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DualWieldVisibilityText">
			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<ParallelTimeline x:Key="ShowInventoryFilterAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InventoryFilter">
			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
		</DoubleAnimationUsingKeyFrames>
	</ParallelTimeline>

	<Storyboard x:Key="HideInventoryFilterAnimation">
		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InventoryFilter">
			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
			<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
		</DoubleAnimationUsingKeyFrames>
	</Storyboard>

	<ControlTemplate x:Key="FilterCheckBoxTemplate" TargetType="ls:LSCheckBox">
		<Grid x:Name="CheckBoxButtonRoot" Focusable="True" ls:MoveFocus.Focusable="True" Tag="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" ls:AttachedProperties.InheritedTag="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>

			<Image Grid.Column="0" Grid.ColumnSpan="3" Source="{StaticResource ListItemBg_d}" Stretch="Fill"/>

			<Image x:Name="MarkerBg" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,16,0" Source="{DynamicResource Bg}" Stretch="None"/>

			<TextBlock x:Name="Text" Grid.Column="1" Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" Foreground="{StaticResource LS_baseTxtColor}" FontSize="{StaticResource ScaledDefaultFontSize}"/>

			<Image x:Name="Icon" Grid.Column="2" VerticalAlignment="Center" Margin="16,0,0,0" Source="{DynamicResource IconOff}" Stretch="None"/>

			<Image x:Name="Selector" Grid.Column="0" Grid.ColumnSpan="3" Source="{StaticResource ListItemBg_h}" Stretch="Fill" Visibility="Collapsed"/>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger SourceName="CheckBoxButtonRoot" Property="Tag" Value="Sort">
				<Setter TargetName="Text" Property="Text" Value="{Binding Content.Name, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
			</Trigger>
			<Trigger SourceName="CheckBoxButtonRoot" Property="Tag" Value="EquipmentSort">
				<Setter TargetName="Text" Property="Text" Value="{Binding Content.Name, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
			</Trigger>
			<Trigger SourceName="CheckBoxButtonRoot" Property="ls:MoveFocus.IsFocused" Value="True">
				<Setter Property="Panel.ZIndex" Value="1"/>
				<Setter TargetName="Selector" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Source" Value="{DynamicResource IconOn}"/>
				<Setter TargetName="Text" Property="Foreground" Value="{StaticResource LS_extraspecialTxtColor}"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition SourceName="CheckBoxButtonRoot" Property="ls:MoveFocus.IsFocused" Value="True"/>
					<Condition Property="IsChecked" Value="False"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="MarkerBg" Property="Source" Value="{DynamicResource BgH}"/>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition SourceName="CheckBoxButtonRoot" Property="ls:MoveFocus.IsFocused" Value="False"/>
					<Condition Property="IsChecked" Value="True"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="MarkerBg" Property="Source" Value="{DynamicResource BgActive}"/>
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition SourceName="CheckBoxButtonRoot" Property="ls:MoveFocus.IsFocused" Value="True"/>
					<Condition Property="IsChecked" Value="True"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="MarkerBg" Property="Source" Value="{DynamicResource BgActiveH}"/>
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="MarkerBg" Property="Source" Value="{DynamicResource BgDisabled}"/>
				<Setter Property="Opacity" Value="0.75"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="FilterContainerTemplate" TargetType="ContentControl">
		<ControlTemplate.Resources>
			<BitmapImage x:Key="ProficiencyOff" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_proficiencyFilter_off.png" />
			<BitmapImage x:Key="ProficiencyOn" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_proficiencyFilter_on.png" />
			<BitmapImage x:Key="Divider" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_equipmentSelectionGrid_filters_divider.png" />
			<BitmapImage x:Key="PartyOff" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_partyFilter_off.png" />
			<BitmapImage x:Key="PartyOn" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_partyFilter_on.png" />
		</ControlTemplate.Resources>

		<ls:LSNineSliceImage Style="{StaticResource SecondaryButton9Slice}" HorizontalContentAlignment="Center" HorizontalAlignment="Center">
			<StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="25,0,6,0">
				<Image x:Name="ProficiencyIndicator" Source="{StaticResource ProficiencyOff}" Stretch="None" VerticalAlignment="Center" Margin="32,0,0,0" Visibility="Collapsed"/>

				<Image x:Name="ProficiencySeparator" Source="{StaticResource Divider}" Stretch="None" VerticalAlignment="Center" Margin="8,0" Visibility="{Binding Visibility, ElementName=ProficiencyIndicator}"/>

				<Image x:Name="PartyIndicator" Source="{StaticResource PartyOff}" Stretch="None" VerticalAlignment="Center" Visibility="Collapsed"/>

				<TextBlock x:Name="FilterNameText" Text="{Binding DataContext.CurrentPlayer.UIData.GlobalSelectedFilter.Name, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Mode=OneWay}" VerticalAlignment="Center" FontSize="{StaticResource ScaledMediumFontSize}" FontWeight="DemiBold"/>

				<ContentPresenter Margin="-14,0,0,0" VerticalAlignment="Center" />
			</StackPanel>
		</ls:LSNineSliceImage>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding UseProficiencyFilter}" Value="True">
				<Setter TargetName="ProficiencyIndicator" Property="Source" Value="{StaticResource ProficiencyOn}"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding UsePartyInventory}" Value="True">
				<Setter TargetName="PartyIndicator" Property="Source" Value="{StaticResource PartyOn}"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding Converter={StaticResource TypeConverter}}" Value="ls.Character">
				<Setter TargetName="FilterNameText" Property="Margin" Value="32,0,0,0" />
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Converter={StaticResource TypeConverter}}" Value="ls.Character"/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.UIData.GlobalSelectedFilter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Mode=OneWay}" Value="{x:Null}"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="FilterNameText" Property="Text" Value="{Binding Source='h8eb391adgf10dg4ff6g82e0gd51409b06d83',Converter={StaticResource TranslatedStringConverter}}" />
			</MultiDataTrigger>

			<Trigger SourceName="FilterNameText" Property="Text" Value="">
				<Setter TargetName="FilterNameText" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger SourceName="FilterNameText" Property="Text" Value="{x:Null}">
				<Setter TargetName="FilterNameText" Property="Visibility" Value="Collapsed" />
			</Trigger>

			<DataTrigger Binding="{Binding Converter={StaticResource TypeConverter}}" Value="ls.VMEquipment">
				<Setter TargetName="ProficiencyIndicator" Property="Visibility" Value="Visible"/>
				<Setter TargetName="PartyIndicator" Property="Visibility" Value="Visible"/>
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<DataTemplate x:Key="FilterSelectorTemplate">
		<DataTemplate.Resources>
			<BitmapImage x:Key="FiltersPanelBg" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_filtersPanel_bg.png" />
		</DataTemplate.Resources>
		<ls:LSNineSliceImage x:Name="FilterRoot" ImageSource="{StaticResource FiltersPanelBg}" Slices="40" Padding="60, 40, 60, 40">
			<StackPanel>
				<TextBlock Text="{Binding Source='h8eb391adgf10dg4ff6g82e0gd51409b06d83',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_accent00TxtColor}" FontSize="{StaticResource ScaledDefaultFontSize}"/>

				<ls:LSCheckBox x:Name="PartyInventoryButton" IsChecked="{Binding UsePartyInventory}" Content="{Binding Source='h47336abdg25afg4ecagb8f1g7a8b2675373e',Converter={StaticResource TranslatedStringConverter}}" Template="{StaticResource FilterCheckBoxTemplate}" Tag="FilterPartyEquipment" Visibility="Collapsed">
					<ls:LSCheckBox.Resources>
						<ImageSource x:Key="IconOff">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_partyFilter_off.png</ImageSource>
						<ImageSource x:Key="IconOn">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_partyFilter_on.png</ImageSource>
						<ImageSource x:Key="Bg">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_d.png</ImageSource>
						<ImageSource x:Key="BgH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_h.png</ImageSource>
						<ImageSource x:Key="BgActive">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_active_d.png</ImageSource>
						<ImageSource x:Key="BgActiveH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_active_h.png</ImageSource>
						<ImageSource x:Key="BgDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_disabled.png</ImageSource>
					</ls:LSCheckBox.Resources>
				</ls:LSCheckBox>

				<ls:LSCheckBox x:Name="ProficiencyButton" IsChecked="{Binding UseProficiencyFilter}" Content="{Binding Source='h613ff7ddg32f4g43cagabd9g158fd1d7a4ec',Converter={StaticResource TranslatedStringConverter}}" Template="{StaticResource FilterCheckBoxTemplate}" Tag="FilterProficiencyEquipment" Margin="0,0,0,40" Visibility="Collapsed">
					<ls:LSCheckBox.Resources>
						<ImageSource x:Key="IconOff">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_proficiencyFilter_off.png</ImageSource>
						<ImageSource x:Key="IconOn">pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel_c/c_ico_proficiencyFilter_on.png</ImageSource>
						<ImageSource x:Key="Bg">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_d.png</ImageSource>
						<ImageSource x:Key="BgH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_h.png</ImageSource>
						<ImageSource x:Key="BgActive">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_active_d.png</ImageSource>
						<ImageSource x:Key="BgActiveH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_active_h.png</ImageSource>
						<ImageSource x:Key="BgDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_checkHolder_disabled.png</ImageSource>
					</ls:LSCheckBox.Resources>
				</ls:LSCheckBox>

				<ls:LSCheckBox x:Name="ClearFilters" IsChecked="False" Content="{Binding Source='h020d9431g05f9g426dga8f9gc2834654972f',Converter={StaticResource TranslatedStringConverter}}" Template="{StaticResource FilterCheckBoxTemplate}" Tag="ClearInventoryFilter" Visibility="{Binding Visibility, ElementName=InventoryFilters}">
					<ls:LSCheckBox.Resources>
						<ImageSource x:Key="Bg">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_d.png</ImageSource>
						<ImageSource x:Key="BgH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_h.png</ImageSource>
						<ImageSource x:Key="BgActive">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_active_d.png</ImageSource>
						<ImageSource x:Key="BgActiveH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_active_h.png</ImageSource>
						<ImageSource x:Key="BgDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_disabled.png</ImageSource>
					</ls:LSCheckBox.Resources>

					<b:Interaction.Triggers>
						<b:EventTrigger EventName="Checked">
							<b:Interaction.Behaviors>
								<b:ConditionBehavior>
									<b:ConditionalExpression>
										<b:ComparisonCondition LeftOperand="{Binding DataContext, ElementName=FilterRoot, Converter={StaticResource TypeConverter}}" Operator="NotEqual" RightOperand="ls.VMEquipment"/>
									</b:ConditionalExpression>
								</b:ConditionBehavior>
							</b:Interaction.Behaviors>
							<b:ChangePropertyAction TargetName="InventoryFilter" PropertyName="Tag" Value="{x:Null}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSCheckBox>

				<ItemsControl x:Name="InventoryFilters" ItemsSource="{Binding SuggestedFiltersList, ElementName=InventoryFilteringContainerHolder}" Visibility="{Binding SuggestedFiltersList.Count, ElementName=InventoryFilteringContainerHolder, Converter={StaticResource CountToVisibilityConverter}, FallbackValue=Collapsed}" Margin="0,0,0,20"  Template="{StaticResource MinimalItemsControlTemplate}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Vertical"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="{x:Type ls:VMEnumFilter}">
							<ls:LSCheckBox x:Name="Button" IsChecked="False" Content="{Binding Name}" Template="{StaticResource FilterCheckBoxTemplate}" Tag="InventoryFilter">
								<ls:LSCheckBox.Resources>
									<ImageSource x:Key="Bg">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_d.png</ImageSource>
									<ImageSource x:Key="BgH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_h.png</ImageSource>
									<ImageSource x:Key="BgActive">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_active_d.png</ImageSource>
									<ImageSource x:Key="BgActiveH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_active_h.png</ImageSource>
									<ImageSource x:Key="BgDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_disabled.png</ImageSource>
								</ls:LSCheckBox.Resources>

								<b:Interaction.Triggers>
									<b:EventTrigger EventName="Checked">
										<b:Interaction.Behaviors>
											<b:ConditionBehavior>
												<b:ConditionalExpression>
													<b:ComparisonCondition LeftOperand="{Binding DataContext, ElementName=FilterRoot, Converter={StaticResource TypeConverter}}" Operator="NotEqual" RightOperand="ls.VMEquipment"/>
												</b:ConditionalExpression>
											</b:ConditionBehavior>
										</b:Interaction.Behaviors>
										<b:ChangePropertyAction TargetName="InventoryFilter" PropertyName="Tag" Value="{x:Null}"/>
									</b:EventTrigger>
								</b:Interaction.Triggers>
							</ls:LSCheckBox>

							<DataTemplate.Triggers>
								<DataTrigger Value="True">
									<DataTrigger.Binding>
										<MultiBinding Converter="{StaticResource EqualConverter}">
											<Binding Path="DataContext.CurrentPlayer.UIData.GlobalSelectedFilter" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
											<Binding Path="."/>
										</MultiBinding>
									</DataTrigger.Binding>
									<Setter TargetName="Button" Property="IsChecked" Value="True"/>
								</DataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

				<TextBlock Text="{Binding Source='h9414328dgbabeg4602g82c1g4c947c1c8e34',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_accent00TxtColor}" FontSize="{StaticResource ScaledDefaultFontSize}" Margin="0,-10,0,0" />

				<ItemsControl x:Name="SortOptions" ItemsSource="{Binding DataContext.CurrentPlayer.SelectedCharacter.InventorySortOptions, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Template="{StaticResource MinimalItemsControlTemplate}" Margin="0,0,0,40" >
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel Orientation="Vertical"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>

					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ls:LSCheckBox x:Name="Button" IsChecked="False" Content="{Binding .}" Template="{StaticResource FilterCheckBoxTemplate}" Tag="Sort" IsEnabled="{Binding IsEnabled}">
								<ls:LSCheckBox.Resources>
									<ImageSource x:Key="Bg">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_d.png</ImageSource>
									<ImageSource x:Key="BgH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_h.png</ImageSource>
									<ImageSource x:Key="BgActive">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_active_d.png</ImageSource>
									<ImageSource x:Key="BgActiveH">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_active_h.png</ImageSource>
									<ImageSource x:Key="BgDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_radioButton_disabled.png</ImageSource>
								</ls:LSCheckBox.Resources>
							</ls:LSCheckBox>

							<DataTemplate.Triggers>
								<DataTrigger Binding="{Binding IsEnabled}" Value="False">
									<Setter Property="Opacity" Value="0.85"/>
								</DataTrigger>

								<DataTrigger Binding="{Binding DataContext, ElementName=FilterRoot, Converter={StaticResource TypeConverter}}" Value="ls.VMEquipment">
									<Setter TargetName="Button" Property="Tag" Value="EquipmentSort"/>
								</DataTrigger>

								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding DataContext, ElementName=FilterRoot, Converter={StaticResource TypeConverter}}" Value="ls.Character"/>
										<Condition Value="True">
											<Condition.Binding>
												<MultiBinding Converter="{StaticResource EqualConverter}">
													<Binding Path="DataContext.CurrentPlayer.SelectedCharacter.CurrentInventorySortOption.Name" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
													<Binding Path="Name"/>
												</MultiBinding>
											</Condition.Binding>
										</Condition>
									</MultiDataTrigger.Conditions>
									<Setter TargetName="Button" Property="IsChecked" Value="True"/>
								</MultiDataTrigger>

								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding DataContext, ElementName=FilterRoot, Converter={StaticResource TypeConverter}}" Value="ls.VMEquipment"/>
										<Condition Value="True">
											<Condition.Binding>
												<MultiBinding Converter="{StaticResource EqualConverter}">
													<Binding Path="DataContext.CurrentPlayer.SelectedCharacter.CurrentEquipmentSortOption.Name" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
													<Binding Path="Name"/>
												</MultiBinding>
											</Condition.Binding>
										</Condition>
									</MultiDataTrigger.Conditions>
									<Setter TargetName="Button" Property="IsChecked" Value="True"/>
								</MultiDataTrigger>
							</DataTemplate.Triggers>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</StackPanel>
		</ls:LSNineSliceImage>

		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.UIData.GlobalSelectedFilter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="{x:Null}">
				<Setter TargetName="ClearFilters" Property="IsChecked" Value="True"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource Self}, Converter={StaticResource TypeConverter}}" Value="ls.VMEquipment">
				<Setter TargetName="PartyInventoryButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ProficiencyButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="SortOptions" Property="ItemsSource" Value="{Binding DataContext.CurrentPlayer.SelectedCharacter.EquipmentSortOptions, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<!-- Characteristics, Skills and Additional Templates -->
	<DataTemplate x:Key="ProficiencyEntry">
		<DataTemplate.Resources>
			<BitmapImage x:Key="IconProficiencyMusical" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_musicalInstruments.png" />
		</DataTemplate.Resources>
		<ContentControl x:Name="ProficiencyEntryRoot" Style="{StaticResource FocusableContentControlNoBG}" ToolTipService.IsEnabled="False" Margin="{StaticResource ListPadding}">
			<ContentControl.ToolTip>
				<ls:LSTooltip>
					<TextBlock x:Name="description" Style="{StaticResource TooltipBaseTextStyle}" Text="{Binding Source='h8f9f545dg237eg49fcg9f12g84f1cff2218d',Converter={StaticResource TranslatedStringConverter}}"/>
				</ls:LSTooltip>
			</ContentControl.ToolTip>

			<DockPanel>
				<!-- Default: musical instrument -->
				<Image x:Name="ProficiencyIcon"  DockPanel.Dock="Left" Source="{StaticResource IconProficiencyMusical}" VerticalAlignment="Center" Margin="16,0,16,0" Stretch="None"/>
				<TextBlock x:Name="ProficiencyText" Text="{Binding Source='hd29bbe68g0a7fg4861g8e94gf6e9ee63804d',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource BaseTextStyle}" Foreground="{StaticResource LS_baseTxtColor}" Margin="{StaticResource TextTopBottomMargin}" TextAlignment="Left" VerticalAlignment="Center"/>
			</DockPanel>
		</ContentControl>

		<DataTemplate.Triggers>

			<DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=Self}}" Value="MusicalInstrument">
				<Setter TargetName="ProficiencyEntryRoot" Property="ToolTipService.IsEnabled" Value="True"/>
				<Setter TargetName="description" Property="ls:TextBlockFormatter.SourceText">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
							<Binding Source="h8f9f545dg237eg49fcg9f12g84f1cff2218d"/>
							<Binding Path="(ls:TooltipExtender.Owner).Name" RelativeSource="{RelativeSource Mode=Self}"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</DataTrigger>

			<DataTrigger Binding="{Binding ProficiencyType}" Value="Battleaxes">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_battleAxe.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h0987de21g7f18g46bdg96b6g251f0d886fd8',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Clubs">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_club.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hf7ee4cf2g8054g4cecgaf42g00e26e4c6301',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Daggers">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_dagger.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='ha9bc5c71gf7fdg4f77gad7eg14da6c8ecfc2',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Darts">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_dart.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hf8205efdgf1f5g4581g8391g829af9b98138',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Flails">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_flail.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hf61bb53cg6987g4c34gbaf3g008e491dd1bd',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Glaives">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_glaive.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h899d4afbgabdag433ag924ag1aa328117d8a',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Greataxes">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_greatAxe.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h9430a867gd49ag48c8g9900gc945e3326765',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Greatclubs">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_greatClub.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hec8a15degd33fg4fdagaf70gf0f1c9dd53e9',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Greatswords">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_greatSword.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h8d8817a2gf20dg4eb8gbcd0gfd1bc5428004',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Halberds">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_halbard.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='ha9d067e1g28dfg4fa3gbdabg0c3fa133279d',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Handaxes">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_handAxe.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h35568a26gee03g4dfagb3d0g35db1faec364',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="HandCrossbows">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_handCrossbow.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h23613b92g02b0g4b9cg9b7fg937f0d83f7d8',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="HeavyArmor">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_heavyArmour.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h71d00b00g56dcg4e21g8662g060ced42c3dc',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="HeavyCrossbows">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_heavyCrossbow.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h5b736f1eg9895g4263gb76dg76c06c1038ae',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Javelins">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_javelin.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hbfcb8bcbg561ag473bga1a0g4e184d2b2692',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="LightArmor">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_lightArmour.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h2eebdf9ag6c29g43d2g80d8g3371b7d65cdf',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="LightCrossbows">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_lightCrossbow.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h210d748egfceeg4e76gabe5g9080c902693f',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="LightHammers">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_lightHammer.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='ha0df64f6gae3cg4dd4gaee6g8aa988bfde8f',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Longbows">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_longBow.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h68720f95gd2c6g4b0ega150geece5a885719',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Longswords">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_longSword.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h23d056e9g6d0cg47d1g9603g873752123142',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Maces">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_mace.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h6718875ag0e2eg46eag98f0gb8d626d5ec13',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Mauls">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_maul.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h1332cd56g203fg4919gac2dg2d2443302a31',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="MediumArmor">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_mediumArmour.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hbd44c0e2g6a6eg4c8ag8ef4gbe1b95e4bf49',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Morningstars">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_morningStar.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hc622f5a9gf7cag4b6ag8e99g792d3831fdfc',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Pikes">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_pike.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='he28bbadcgf4fdg48f8gb59bg89d5895d1267',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Quarterstaffs">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_quarterstaff.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h3fcd9f76g0dcfg4038g9a56g06353c1c0cea',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Rapiers">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_rapier.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h3c574faagd3dbg4b38gbca9g2a71750dfcf0',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Scimitars">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_scimitar.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h4caa96c2g100fg4292ga543g740f93ad59ca',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Shields">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_shield.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h7a819a15g5129g48bagafc1g1c73cc6634ab',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Shortbows">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_shortBow.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h931161d1ge54ag480agb3d1gdaf3ed47004c',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Shortswords">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_shortSword.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h2529ddf4gb846g4940g9b1dg9969718fe87d',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Sickles">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_sickle.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h28d04d64ge35dg4469g956bg27d715d6e9b1',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Slings">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_sling.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hc5bd4565g187cg49e2ga99eg43b33c5b8142',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Spears">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_spear.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h45a6183ag755ag4fdagb147gae8c86ceec57',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Tridents">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_trident.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='hf2542d79gdedfg4a37gb9d2g2238be0f9f4c',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Warhammers">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_warhammer.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h4e50a96bg2c2bg41daga27eg623eeae44daf',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ProficiencyType}" Value="Warpicks">
				<Setter TargetName="ProficiencyIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/ProficiencyIcons/ico_proficiency_warPick.png"/>
				<Setter TargetName="ProficiencyText" Property="Text" Value="{Binding Source='h2914d6ecg0f4ag4452ga88cg59a2f075a69f',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate x:Key="ProficiencyGroup">
		<StackPanel>
			<Expander x:Name="ExpandToggle" IsExpanded="False">
				<Expander.Template>
					<ControlTemplate TargetType="{x:Type Expander}">
						<DockPanel x:Name="DockRoot" Margin="{StaticResource ListPadding}">
							<Grid DockPanel.Dock="Top">
								<ls:LSToggleButton x:Name="ExpanderButton" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource FocusableContentControlNoBG}" Tag="ExpanderGroup" Margin="{StaticResource TextTopBottomMargin}">

									<ls:LSToggleButton.ToolTip>
										<ls:LSTooltip  ToolTipService.VerticalOffset="0"  ToolTipService.HorizontalOffset="70">
											<TextBlock x:Name="ProficiencyGroupTooltip" Style="{StaticResource TooltipBaseTextStyle}" ls:TextBlockFormatter.SourceText="{Binding Source='h92a7f788g9fd4g419eg9c88gebd9d9bd1667',Converter={StaticResource TranslatedStringConverter}}" />
										</ls:LSTooltip>
									</ls:LSToggleButton.ToolTip>

									<DockPanel>
										<Image x:Name="Arrow" DockPanel.Dock="Left" Source="{StaticResource ListArrowCollapsed}" Stretch="None" Margin="10,0" VerticalAlignment="Center"/>
										<TextBlock x:Name="GroupName" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,16,0"/>
										<TextBlock x:Name="GroupCount" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding DataContext.Count, ElementName=ExpandToggle, StringFormat='{}({0})'}"
													   Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}"/>
									</DockPanel>

								</ls:LSToggleButton>
							</Grid>
							<ContentPresenter Name="Content"/>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="False">
								<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowCollapsed}"/>
								<Setter TargetName="Content" Property="Visibility" Value="Collapsed"/>
							</Trigger>
							<Trigger SourceName="ExpanderButton" Property="IsChecked" Value="True">
								<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpanded}"/>
								<Setter Property="IsExpanded" Value="True"/>
							</Trigger>
							<DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=ExpanderButton}" Value="True">
								<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowCollapsedH}"/>
								<Setter TargetName="ExpanderButton" Property="BoundEvent" Value="UIAccept"/>
							</DataTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition SourceName="ExpanderButton" Property="IsChecked" Value="True"/>
									<Condition SourceName="ExpanderButton" Property="IsFocused" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpandedH}"/>
							</MultiTrigger>

							<DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="Armors">
								<Setter TargetName="GroupName" Property="Text" Value="{Binding Source='h9ac79039g668bg4b3cg9a34g3688c34d084b',Converter={StaticResource TranslatedStringConverter}}"/>
								<Setter TargetName="ProficiencyGroupTooltip" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='he15abbcag7b88g4a1dg912cgfd0eb15c18af',Converter={StaticResource TranslatedStringConverter}}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="MartialWeapons">
								<Setter TargetName="GroupName" Property="Text" Value="{Binding Source='h93cf8a7dgf14dg4f68g816fgdbf4de0dae41',Converter={StaticResource TranslatedStringConverter}}"/>
								<Setter TargetName="ProficiencyGroupTooltip" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hd987cd69ge3c1g41cag8462g66084ca067d4',Converter={StaticResource TranslatedStringConverter}}"/>
							</DataTrigger>
							<DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="SimpleWeapons">
								<Setter TargetName="GroupName" Property="Text" Value="{Binding Source='hd0ea839ag4be2g455bgbff6g71446c4f1355',Converter={StaticResource TranslatedStringConverter}}"/>
								<Setter TargetName="ProficiencyGroupTooltip" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='h9d841c8dgffceg4615g911dga68cf21b5cc9',Converter={StaticResource TranslatedStringConverter}}"/>
							</DataTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Expander.Template>
				<Grid x:Name="Content">
					<ItemsControl x:Name="ProficiencyList" ItemsSource="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" ItemTemplate="{StaticResource ProficiencyEntry}"
										  Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}}"
										  Tag="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Template="{StaticResource MinimalItemsControlTemplate}"/>

					<TextBlock x:Name="NonProficient" Visibility="{Binding Visibility, ElementName=ProficiencyList, Converter={StaticResource InvertVisibilityConverter}}" Style="{StaticResource BaseTextStyle}"
									   Margin="64,16,16,0" HorizontalAlignment="Left"/>
				</Grid>
			</Expander>
		</StackPanel>

		<DataTemplate.Triggers>
			<!-- Changing the visibility triggers the ui::Widget::ValidateFocus, which moves the focus to the content list, so we are changing Height + IsEnabled to prevent that focus movement -->
			<Trigger SourceName="ExpandToggle" Property="IsExpanded" Value="False">
				<Setter TargetName="Content" Property="Height" Value="0"/>
				<Setter TargetName="Content" Property="IsEnabled" Value="False"/>
			</Trigger>

			<Trigger Property="Tag" Value="Armors">
				<Setter TargetName="NonProficient" Property="ls:TextBlockFormatter.SourceText">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
							<Binding Source="h3f2a13d0g43dfg45c3g9054gac4435262f3b"/>
							<Binding Path="(ls:TooltipExtender.Owner).Name" RelativeSource="{RelativeSource Mode=Self}"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Tag" Value="MartialWeapons">
				<Setter TargetName="NonProficient" Property="ls:TextBlockFormatter.SourceText">
					<Setter.Value>
						<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
							<Binding Source="h8ad022f5g5e8eg409eg8577gb83095463181"/>
							<Binding Path="(ls:TooltipExtender.Owner).Name" RelativeSource="{RelativeSource Mode=Self}"/>
						</MultiBinding>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Tag" Value="SimpleWeapons">
				<Setter TargetName="NonProficient" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source='hf7123068g3be1g4e48g966agf6c32e7fbf0a',Converter={StaticResource TranslatedStringConverter}}"/>
			</Trigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<!-- Skills List -->
	<Style x:Key="SkillsGroup" TargetType="ItemsControl">
		<Setter Property="Template" Value="{StaticResource MinimalItemsControlTemplate}"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate DataType="{x:Type ls:VMSkill}">
					<ContentControl x:Name="FocusableContent" Style="{StaticResource FocusableContentControlNoBG}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-12" ToolTipService.HorizontalOffset="60"
													Margin="{StaticResource ListPadding}">
						<DockPanel LastChildFill="False" Margin="{StaticResource listMarginDefault}">
							<Image DockPanel.Dock="Left" Width="80" Height="80" x:Name="ProficiencyIcon" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Right" Source="{StaticResource IconProficiencyStar}"/>

							<Control x:Name="SkillName" Template="{StaticResource SkillDisplayName}" Style="{StaticResource StatsNameStyle}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{StaticResource TextTopBottomMargin}"/>

							<TextBlock x:Name="SkillModifier" DockPanel.Dock="Right" FontSize="{StaticResource ScaledIntermediateFontSize}" Style="{StaticResource BaseTextStyle}" Text="{Binding Value, StringFormat={}{0:+#;-#;0}}" VerticalAlignment="Center" TextAlignment="Right" Margin="28,0,28,0"/>
						</DockPanel>
					</ContentControl>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding ProficiencyType}" Value="None">
							<Setter TargetName="ProficiencyIcon" Property="Visibility" Value="Hidden"/>
						</DataTrigger>

						<DataTrigger Binding="{Binding Visibility, ElementName=ProficiencyIcon}" Value="Visible">
							<Setter TargetName="SkillName" Property="Foreground" Value="{StaticResource LS_specialTxtColor}"/>
							<Setter TargetName="SkillModifier" Property="Foreground" Value="{StaticResource LS_specialTxtColor}"/>
						</DataTrigger>

						<DataTrigger Binding="{Binding ProficiencyType}" Value="Expertise">
							<Setter TargetName="SkillName" Property="Foreground" Value="{StaticResource LS_bar50TxtColor}"/>
							<Setter TargetName="SkillModifier" Property="Foreground" Value="{StaticResource LS_bar50TxtColor}"/>
						</DataTrigger>

						<DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=FocusableContent}" Value="True">
							<Setter TargetName="SkillName" Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
							<Setter TargetName="SkillModifier" Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Storyboard x:Key="ShowCharacterPanelInChunks">
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Tabs">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
			<DiscreteObjectKeyFrame KeyTime="0:0:0.01" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="Equipment">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
			<DiscreteObjectKeyFrame KeyTime="0:0:0.08" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EquipmentSlots">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
			<DiscreteObjectKeyFrame KeyTime="0:0:0.10" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="EquipmentSlotsMainSection">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
			<DiscreteObjectKeyFrame KeyTime="0:0:0.12" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PaperDollGrid">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
			<DiscreteObjectKeyFrame KeyTime="0:0:0.14" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="StatsAndAbilities">
			<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
			<DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="{x:Static Visibility.Visible}"/>
		</ObjectAnimationUsingKeyFrames>
	</Storyboard>

	<ControlTemplate x:Key="PreloadedCharacterPanel_c" TargetType="ls:UIWidget">
		<!-- Tag True indicates UI should use the reduced view (used for split screen and for narrow resolutions). If you read this, don't use it as an example. Make split screen default and use triggers when it should be full screen. -->
		<Grid x:Name="CharSheetPanelRoot" Tag="True" d:DataContext="{d:DesignInstance {x:Type ls:DCCharacterPanels}, IsDesignTimeCreatable=True}">
			<Grid.Triggers>
				<EventTrigger RoutedEvent="Loaded">
					<BeginStoryboard Name="ShowCharacterPanelInChunks" Storyboard="{StaticResource ShowCharacterPanelInChunks}"/>
				</EventTrigger>
				<EventTrigger RoutedEvent="Unloaded">
					<StopStoryboard BeginStoryboardName="ShowCharacterPanelInChunks"/>
				</EventTrigger>
			</Grid.Triggers>
			<b:Interaction.Triggers>
				<b:EventTrigger EventName="FocusChanged">
					<b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding Path=FocusedElement, ElementName=CharacterPanel_c}"/>
				</b:EventTrigger>
				<b:DataTrigger Binding="{Binding HasInputEnabled, ElementName=CharacterPanel_c}" Value="True">
					<b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding FocusedElement, ElementName=CharacterPanel_c}"/>
				</b:DataTrigger>

				<b:EventTrigger EventName="Loaded">
					<!--<ls:SetMoveFocusAction TargetName="CharacterPanel_c" DeferFocusAction="True"/>-->
					<b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElement}"/>
					<b:ChangePropertyAction TargetObject="{Binding CurrentPlayer}" PropertyName="ShowCampCharacter" Value="{x:Null}"/>
				</b:EventTrigger>

				<b:StoryboardCompletedTrigger Storyboard="{Binding Storyboard, ElementName=ShowEquipmentSelectorSA}">
					<ls:SetMoveFocusAction TargetName="CharacterPanel_c" FocusElement="{Binding ElementName=EquipmentSelector}"/>
				</b:StoryboardCompletedTrigger>

				<b:StoryboardCompletedTrigger Storyboard="{Binding Storyboard, ElementName=HideEquipmentSelectorSA}">
					<b:InvokeCommandAction Command="{Binding HideAvailableEquipmentCommand}" CommandParameter="{Binding CurrentPlayer.SelectedCharacter.Equipment}"/>
					<ls:SetMoveFocusAction TargetName="CharacterPanel_c" FocusElement="{Binding ElementName=EquipmentSlots}"/>
				</b:StoryboardCompletedTrigger>

				<b:StoryboardCompletedTrigger Storyboard="{Binding Storyboard, ElementName=ShowEquipmentFilterSA}">
					<ls:SetMoveFocusAction TargetName="CharacterPanel_c"/>
				</b:StoryboardCompletedTrigger>

				<b:StoryboardCompletedTrigger Storyboard="{Binding Storyboard, ElementName=HideEquipmentFilterSA}">
					<b:ChangePropertyAction TargetName="EquipmentFilter" PropertyName="Visibility" Value="Collapsed"/>
					<ls:SetMoveFocusAction TargetName="CharacterPanel_c"/>
				</b:StoryboardCompletedTrigger>

				<b:StoryboardCompletedTrigger Storyboard="{Binding Storyboard, ElementName=SectionFadeInActionSA}">
					<ls:SetMoveFocusAction TargetName="CharacterPanel_c"/>
				</b:StoryboardCompletedTrigger>

				<b:EventTrigger EventName="Unloaded">
					<ls:LSPlaySound Sound="UI_HUD_Journal_Close"/>
				</b:EventTrigger>
			</b:Interaction.Triggers>

			<!-- BACKGROUND -->

			<Image HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Source="{StaticResource CharacterSheetBackground}" Stretch="UniformToFill"/>

			<!-- Subpanels -->

			<AdornerDecorator>
				<Grid x:Name="SubPanelsRoot" ls:TooltipExtender.Owner="{Binding CurrentPlayer.SelectedCharacter}" MaxWidth="3840" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="True">
				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="LeftPadding" Width="288" />
					<ColumnDefinition x:Name="ColumnOne" Width="1540" />
					<ColumnDefinition x:Name="ColumnTwo"  Width="*" />
					<ColumnDefinition x:Name="ColumnThree" Width="*" />
					<ColumnDefinition x:Name="RightPadding" Width="96" />
				</Grid.ColumnDefinitions>

				<Rectangle Grid.Column="0" Grid.ColumnSpan="5" x:Name="BackgroundGradient" Width="1920" Height="2160" VerticalAlignment="Stretch" Margin="1480,0,0,0" HorizontalAlignment="Center" Opacity="0.9">
					<Rectangle.Fill>
						<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
							<GradientStop Color="{StaticResource Trade.BackgroundTransparentColor}" Offset="0"/>
							<GradientStop Color="Black" Offset="0.5"/>
							<GradientStop Color="{StaticResource Trade.BackgroundTransparentColor}" Offset="1"/>
						</LinearGradientBrush>
					</Rectangle.Fill>
				</Rectangle>

				<!-- PAPERDOLL -->
				<Grid x:Name="PaperDollGrid" Grid.Column="0" HorizontalAlignment="Center" Margin="1060,-200,0,0" Grid.ColumnSpan="5" Visibility="Collapsed">
					<ls:LSPaperdoll x:Name="PaperDoll" noesis:Element.BlendingMode="Additive" EntityRef="{Binding CurrentPlayer.SelectedCharacter.EntityHandle}" Width="1520" Height="2360" HorizontalAlignment="Left" UseCombatPose="True" Zoom="0.2" Margin="400,180,0,0" RenderScale="{Binding Data.RenderScale}"/>
				</Grid>

				<!-- Header -->

				<!-- TAB CONTENT -->
				<Grid x:Name="Tabs" Grid.Column="1" Margin="0,416,0,0" IsEnabled="{Binding CurrentPlayer.SelectedCharacter.Equipment.ShowAvailableEquipment, Converter={StaticResource InvertBoolConverter}}" Tag="" Visibility="Collapsed">
					<TextBlock x:Name="TabName" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-72,0,0" Foreground="{StaticResource LS_extraspecialTxtColor}" FontSize="{StaticResource ScaledHugeFontSize}"/>
					<DockPanel LastChildFill="True">
						<TextBlock x:Name="TabSummary" DockPanel.Dock="Top" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="32,78,0,0" Style="{StaticResource BaseTextStyle}" FontSize="{StaticResource ScaledMediumFontSize}"  Foreground="{StaticResource LS_accent75TxtColor}" FontWeight="DemiBold" FontStyle="italic" MaxWidth="1340" TextWrapping="Wrap" Visibility="Collapsed"/>
						<Grid x:Name="TabContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{StaticResource TabContentMargin}">

							<b:Interaction.Triggers>
								<b:PropertyChangedTrigger Binding="{Binding Tag, ElementName=TabContentPresenter}">
									<b:ControlStoryboardAction x:Name="SectionFadeInActionSA">
										<b:ControlStoryboardAction.Storyboard>
											<Storyboard Children="{StaticResource SubSectionFadeIn}"/>
										</b:ControlStoryboardAction.Storyboard>
									</b:ControlStoryboardAction>
									<b:ChangePropertyAction TargetName="Tabs" PropertyName="Tag" Value=""/>
								</b:PropertyChangedTrigger>
							</b:Interaction.Triggers>


							<ContentPresenter x:Name="InventoryContent" Content="{Binding CurrentPlayer.SelectedCharacter}" Visibility="Collapsed">
								<ContentPresenter.ContentTemplate>
									<DataTemplate DataType="{x:Type ls:Character}">
										<DataTemplate.Resources>
											<Storyboard x:Key="ShowInventoryInChunks">
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="InventoryFilterIndicator">
													<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
													<DiscreteObjectKeyFrame KeyTime="0:0:0.01" Value="{x:Static Visibility.Visible}"/>
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="InventoryContent">
													<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Collapsed}"/>
													<DiscreteObjectKeyFrame KeyTime="0:0:0.04" Value="{x:Static Visibility.Visible}"/>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>

										</DataTemplate.Resources>
										<Grid x:Name="InventoryTabRoot" ls:MoveFocus.FocusMovementMode="MainAxisTunnel" Margin="0,0,60,0" MaxWidth="1600">
											<Grid.Triggers>
												<EventTrigger RoutedEvent="Loaded">
													<BeginStoryboard Name="ShowInventoryInChunks" Storyboard="{StaticResource ShowInventoryInChunks}"/>
												</EventTrigger>
												<EventTrigger RoutedEvent="Unloaded">
													<StopStoryboard BeginStoryboardName="ShowInventoryInChunks"/>
												</EventTrigger>
											</Grid.Triggers>
											<b:Interaction.Triggers>
												<b:StoryboardCompletedTrigger Storyboard="{Binding Storyboard, ElementName=ShowInventoryFilterSA}">
													<ls:SetMoveFocusAction TargetName="CharacterPanel_c"/>
													<b:ChangePropertyAction TargetName="CharacterPanel_c" PropertyName="Tag" Value="{Binding ElementName=PlayerInventory, Path=SelectedItems.Count}"/>
												</b:StoryboardCompletedTrigger>

												<b:StoryboardCompletedTrigger Storyboard="{StaticResource HideInventoryFilterAnimation}">
													<b:ChangePropertyAction TargetName="CharacterPanel_c" PropertyName="Tag" Value=""/>
													<b:ChangePropertyAction TargetName="Tabs" PropertyName="Tag" Value=""/>
													<ls:SetMoveFocusAction TargetName="CharacterPanel_c" FocusElement="{Binding Tag, ElementName=InventoryFilter}"/>
												</b:StoryboardCompletedTrigger>

												<b:EventTrigger EventName="Loaded">
													<!-- Tutorial UI Event - Inventory Opened-->
													<b:InvokeCommandAction Command="{Binding DataContext.TutorialEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="e2d0dd0a-5958-454f-9ec3-0bfba58c7153"/>
												</b:EventTrigger>
											</b:Interaction.Triggers>

											<ContentControl x:Name="InventoryFilterIndicator" Template="{StaticResource FilterContainerTemplate}" Visibility="Collapsed"
													DataContext="{Binding DataContext.CurrentPlayer.SelectedCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,-180,-10,0">
												<ls:LSButton x:Name="OpenFiltersButton" Template="{StaticResource ControllerButton.ImageSwitcher}" DataContext="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIFilter'}" BoundEvent="UIFilter" Width="{StaticResource ScaledControllerHintSize}" Height="{StaticResource ScaledControllerHintSizeSmall}" VerticalAlignment="Center" Margin="0,-4,0,0" HorizontalAlignment="Right">
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="LSButtonPressed">
															<b:ChangePropertyAction TargetName="InventoryFilter" PropertyName="Tag" Value="{Binding FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
															<b:ChangePropertyAction TargetName="Tabs" PropertyName="Tag" Value="Filters"/>
															<b:ControlStoryboardAction x:Name="ShowInventoryFilterSA">
																<b:ControlStoryboardAction.Storyboard>
																	<Storyboard Children="{StaticResource ShowInventoryFilterAnimation}"/>
																</b:ControlStoryboardAction.Storyboard>
															</b:ControlStoryboardAction>
														</b:EventTrigger>
													</b:Interaction.Triggers>
												</ls:LSButton>
											</ContentControl>

											<ContentPresenter x:Name="InventoryFilter" ContentTemplate="{StaticResource FilterSelectorTemplate}" Content="{Binding .}" Visibility="Collapsed" Opacity="0" HorizontalAlignment="Right" VerticalAlignment="Top"
												  Margin="0,-60,0,0" Width="650" Panel.ZIndex="2"/>

											<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" ls:ElementCacheHelper.ScrollViewerGroupId="PartyListInventory_c">


												<StackPanel x:Name="InventoryContent" VerticalAlignment="Stretch" Visibility="Collapsed">
													<StackPanel.Resources>

														<ItemsPanelTemplate x:Key="InventoryItemsPanelTemplate">
															<StackPanel Orientation="Vertical"/>
														</ItemsPanelTemplate>

														<ControlTemplate x:Key="InventoryContainerTemplate" TargetType="ItemsControl">
															<!-- No ScrollViewer -->
															<ItemsPresenter/>
														</ControlTemplate>

														<DataTemplate x:Key="InventoryItemTemplate">
															<Expander x:Name="SingleInventoryRoot" HorizontalAlignment="Stretch" VerticalAlignment="Top" Tag="False" Margin="0,0,0,20" IsExpanded="True">
																<b:Interaction.Behaviors>
																	<!-- Flow: InventoriesMerger > FilteringContainer > CollectionSortBehavior -->
																	<ls:InventoriesMergerBehavior x:Name="CharacterInventoriesMerged" Inventories="{Binding Inventories}"/>
																	<ls:InventoriesMergerBehavior x:Name="CharacterInventoriesMergedNoSubs" Inventories="{Binding Inventories}" MergeSubInventories="False"/>
																	<ls:CollectionSortBehavior x:Name="CharacterInventorySorted" ItemsSource="{Binding GeneratedItemsList, ElementName=CharacterInventoryFilteringContainerHolder}" Comparer="{Binding  DataContext.CurrentPlayer.InventorySortComparer, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
																</b:Interaction.Behaviors>

																<Expander.Resources>
																	<System:UInt32 x:Key="invCols">12</System:UInt32>
																	<System:UInt32 x:Key="invRows">1</System:UInt32>
																</Expander.Resources>
																<Expander.Template>
																	<ControlTemplate TargetType="{x:Type Expander}" >
																		<ControlTemplate.Resources>
																			<BitmapImage x:Key="LockIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_lock_enabled_d.png"/>
																		</ControlTemplate.Resources>

																		<StackPanel x:Name="PanelRoot">
																			<ls:LSToggleButton x:Name="ExpanderButton" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
																				   Tag="InventoryExpanderGroup" Style="{StaticResource FocusableContentControlStyle}">
																				<ls:LSNineSliceImage x:Name="GridHeader" Height="108" ImageSource="{StaticResource BackgroundHeader}" Slices="28" Padding="20" >
																					<Grid>
																						<Grid.ColumnDefinitions>
																							<ColumnDefinition Width="Auto"/>
																							<ColumnDefinition Width="*"/>
																							<ColumnDefinition Width="Auto"/>
																							<ColumnDefinition Width="Auto"/>
																							<ColumnDefinition Width="Auto"/>
																						</Grid.ColumnDefinitions>
																						<Image x:Name="Arrow" Grid.Column="0" Source="{StaticResource ListArrowCollapsed}" Stretch="None" Margin="-18,-18,-8,-18" VerticalAlignment="Center"/>
																						<TextBlock x:Name="Title" Grid.Column="1" HorizontalAlignment="Left" Style="{StaticResource TradeDefaultFontStyle}" TextTrimming="CharacterEllipsis">
																				<ls:TextBlockFormatter.SourceText>
																					<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
																						<Binding Source="hfd89b43bg7da3g472fg871bg07d754cce489"/>
																						<Binding Path="Name"/>
																					</MultiBinding>
																				</ls:TextBlockFormatter.SourceText>
																						</TextBlock>

																						<StackPanel x:Name="CharacterGoldHolder" Grid.Column="2" Orientation="Horizontal" Margin="0,0,16,0">
																							<TextBlock VerticalAlignment="Center" TextAlignment="Right" Margin="0,0,0,0" Foreground="{StaticResource LS_tint100}" Background="Transparent"  Text="{Binding Inventory.Gold, StringFormat={}{0:N0}}" FontSize="{StaticResource ScaledDefaultFontSize}"/>
																							<Image VerticalAlignment="Center" Source="{StaticResource GoldIcon}" Stretch="None"/>
																						</StackPanel>

																						<Control x:Name="WeightDisplayControl" Grid.Column="3" Template="{StaticResource WeightIconTemplate}" VerticalAlignment="Center" HorizontalAlignment="Right"/>

																						<Image x:Name="LockStatus" Source="{StaticResource LockIcon}" Grid.Column="4" Stretch="None" Visibility="Collapsed"/>
																					</Grid>
																				</ls:LSNineSliceImage>
																			</ls:LSToggleButton>
																			<ContentPresenter Name="Content"/>
																		</StackPanel>

																		<ControlTemplate.Triggers>
																			<Trigger Property="IsExpanded" Value="False">
																				<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowCollapsed}"/>
																				<Setter TargetName="Content" Property="Visibility" Value="Collapsed"/>
																			</Trigger>
																			<Trigger SourceName="ExpanderButton" Property="IsChecked" Value="True">
																				<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpanded}"/>
																				<Setter Property="IsExpanded" Value="True"/>
																			</Trigger>

																			<DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=ExpanderButton}" Value="True">
																				<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowCollapsedH}"/>
																				<Setter TargetName="ExpanderButton" Property="BoundEvent" Value="UIAccept"/>
																			</DataTrigger>
																			<MultiTrigger>
																				<MultiTrigger.Conditions>
																					<Condition SourceName="ExpanderButton" Property="IsChecked" Value="True"/>
																					<Condition SourceName="ExpanderButton" Property="ls:MoveFocus.IsFocused" Value="True"/>
																				</MultiTrigger.Conditions>
																				<Setter TargetName="Arrow" Property="Source" Value="{StaticResource ListArrowExpandedH}"/>
																			</MultiTrigger>

																			<!-- Lock inventory triggers -->
																			<DataTrigger Binding="{Binding IsInventoryLocked}" Value="False">
																				<Setter TargetName="LockStatus" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_lock_disabled_d.png"/>
																			</DataTrigger>

																			<DataTrigger Binding="{Binding IsInventoryLocked}" Value="True">
																				<Setter TargetName="LockStatus" Property="Visibility" Value="Visible"/>
																			</DataTrigger>

																			<MultiDataTrigger>
																				<MultiDataTrigger.Conditions>
																					<Condition Value="True">
																						<Condition.Binding>
																							<MultiBinding Converter="{StaticResource EqualConverter}">
																								<Binding Path="OwnerUserID"/>
																								<Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
																							</MultiBinding>
																						</Condition.Binding>
																					</Condition>
																					<Condition Binding="{Binding DataContext.Data.Players.Count, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True"/>
																				</MultiDataTrigger.Conditions>
																				<Setter TargetName="LockStatus" Property="Visibility" Value="Visible"/>
																			</MultiDataTrigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Expander.Template>

																<Grid>
																	<ls:FilteringContainer x:Name="CharacterInventoryFilteringContainerHolder"
																			   FilterPredicate="{Binding InventoryPredicate}"
																			   CurrentFilter="{Binding DataContext.CurrentPlayer.UIData.GlobalSelectedFilter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Mode=OneWay}"
																			   ItemsList="{Binding InventoriesSlots, ElementName=CharacterInventoriesMerged}"
																			   DefaultViewItemsList="{Binding InventoriesSlots, ElementName=CharacterInventoriesMergedNoSubs}">
																		<b:Interaction.Triggers>
																			<b:EventTrigger EventName="FilterCleared">
																				<b:InvokeCommandAction Command="{Binding DataContext.ClearFilterCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
																			</b:EventTrigger>
																		</b:Interaction.Triggers>
																	</ls:FilteringContainer>

																	<ListBox x:Name="PlayerInventory" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel"
																 ItemsSource="{Binding Path=SortedItems, ElementName=CharacterInventorySorted}"
																 ls:MultiSelect.IsEnabled="False" SelectionMode="Multiple" Margin="0,10,0,0" KeyboardNavigation.DirectionalNavigation="Continue"
																 HorizontalAlignment="Left" VerticalAlignment="Top" ItemTemplate="{StaticResource InventorySlotDataTemplate}"
																			 AlternationCount="{Binding Path=ItemsSource.Count, RelativeSource={RelativeSource Self}}">
																		<ListBox.Template>
																			<ControlTemplate TargetType="ListBox">
																				<Border x:Name="Border" BorderThickness="2" BorderBrush="{StaticResource LS_InventoryGridSurround}" HorizontalAlignment="Left" VerticalAlignment="Top">
																					<ItemsPresenter x:Name="InventoryItemsPresenter" Margin="0">
																						<ItemsPresenter.Width>
																							<MultiBinding Converter="{StaticResource RoundDownMultiConverter}">
																								<Binding Path="ActualWidth" ElementName="InventoryTabRoot" />
																								<Binding Source="{StaticResource GenericSlotSize}"/>
																							</MultiBinding>
																						</ItemsPresenter.Width>
																					</ItemsPresenter>
																				</Border>
																				<ControlTemplate.Triggers>
																					<DataTrigger Binding="{Binding (ls:MultiSelect.IsEnabled), RelativeSource={RelativeSource Mode=Self}}" Value="True">
																						<Setter TargetName="Border" Property="Background" Value="{StaticResource LS_PlaceHolderMultiselectColor}"/>
																					</DataTrigger>

																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{Binding IsInventoryLocked}" Value="True"/>
																							<Condition Value="False">
																								<Condition.Binding>
																									<MultiBinding Converter="{StaticResource EqualConverter}">
																										<Binding Path="OwnerUserID"/>
																										<Binding Path="DataContext.CurrentPlayer.UserId" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
																									</MultiBinding>
																								</Condition.Binding>
																							</Condition>
																						</MultiDataTrigger.Conditions>
																						<Setter TargetName="Border" Property="Effect">
																							<Setter.Value>
																								<ls:SaturationEffect Saturation="0.3"/>
																							</Setter.Value>
																						</Setter>
																						<Setter TargetName="Border" Property="ls:AttachedProperties.InheritedTag" Value="InventoryLocked"/>
																					</MultiDataTrigger>

																				</ControlTemplate.Triggers>
																			</ControlTemplate>
																		</ListBox.Template>
																		<ListBox.ItemsPanel>
																			<ItemsPanelTemplate>
																				<ls:LSGrid ContainerData="{Binding Inventory}" Rows="2" ClipToBounds="False" noesis:Element.PPAAMode="Disabled" SnapsToDevicePixels="True"
																			   ExtendedRows="False" Background="{StaticResource NavigableGridSlotBrush}" ls:MoveFocus.InternalFocusable="True" AutoIndex="True"
																			   CellWidth="{StaticResource GenericSlotSize}" CellHeight="{StaticResource GenericSlotSize}" ls:ElementCacheHelper.GroupId="PartyListInventory_c"
																			   ActionUpEvent="UIUp" ActionDownEvent="UIDown" ActionRightEvent="UIRight" ActionLeftEvent="UILeft" UseWidgetNavigation="True" FocusElementVisualStyle="{StaticResource Style.FocusVisualStyle}" >
																					<ls:LSGrid.Columns>
																						<MultiBinding Converter="{StaticResource DivideMultiConverter}">
																							<Binding Path="Width" ElementName="InventoryItemsPresenter"/>
																							<Binding Source="{StaticResource GenericSlotSize}"/>
																						</MultiBinding>
																					</ls:LSGrid.Columns>

																					<b:Interaction.Triggers>
																						<b:EventTrigger EventName="WidgetClosing">
																							<b:InvokeCommandAction Command="{Binding DataContext.ClearInventoryNewFlags, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding }"/>
																							<!-- Tutorial UI Event - Inventory Closed-->
																							<b:InvokeCommandAction Command="{Binding DataContext.TutorialEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="3b433da9-3bd4-4273-8e7f-f85e03ee1601"/>
																						</b:EventTrigger>
																					</b:Interaction.Triggers>
																				</ls:LSGrid>
																			</ItemsPanelTemplate>
																		</ListBox.ItemsPanel>
																		<ListBox.ItemContainerStyle>
																			<Style TargetType="ListBoxItem" BasedOn="{StaticResource BaseInvContainerItemStyle}">
																				<Setter Property="Template" Value="{StaticResource Template.InventoryListBoxItem}" />
																			</Style>
																		</ListBox.ItemContainerStyle>
																		<b:Interaction.Triggers>
																			<b:PropertyChangedTrigger Binding="{Binding (ls:MoveFocus.IsKeyboardFocusWithin), ElementName=PlayerInventory}">
																				<b:Interaction.Behaviors>
																					<b:ConditionBehavior>
																						<b:ConditionalExpression>
																							<b:ComparisonCondition LeftOperand="{Binding (ls:MoveFocus.IsKeyboardFocusWithin), ElementName=PlayerInventory}" Operator="Equal" RightOperand="True"/>
																						</b:ConditionalExpression>
																					</b:ConditionBehavior>
																				</b:Interaction.Behaviors>
																				<b:ChangePropertyAction TargetName="ToggleMultiSelectButton" PropertyName="Tag" Value="{Binding ElementName=PlayerInventory}"/>
																			</b:PropertyChangedTrigger>
																			<b:PropertyChangedTrigger Binding="{Binding (ls:MoveFocus.IsKeyboardFocusWithin), ElementName=PlayerInventory}">
																				<b:Interaction.Behaviors>
																					<b:ConditionBehavior>
																						<b:ConditionalExpression>
																							<b:ComparisonCondition LeftOperand="{Binding (ls:MoveFocus.IsKeyboardFocusWithin), ElementName=PlayerInventory}" Operator="Equal" RightOperand="False"/>
																						</b:ConditionalExpression>
																					</b:ConditionBehavior>
																				</b:Interaction.Behaviors>
																				<b:ChangePropertyAction TargetName="ToggleMultiSelectButton" PropertyName="Tag" Value="{x:Null}"/>
																				<b:ChangePropertyAction TargetName="PlayerInventory" PropertyName="SelectedIndex" Value="-1"/>
																			</b:PropertyChangedTrigger>
																			<b:EventTrigger EventName="Unloaded">
																				<b:ChangePropertyAction TargetName="ToggleMultiSelectButton" PropertyName="Tag" Value="{x:Null}"/>
																			</b:EventTrigger>
																		</b:Interaction.Triggers>
																	</ListBox>

																	<ls:LSInputBinding x:Name="CancelMultiSelect" BoundEvent="UICancel" IsEnabled="False">
																		<b:Interaction.Triggers>
																			<b:EventTrigger EventName="LSInputBindingReleased" >
																				<b:ChangePropertyAction TargetName="PlayerInventory" PropertyName="SelectedIndex" Value="-1" />
																			</b:EventTrigger>
																		</b:Interaction.Triggers>
																	</ls:LSInputBinding>
																</Grid>
															</Expander>
															<DataTemplate.Triggers>
																<MultiDataTrigger>
																	<MultiDataTrigger.Conditions>
																		<Condition Binding="{Binding IsSelectedCharacter}" Value="True"/>
																		<Condition Value="True">
																			<Condition.Binding>
																				<MultiBinding Converter="{StaticResource EqualConverter}">
																					<Binding Path="OwnerUserID"/>
																					<Binding Path="DataContext.CurrentPlayer.UserId" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
																				</MultiBinding>
																			</Condition.Binding>
																		</Condition>
																	</MultiDataTrigger.Conditions>
																	<Setter TargetName="SingleInventoryRoot" Property="IsExpanded" Value="True"/>
																</MultiDataTrigger>

																<Trigger SourceName="PlayerInventory" Property="ls:MultiSelect.IsEnabled" Value="True">
																	<Setter TargetName="PlayerInventory" Property="KeyboardNavigation.DirectionalNavigation" Value="Contained"/>
																	<Setter TargetName="CancelMultiSelect" Property="IsEnabled" Value="True"/>
																</Trigger>
																<DataTrigger Binding="{Binding SelectedItems.Count,ElementName=PlayerInventory,Converter={StaticResource GreaterThanConverter},ConverterParameter=0}" Value="True">
																	<Setter TargetName="PlayerInventory" Property="ls:MultiSelect.IsEnabled" Value="True"/>
																</DataTrigger>
															</DataTemplate.Triggers>
														</DataTemplate>
													</StackPanel.Resources>

													<b:Interaction.Behaviors>
														<ls:CollectionSortBehavior x:Name="SelectedCharacterSortBehavior" ItemsSource="{Binding DataContext.Data.PartyCharacters, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Comparer="{Binding DataContext.SelectedCharacterSortComparer, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
													</b:Interaction.Behaviors>

													<!-- Needed not for filtering but for getting the list of suggestions, since actual FilteringContainers used for filtering will be inside the template of each character and they won't be accessible from outside -->
													<ls:FilteringContainer x:Name="InventoryFilteringContainerHolder" FilterPredicate="{Binding InventoryPredicate}" MaxDisplayedFilters="12">
														<ls:FilteringContainer.EnumFiltersList>
															<ls:EnumFilterItem EnumId="gui::EPopularFilters" Label="h977af483ga6d9g4334g9ee0g3b85b94c67db" AlwaysVisible="True" />
															<ls:EnumFilterItem EnumId="eoc::EProficiencyGroup" Label="ha4c5f0cfg93ebg47ecg8eecg6524ad70aee0" />
														</ls:FilteringContainer.EnumFiltersList>
													</ls:FilteringContainer>


													<ItemsControl x:Name="PanelsContainer"
															  Template="{StaticResource InventoryContainerTemplate}"
															  ItemTemplate="{StaticResource InventoryItemTemplate}"
															  ItemsPanel="{StaticResource InventoryItemsPanelTemplate}"
															  ItemsSource="{Binding SortedItems, ElementName=SelectedCharacterSortBehavior}"
												  AlternationCount="{Binding DataContext.Data.PartyCharacters.Count, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
														<b:Interaction.Triggers>
															<b:EventTrigger EventName="Loaded">
																	<ls:SetMoveFocusAction TargetName="CharacterPanel_c" DeferFocusAction="True" FocusElement="{Binding ElementName=PanelsContainer}"/>
															</b:EventTrigger>
														</b:Interaction.Triggers>
													</ItemsControl>

													<StackPanel x:Name="CampCompanionsSection" Visibility="Collapsed">
														<TextBlock Text="{Binding Source='h0098cd11gc624g49fdgb404g596b3245f9ac',Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Center" Margin="0,20,0,20"/>

														<ItemsControl x:Name="NonPartyPanelsContainer"
															  Template="{StaticResource InventoryContainerTemplate}"
															  ItemTemplate="{StaticResource InventoryItemTemplate}"
															  ItemsPanel="{StaticResource InventoryItemsPanelTemplate}"
															  ItemsSource="{Binding DataContext.Data.CampNonPartyCharacters, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
												  AlternationCount="{Binding DataContext.Data.CampNonPartyCharacters.Count, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
													</StackPanel>

												</StackPanel>

											</ScrollViewer>

										</Grid>
										<DataTemplate.Triggers>

											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding DataContext.Data.CampNonPartyCharacters.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True"/>
													<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsInCamp, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="True"/>
												</MultiDataTrigger.Conditions>
												<Setter TargetName="CampCompanionsSection" Property="Visibility" Value="Visible"/>
											</MultiDataTrigger>

											<DataTrigger Binding="{Binding Visibility, ElementName=InventoryFilter}" Value="Visible">
												<Setter TargetName="OpenFiltersButton" Property="IsEnabled" Value="False"/>
											</DataTrigger>

											<DataTrigger Binding="{Binding Tag, ElementName=Tabs}" Value="Filters">
												<Setter TargetName="InventoryFilter" Property="Visibility" Value="Visible"/>
												<Setter TargetName="InventoryFilter" Property="Opacity" Value="1"/>

												<Setter TargetName="InventoryContent" Property="IsEnabled" Value="False"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding Tag, ElementName=Tabs}" Value="FiltersClose">
												<Setter TargetName="InventoryFilter" Property="Visibility" Value="Visible"/>
												<Setter TargetName="InventoryFilter" Property="Opacity" Value="1"/>

												<Setter TargetName="InventoryContent" Property="IsEnabled" Value="False"/>
												<DataTrigger.EnterActions>
													<BeginStoryboard Storyboard="{StaticResource HideInventoryFilterAnimation}"/>
												</DataTrigger.EnterActions>
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
								</ContentPresenter.ContentTemplate>
							</ContentPresenter>

							<ContentPresenter x:Name="CharacteristicsContent" Content="{Binding CurrentPlayer.SelectedCharacter}" Visibility="Collapsed">
								<ContentPresenter.ContentTemplate>
									<DataTemplate DataType="{x:Type ls:Character}">
										<ScrollViewer x:Name="FeaturesRoot" VerticalAlignment="Top" HorizontalScrollBarVisibility="Disabled" Margin="0,0,60,0" VerticalScrollBarVisibility="Auto" Height="{StaticResource ScrollViewerHeight}" >

											<StackPanel x:Name="ExtrasTabRoot" Margin="0,0,0,0" ls:MoveFocus.FocusMovementMode="MainAxisTunnel" MaxWidth="1600">
												<b:Interaction.Behaviors>
													<ls:CollectionFilterBehavior x:Name="ActiveResistances" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding Stats.ActiveResistancesPredicate}"/>
												</b:Interaction.Behaviors>

												<!-- Conditions -->
												<Expander x:Name="ExpanderButtonConditions" IsExpanded="True" Template="{StaticResource ExpanderButtonTemplate}" Header="{Binding Source='h71f6c964g24c2g49e5ga3fbg65bf2fd92790', Converter={StaticResource TranslatedStringConverter}}">
													<ItemsControl ItemsSource="{Binding StatusEffects}" Margin="0,12,0,0" Template="{StaticResource MinimalItemsControlTemplate}">
														<ItemsControl.ItemsPanel>
															<ItemsPanelTemplate>
																<StackPanel Orientation="Vertical"/>
															</ItemsPanelTemplate>
														</ItemsControl.ItemsPanel>
														<ItemsControl.ItemTemplate>
															<DataTemplate DataType="{x:Type ls:VMStatus}">
																<ContentControl x:Name="FocusableContent" Style="{StaticResource  FocusableContentControlNoBG}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0"  ToolTipService.HorizontalOffset="70" Margin="{StaticResource ListPadding}">
																	<DockPanel Margin="10,10" LastChildFill="False">
																		<Grid DockPanel.Dock="Left" >
																			<Ellipse x:Name="Icon" Width="74" Height="74" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}" />
																			<ls:LSPie Value="{Binding RemainingPercentage}" SweepDirection="Clockwise" RenderTransformOrigin="0.5 0.5">
																				<Path x:Name="DurationDash" Stroke="White" StrokeThickness="2" noesis:Element.PPAAIn="0.1" noesis:Element.PPAAOut="1"  Style="{StaticResource DefaultStatusPathStyle}" Width="96" Height="96">
																					<Path.Data>
																						<EllipseGeometry RadiusX="44" RadiusY="44" Center="48,48"/>
																					</Path.Data>
																					<b:Interaction.Behaviors>
																						<ls:PathDashBehavior SegmentCount="{Binding LifeTime, Converter={StaticResource TimeToTurnConverter}}" FixedGapLength="6" StartAngle="-90"/>
																					</b:Interaction.Behaviors>
																				</Path>
																			</ls:LSPie>
																		</Grid>

																		<StackPanel Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="{Binding Duration, Converter={StaticResource CountToVisibilityConverter}}" Margin="0,10,28,0">
																			<Image Source="{StaticResource IconHourglass}" Stretch="None" VerticalAlignment="Center" Margin="-8,0,-8,0"/>
																			<TextBlock Text="{Binding Duration}" Foreground="{StaticResource LS_tint100}" FontWeight="Bold" FontSize="{StaticResource ScaledLargeFontSize}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" VerticalAlignment="Center"/>
																		</StackPanel>

																		<TextBlock x:Name="Name" DockPanel.Dock="Top" Foreground="{StaticResource LS_accent75TxtColor}" HorizontalAlignment="Left" TextAlignment="Left" Margin="28,10,0,0" FontSize="{StaticResource ScaledDefaultFontSize}" Text="{Binding Name}" />
																	</DockPanel>
																</ContentControl>
																<DataTemplate.Triggers>
																	<DataTrigger Binding="{Binding (ls:MoveFocus.IsFocused), ElementName=FocusableContent}" Value="True">
																		<Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
																	</DataTrigger>
																</DataTemplate.Triggers>
															</DataTemplate>
														</ItemsControl.ItemTemplate>
													</ItemsControl>
												</Expander>

												<!-- Resistances -->

												<Expander x:Name="ExpanderButtonResistances" IsExpanded="True" Template="{StaticResource ExpanderButtonTemplate}" Header="{Binding Source='h98a4ccfbg20f4g4294g9bf7g624c95711539', Converter={StaticResource TranslatedStringConverter}}" Margin="0,24,0,0">
													<Expander.ToolTip>
														<ls:LSTooltip ContentTemplate="{StaticResource ListOfResistancesTooltipTemplate}" Content="{Binding DataContext, ElementName=ExtrasTabRoot}"/>
													</Expander.ToolTip>
													<ItemsControl x:Name="ResistancesGrid" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems, ElementName=ExtrasTabRoot}" Margin="0,0,0,0" Template="{StaticResource MinimalItemsControlTemplate}">
														<ItemsControl.ItemsPanel>
															<ItemsPanelTemplate>
																<StackPanel Orientation="Vertical">
																	<b:Interaction.Behaviors>
																		<ls:CollectionFilterBehavior x:Name="ActiveResistances" ItemsSource="{Binding Stats.Resistances}" Predicate="{Binding Stats.ActiveResistancesPredicate}"/>
																	</b:Interaction.Behaviors>
																</StackPanel>
															</ItemsPanelTemplate>
														</ItemsControl.ItemsPanel>
														<ItemsControl.ItemTemplate>
															<DataTemplate>
																<ContentControl x:Name="FocusableContent" Style="{StaticResource  FocusableContentControlNoBG}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70" Margin="{StaticResource ListPadding}">

																	<ContentControl Template="{StaticResource ResistanceLineTemplate}" Margin="10,4">
																		<TextBlock x:Name="Name" Foreground="{StaticResource LS_accent75TxtColor}" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Left" Margin="28,0,0,0" FontSize="{StaticResource ScaledDefaultFontSize}" Text="{Binding DamageTypeValue, Converter={StaticResource EnumTranslatedStringConverter}, ConverterParameter='hc3cd9b4eg4ea4g4438gbfbbg493c0abb6dd7'}" />
																	</ContentControl>
																</ContentControl>
																<DataTemplate.Triggers>
																	<DataTrigger Binding="{Binding (ls:MoveFocus.IsFocused), ElementName=FocusableContent}" Value="True">
																		<Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
																	</DataTrigger>
																</DataTemplate.Triggers>
															</DataTemplate>
														</ItemsControl.ItemTemplate>
													</ItemsControl>
												</Expander>

												<!-- Features -->
												<Expander x:Name="ExpanderButtonFeatures" IsExpanded="True" Template="{StaticResource ExpanderButtonTemplate}" Header="{Binding Source='h9f9bfc7dgf4cdg4198g83e3gcb974dd2e949', Converter={StaticResource TranslatedStringConverter}}" Margin="0,24,0,0">
													<ItemsControl ItemsSource="{Binding Stats.Passives}" Margin="0,0,0,0" Template="{StaticResource MinimalItemsControlTemplate}">
														<ItemsControl.ItemsPanel>
															<ItemsPanelTemplate>
																<StackPanel Orientation="Vertical"/>
															</ItemsPanelTemplate>
														</ItemsControl.ItemsPanel>
														<ItemsControl.ItemTemplate>
															<DataTemplate>
																<ContentControl x:Name="FocusableContent" Style="{StaticResource  FocusableContentControlNoBG}" ToolTip="{StaticResource ManagedTooltip}"
																		ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0"  ToolTipService.HorizontalOffset="70" Margin="{StaticResource ListPadding}">
																	<DockPanel Margin="10,10" LastChildFill="False">
																		<Rectangle x:Name="Icon" DockPanel.Dock="Left" VerticalAlignment="Center" Width="{StaticResource ListIconSize}" Height="{StaticResource ListIconSize}" Fill="{Binding Icon}"/>
																		<TextBlock x:Name="Name" DockPanel.Dock="Top" Foreground="{StaticResource LS_accent75TxtColor}" HorizontalAlignment="Left" TextAlignment="Left" Margin="28,10,0,0" FontSize="{StaticResource ScaledDefaultFontSize}" Text="{Binding Name}" />
																	</DockPanel>
																</ContentControl>
																<DataTemplate.Triggers>
																	<DataTrigger Binding="{Binding (ls:MoveFocus.IsFocused), ElementName=FocusableContent}" Value="True">
																		<Setter TargetName="Name" Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
																	</DataTrigger>
																</DataTemplate.Triggers>
															</DataTemplate>
														</ItemsControl.ItemTemplate>
													</ItemsControl>
												</Expander>
											</StackPanel>
										</ScrollViewer>
									</DataTemplate>
								</ContentPresenter.ContentTemplate>
							</ContentPresenter>

							<ContentPresenter x:Name="SkillsContent" Content="{Binding CurrentPlayer.SelectedCharacter}" Visibility="Collapsed">
								<ContentPresenter.ContentTemplate>
									<DataTemplate DataType="{x:Type ls:Character}">
										<StackPanel Margin="0,0,60,0" ls:MoveFocus.FocusMovementMode="MainAxisTunnel" MaxWidth="1600">

											<ContentControl ls:MoveFocus.FocusMovementMode="MainAxisTunnel" Style="{StaticResource FocusableContentControlStyle}" ToolTip="{StaticResource PlacementParentDCTooltipOffset}" DataContext="{Binding Stats.ProficiencyBonus}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70" Margin="{StaticResource ListPadding}">
												<TextBlock TextAlignment="Center">
										<Run Text="{Binding Source='h65b46ad4g2eacg47d5gb4b4g124ca3b8aaef',Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_specialTxtColor}"/>
										<Run Text="{Binding Value, StringFormat=': +{0}'}"/>
												</TextBlock>
											</ContentControl>

											<Grid Margin="0,24,0,0" Height="1200" >
												<ScrollViewer x:Name="SkillsRoot"  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
													<StackPanel>
														<Expander IsExpanded="False" Template="{StaticResource ExpanderButtonTemplate}" Header="{Binding Source='h12abe296ga0fbg44feg9451gb10a0bf92acb', Converter={StaticResource TranslatedStringConverter}}">
															<ItemsControl ItemsSource="{Binding Stats.Abilities}" ls:MoveFocus.FocusMovementMode="MainAxisTunnel" MaxWidth="1600" >
																<ItemsControl.ItemTemplate>
																	<DataTemplate>
																		<ItemsControl ItemsSource="{Binding Skills}" Style="{StaticResource SkillsGroup}"/>
																	</DataTemplate>
																</ItemsControl.ItemTemplate>
															</ItemsControl>
														</Expander>

														<ContentPresenter x:Name="MusicalProficiency" ContentTemplate="{StaticResource ProficiencyEntry}" Content="{Binding .}" Margin="{StaticResource extraSectionPadding}" Visibility="Collapsed" Tag="MusicalInstrument"/>

														<!-- Simple Weapon Proficiencies -->
														<ContentPresenter ContentTemplate="{StaticResource ProficiencyGroup}" Content="{Binding Stats.SimpleWeaponProficiencies}" Tag="SimpleWeapons" Margin="{StaticResource extraSectionPadding}"/>

														<!-- Martial Weapon Proficiencies -->
														<ContentPresenter ContentTemplate="{StaticResource ProficiencyGroup}" Content="{Binding Stats.MartialWeaponProficiencies}" Tag="MartialWeapons" Margin="{StaticResource extraSectionPadding}"/>

														<!-- Armour Proficiencies -->
														<ContentPresenter ContentTemplate="{StaticResource ProficiencyGroup}" Content="{Binding Stats.ProtectionProficiencies}" Tag="Armors"  Margin="{StaticResource extraSectionPadding}"/>
													</StackPanel>
												</ScrollViewer>
											</Grid>
										</StackPanel>
										<DataTemplate.Triggers>
											<DataTrigger Binding="{Binding Stats.MusicalInstrumentProficiency}" Value="True" >
												<Setter TargetName="MusicalProficiency" Property="Visibility" Value="Visible" />
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
								</ContentPresenter.ContentTemplate>
							</ContentPresenter>

							<ContentPresenter x:Name="StatsContent" Content="{Binding CurrentPlayer.SelectedCharacter}" Visibility="Collapsed">
								<ContentPresenter.ContentTemplate>
									<DataTemplate DataType="{x:Type ls:Character}">
										<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
											<StackPanel Margin="0,0,60,0" x:Name="ExtrasTabRoot" ls:MoveFocus.FocusMovementMode="MainAxisTunnel" MaxWidth="1600">

												<!-- XP -->
												<ContentControl Style="{StaticResource FocusableContentControlNoBG}" Margin="{StaticResource ListPadding}">
													<ContentControl.ToolTip>
														<ls:LSTooltip ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70">
															<ls:LSTooltip.Resources>
																<System:Double x:Key="MaxTooltipContentWidth">720</System:Double>
															</ls:LSTooltip.Resources>
															<TextBlock TextWrapping="Wrap" MaxWidth="700" HorizontalAlignment="Center" Foreground="{StaticResource TooltipColor.Primary}" >
																<b:Interaction.Behaviors>
																	<ls:CtxTransStringRunGeneratorBehavior Source="{Binding Path=Content.Stats.Level.Description, ElementName=StatsContent}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
																</b:Interaction.Behaviors>
															</TextBlock>
														</ls:LSTooltip>
													</ContentControl.ToolTip>
													<DockPanel Margin="{StaticResource listMarginDefault}">

														<TextBlock Text="{Binding Source='hd7ebd9a9g2c08g4885gb271gb56db4de0696', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource SkillTextStyle}"/>
														<TextBlock Style="{StaticResource SkillTitleTextStyle}">
												<Run Text="{Binding Stats.Experience.Value}"/> / <Run Text="{Binding Stats.Level.XPForNextLevel}"/>
														</TextBlock>
													</DockPanel>
												</ContentControl>

												<!-- Size -->

												<ContentControl Style="{StaticResource FocusableContentControlNoBG}" Margin="{StaticResource ListPadding}">
													<ContentControl.ToolTip>
														<ls:LSTooltip Content="{Binding Source='h219ed287gbc86g4f87g93a6gb930860114e6',Converter={StaticResource TranslatedStringConverter}}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70"/>
													</ContentControl.ToolTip>
													<DockPanel Margin="{StaticResource listMarginDefault}">
														<TextBlock Text="{Binding Source='hfc7ce51bga5d6g4711g8e19g3fcebf236de0', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource SkillTextStyle}"/>
														<Control Template="{StaticResource ObjectSizeTextTemplate}" Style="{StaticResource SkillTitleTextStyleControl}" />
													</DockPanel>
												</ContentControl>

												<!-- Weight -->

												<ContentControl x:Name="weightStat" DataContext="{Binding Stats.Weight}" Style="{StaticResource FocusableContentControlNoBG}" Margin="{StaticResource ListPadding}">
													<ContentControl.ToolTip>
														<ls:LSTooltip Content="{Binding ElementName=weightStat,Path=DataContext}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70"/>
													</ContentControl.ToolTip>
													<DockPanel  Margin="{StaticResource listMarginDefault}">
														<Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource StatsNameStyle}"/>
														<TextBlock Text="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}" Style="{StaticResource SkillTitleTextStyle}"/>
													</DockPanel>
												</ContentControl>

												<!-- Weight Limit -->

												<ContentControl Style="{StaticResource FocusableContentControlNoBG}" Margin="{StaticResource ListPadding}">
													<ContentControl.ToolTip>
														<ls:LSTooltip Content="{Binding Source='h97226633g565ag44c0gbd64g89e70c886cba',Converter={StaticResource TranslatedStringConverter}}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70"/>
													</ContentControl.ToolTip>
													<DockPanel  Margin="{StaticResource listMarginDefault}">
														<TextBlock Text="{Binding Source='h3faf5e3cg719dg4b1cgb21egf2afeafb0eea', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource SkillTextStyle}"/>
														<TextBlock Text="{Binding EncumbranceStats.WeightMaximum, Converter={StaticResource UnitConverter}, ConverterParameter='Weight Short'}" Style="{StaticResource SkillTitleTextStyle}"/>
													</DockPanel>
												</ContentControl>

												<!-- Saving Throw Proficiencies -->

												<ContentControl Style="{StaticResource FocusableContentControlNoBG}" Margin="{StaticResource ListPadding}">
													<ContentControl.ToolTip>
														<ls:LSTooltip IsHitTestVisible="False" Content="hb4ebc93egdb2dg4489g9386ga0b39c71b536" ls:AttachedProperties.InheritedTag="h20f2c1b6g2815g402ag8549gd6042c56c6db" Style="{StaticResource InlineTagTooltip}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70"/>
													</ContentControl.ToolTip>

													<DockPanel Margin="{StaticResource listMarginDefault}" x:Name="SavingThrowProficiencyHolder">
														<b:Interaction.Behaviors>
															<ls:CollectionFilterBehavior x:Name="SavingThrowProficiencyFilter" ItemsSource="{Binding Stats.Abilities}" Predicate="{Binding DataContext.Data.SavingThrowProficiencyPredicate, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
														</b:Interaction.Behaviors>
														<TextBlock Text="{Binding Source='h20f2c1b6g2815g402ag8549gd6042c56c6db', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource SkillTextStyle}"/>
														<ItemsControl ItemsSource="{Binding (b:Interaction.Behaviors)[0].FilteredItems, ElementName=SavingThrowProficiencyHolder}" AlternationCount="{Binding ItemsSource.Count,RelativeSource={RelativeSource Mode=Self}}"
														  Template="{StaticResource MinimalItemsControlTemplate}">
															<ItemsControl.ItemsPanel>
																<ItemsPanelTemplate>
																	<WrapPanel HorizontalAlignment="Right" Margin="0,12,0,0"/>
																</ItemsPanelTemplate>
															</ItemsControl.ItemsPanel>
															<ItemsControl.ItemTemplate>
																<DataTemplate>
																	<DataTemplate.Resources>
																		<Style TargetType="TextBlock" BasedOn="{StaticResource SkillTitleTextStyle}"></Style>
																	</DataTemplate.Resources>
																	<StackPanel Orientation="Horizontal" >
																		<Control x:Name="attrName" Template="{StaticResource AbilityShortDisplayName}"/>
																		<TextBlock x:Name="Separator" Text="{Binding Source='h2519408dg5fd7g4cbcg840cg14370239edf8', Converter={StaticResource TranslatedStringConverter}}" Margin="0"/>
																	</StackPanel>
																	<DataTemplate.Triggers>
																		<DataTrigger Value="0">
																			<DataTrigger.Binding>
																				<MultiBinding Converter="{StaticResource SubtractionMultipleConverter}">
																					<Binding Path="AlternationCount" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
																					<Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}"/>
																					<Binding Source="1"/>
																				</MultiBinding>
																			</DataTrigger.Binding>
																			<Setter TargetName="Separator" Property="Visibility" Value="Collapsed"/>
																		</DataTrigger>
																	</DataTemplate.Triggers>
																</DataTemplate>
															</ItemsControl.ItemTemplate>
														</ItemsControl>
													</DockPanel>
												</ContentControl>

												<!-- Darkvision Range -->

												<ContentControl x:Name="darkVisionStat" Style="{StaticResource FocusableContentControlNoBG}" Margin="{StaticResource ListPadding}" DataContext="{Binding Stats.DarkVisionRange}">
													<ContentControl.ToolTip>
														<ls:LSTooltip Content="{Binding ElementName=darkVisionStat,Path=DataContext}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="0" ToolTipService.HorizontalOffset="70"/>
													</ContentControl.ToolTip>

													<DockPanel Margin="{StaticResource listMarginDefault}">
														<Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource StatsNameStyle}"/>
														<TextBlock Text="{Binding Value, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" Style="{StaticResource SkillTitleTextStyle}"/>
													</DockPanel>
												</ContentControl>

												<!--TAGS-->
												<ContentControl Visibility="{Binding Tags.Count, Converter={StaticResource CountToVisibilityConverter}}" Style="{StaticResource FocusableContentControlNoBG}" Margin="{StaticResource ListPadding}">
													<b:Interaction.Behaviors>
														<ls:ConcatenateListBehavior x:Name="TagList" ItemsSource="{Binding Tags}" Separator="h2519408dg5fd7g4cbcg840cg14370239edf8"/>
													</b:Interaction.Behaviors>
													<DockPanel Margin="{StaticResource listMarginDefault}">
														<TextBlock Text="{Binding Source='hd0bb8a34g4e48g4816g8ca0g234f3f99c934', Converter={StaticResource TranslatedStringConverter}}" VerticalAlignment="Top" Style="{StaticResource SkillTextStyle}" />
														<TextBlock Text="{Binding Result ,ElementName=TagList}" TextWrapping="Wrap" HorizontalAlignment="Right" TextAlignment="Right" Style="{StaticResource SkillTitleTextStyle}" Margin="100,12,0,12"/>
													</DockPanel>
												</ContentControl>

											</StackPanel>
										</ScrollViewer>

									</DataTemplate>
								</ContentPresenter.ContentTemplate>
							</ContentPresenter>

							<ContentPresenter x:Name="ReactionsContent" Content="{Binding CurrentPlayer.SelectedCharacter}" Visibility="Collapsed">
								<ContentPresenter.ContentTemplate>
									<DataTemplate DataType="{x:Type ls:Character}">
										<ItemsControl x:Name="Reactions" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
										ItemsSource="{Binding Interrupts}" AlternationCount="{Binding ItemsSource.Count, ElementName=Reactions}" ls:MoveFocus.FocusMovementMode="MainAxisTunnel" ItemTemplate="{StaticResource InterruptItemTemplate}" >
											<ItemsControl.Template>
												<ControlTemplate>
													<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
														<ItemsPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Margin="0,0,60,0" MaxWidth="1600"/>
													</ScrollViewer>
												</ControlTemplate>
											</ItemsControl.Template>
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel/>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</DataTemplate>
								</ContentPresenter.ContentTemplate>
							</ContentPresenter>
						</Grid>
					</DockPanel>

				</Grid>

				<!-- EQUIPMENT -->
				<Grid x:Name="Equipment" Grid.Column="2" Margin="0,220,0,0" HorizontalAlignment="Left" DataContext="{Binding CurrentPlayer.SelectedCharacter}" Visibility="Collapsed" >
					<Grid x:Name="EquipmentSlots" Margin="0,210,0,0" IsEnabled="{Binding IsChecked, ElementName=ToggleEquipmentSelectorButton}" ls:MoveFocus.IsMoveFocusScope="True" Visibility="Collapsed"  HorizontalAlignment="Left">
						<!-- Visibility change text prompts -->
						<TextBlock x:Name="HelmetVisibilityText" Text="{Binding Source='h90154bd4g08b9g46efg8e70gbce5d5a99e1a',Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="{StaticResource ScaledSmallFontSize}" Foreground="{StaticResource LS_accent25TxtColor}" Opacity="0"/>
						<TextBlock x:Name="InstrumentVisibilityText" Text="{Binding Source='h90154bd4g08b9g46efg8e70gbce5d5a99e1a',Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="{StaticResource ScaledSmallFontSize}" Foreground="{StaticResource LS_accent25TxtColor}" Opacity="0"/>
						<TextBlock x:Name="VanityVisibilityText" Text="{Binding Source='h90154bd4g08b9g46efg8e70gbce5d5a99e1a',Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="{StaticResource ScaledSmallFontSize}" Foreground="{StaticResource LS_accent25TxtColor}" Opacity="0"/>
						<TextBlock x:Name="DualWieldVisibilityText" Text="{Binding Source='h90154bd4g08b9g46efg8e70gbce5d5a99e1a',Converter={StaticResource TranslatedStringConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="{StaticResource ScaledSmallFontSize}" Foreground="{StaticResource LS_accent25TxtColor}" Opacity="0"/>
						<Image Source="{StaticResource equipmentDecor}" Margin="234,80,0,0" HorizontalAlignment="Left"  Stretch="None" VerticalAlignment="Top" />
						<Image Source="{StaticResource equipmentDecor}"  Margin="2,80,0,0" HorizontalAlignment="Left"  Stretch="None" VerticalAlignment="Top">
							<Image.RenderTransform>
								<ScaleTransform ScaleX="-1" />
							</Image.RenderTransform>
						</Image>
						<Image Source="{StaticResource equipmentDecorBottom}" Margin="-154,0,0,80" HorizontalAlignment="Left" Stretch="None" VerticalAlignment="Bottom" />
						<!-- Equipment slots -->
						<StackPanel x:Name="EquipmentSlotsStack" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,65,0,0" ls:MoveFocus.FocusMovementMode="Closest">
							<Border BorderThickness="2" BorderBrush="{StaticResource LS_equipmentStroke}" Background="{StaticResource LS_equipmentStroke}" HorizontalAlignment="Center">
								<Grid x:Name="EquipmentSlotsMainSection" Visibility="Collapsed">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<Image Grid.Column="0" Grid.Row="0" Source="{StaticResource SlotHelmet}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="HelmetSlot" Grid.Column="0" Grid.Row="0" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Helmet}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" ls:MoveFocus.FocusMovementBlockUpDirection="True" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="0" Grid.Row="1" Source="{StaticResource SlotArmour}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="BreastSlot" Grid.Column="0" Grid.Row="1" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Breast}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="0" Grid.Row="2" Source="{StaticResource SlotUnderwear}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="UnderwearSlot" Grid.Column="0" Grid.Row="2" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Underwear}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="0" Grid.Row="3" Source="{StaticResource SlotRing1}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="RingOneSlot" Grid.Column="0" Grid.Row="3" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Ring}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="0" Grid.Row="4" Source="{StaticResource SlotNecklace}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="AmuletSlot" Grid.Column="0" Grid.Row="4" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Amulet}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="1" Grid.Row="0" Source="{StaticResource SlotCloak}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="CloakSlot" Grid.Column="1" Grid.Row="0" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Cloak}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" ls:MoveFocus.FocusMovementBlockUpDirection="True" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="1" Grid.Row="1" Source="{StaticResource SlotBoots}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="BootsSlot" Grid.Column="1" Grid.Row="1" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Boots}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="1" Grid.Row="2" Source="{StaticResource SlotGloves}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="GlovesSlot" Grid.Column="1" Grid.Row="2" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Gloves}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="1" Grid.Row="3" Source="{StaticResource SlotRing2}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="RingTwoSlot" Grid.Column="1" Grid.Row="3" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.Ring2}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" Margin="{StaticResource equipmentSlotMargin}"/>

								<Image Grid.Column="1" Grid.Row="4" Source="{StaticResource SlotInstrument}" Style="{StaticResource EquipmentSlotImage}"/>
								<ContentPresenter x:Name="InstrumentSlot" Grid.Column="1" Grid.Row="4" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.MusicalInstrument}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" Margin="{StaticResource equipmentSlotMargin}"/>

							</Grid>
							</Border>

							<!-- Vanity Slots-->
							<TextBlock Text="{Binding Source='hd0ce1dceg17fcg427cga007gad73bae7e0ab',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource equipmentSlotLabelStyle}"/>
							<Border BorderThickness="2" BorderBrush="{StaticResource LS_equipmentStroke}" Background="{StaticResource LS_equipmentStroke}" HorizontalAlignment="Center">
								<Grid x:Name="VanityArmorSlots">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image Grid.Column="0" Source="{StaticResource SlotVanityClothes}" Style="{StaticResource EquipmentSlotImage}"/>
									<ContentPresenter x:Name="VanityBodySlot" Grid.Column="0" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.VanityBody}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" Margin="{StaticResource equipmentSlotMargin}"/>
									<Image Grid.Column="1" Source="{StaticResource SlotVanityBoots}" Style="{StaticResource EquipmentSlotImage}"/>
									<ContentPresenter x:Name="VanityBootsSlot" Grid.Column="1" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.VanityBoots}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" Margin="{StaticResource equipmentSlotMargin}"/>
								</Grid>
							</Border>

							<!-- Melee Attack Slots-->
							<TextBlock Text="{Binding Source='hde2dafecgf6f5g489ag9baeg23d0610570f5',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource equipmentSlotLabelStyle}"/>
							<Border BorderThickness="2" BorderBrush="{StaticResource LS_equipmentStroke}" Background="{StaticResource LS_equipmentStroke}"  HorizontalAlignment="Center">
								<Grid x:Name="MeleeSection">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image Grid.Column="0" Source="{StaticResource SlotMeleeMainHand}" Style="{StaticResource EquipmentSlotImage}"/>
									<ContentPresenter x:Name="MeleeSlot" Grid.Column="0" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.MeleeMainHand}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" Margin="{StaticResource equipmentSlotMargin}"/>
									<Image Grid.Column="1" Source="{StaticResource SlotMeleeOffHand}" Style="{StaticResource EquipmentSlotImage}"/>
									<ContentPresenter x:Name="MeleeOffhandSlot" Grid.Column="1" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.MeleeOffHand}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" ls:MoveFocus.FocusMovementMode="Closest" Margin="{StaticResource equipmentSlotMargin}"/>
									<Image Grid.ColumnSpan="2" x:Name="MeleeDualWieldLink" Source="{StaticResource MeleeDualWieldLinkIco}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
								</Grid>
							</Border>

							<!-- Ranged Slots -->
							<TextBlock Text="{Binding Source='h52df2583g5fc1g4182g9511g36238e4e0c19',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource equipmentSlotLabelStyle}"/>
							<Border BorderThickness="2" BorderBrush="{StaticResource LS_equipmentStroke}" Background="{StaticResource LS_equipmentStroke}" HorizontalAlignment="Center">
								<Grid x:Name="RangedSection">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Image Grid.Column="0" Source="{StaticResource SlotRangedMainHand}" Style="{StaticResource EquipmentSlotImage}"/>
									<ContentPresenter x:Name="RangedSlot" Grid.Column="0" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.RangedMainHand}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="150" ls:MoveFocus.FocusMovementMode="Closest" Margin="{StaticResource equipmentSlotMargin}"/>
									<Image Grid.Column="1" Source="{StaticResource SlotRangedOffHand}" Style="{StaticResource EquipmentSlotImage}"/>
									<ContentPresenter x:Name="RangedOffhandSlot" Grid.Column="1" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.RangedOffHand}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="38" ls:MoveFocus.FocusMovementMode="Closest" Margin="{StaticResource equipmentSlotMargin}"/>
									<Image Grid.ColumnSpan="2" x:Name="RangedDualWieldLink" Source="{StaticResource MeleeDualWieldLinkIco}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
								</Grid>
							</Border>

							<!-- Lightsource Slot -->
							<TextBlock Text="{Binding Source='h9e813583g1a66g47aeg9d3cg4bb5ee402f04',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource equipmentSlotLabelStyle}"/>

							<Border BorderThickness="2" BorderBrush="{StaticResource LS_equipmentStroke}" HorizontalAlignment="Center" Background="{StaticResource LS_equipmentStroke}">
								<Grid x:Name="LightSourceSection" HorizontalAlignment="Center">
									<Image Source="{StaticResource SlotLightSource}" Style="{StaticResource EquipmentSlotImage}"/>
									<ContentPresenter x:Name="LightSourceSlot" ContentTemplate="{StaticResource EquipmentSlotDataTemplate}" Content="{Binding Equipment.LightSource}" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Right" ToolTipService.HorizontalOffset="90" ls:MoveFocus.FocusMovementMode="MainAxisTunnel" Margin="{StaticResource equipmentSlotMargin}"/>
								</Grid>
							</Border>
						</StackPanel>
					</Grid>

					<!-- Equipment selector -->
					<StackPanel x:Name="EquipmentSelector" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-90,140,0,0" IsEnabled="{Binding Equipment.ShowAvailableEquipment}" Opacity="0" Visibility="Collapsed">
						<b:Interaction.Behaviors>
							<!-- Flow: FilteringContainer > CollectionSortBehavior -->
							<ls:CollectionSortBehavior x:Name="PlayerInventoryFilteredSorted" ItemsSource="{Binding GeneratedItemsList, ElementName=EquipmentFilteringContainerHolder}" Comparer="{Binding EquipmentSortComparer}"/>

							<ls:InventoriesMergerBehavior x:Name="EquipmentMerger" Inventories="{Binding Inventories}"/>
							<ls:InventoriesMergerBehavior x:Name="PartyEquipmentMerger" Inventories="{Binding DataContext.CurrentPlayer.PartyInventory, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
						</b:Interaction.Behaviors>

						<ls:FilteringContainer x:Name="EquipmentFilteringContainerHolder"
											   FilterPredicate="{Binding DataContext.Data.EquipmentInventoryPredicate, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
											   CurrentFilter="{Binding Inventory.EquipmentFlags}"
											   ItemsList="{Binding InventoriesSlots, ElementName=EquipmentMerger}"
											   ReferenceCharacter="{Binding DataContext.CurrentPlayer.SelectedCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>

						<TextBlock Style="{StaticResource SelectedEquipmentSlotTextBlockStyle}" DataContext="{Binding Equipment}" VerticalAlignment="Top" Width="282" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Foreground="{StaticResource LS_specialTxtColor}"/>
						<ls:LSNineSliceImage  Style="{StaticResource Selector9Slice}" VerticalAlignment="Top" HorizontalAlignment="Center">
							<ScrollViewer x:Name="EquipmentSelectorScrollViewer" HorizontalAlignment="Center" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" CanContentScroll="True" Height="1260"  ls:ScrollViewerHelper.VerticalScrollOffsetMargin="{StaticResource EquipmentSlotSize}" >
								<ItemsControl x:Name="EquipmentSelectionView" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.ScrollUnit="Pixel" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[0].SortedItems, ElementName=EquipmentSelector}" Margin="12" Template="{StaticResource MinimalItemsControlTemplate}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<ls:LSGrid ContainerData="{Binding Equipment.EquipmentView}" Rows="11" Columns="2"
												   noesis:Element.PPAAMode="Disabled" SnapsToDevicePixels="True" ExtendedRows="False"
												   CellWidth="{StaticResource EquipmentSlotSize}" CellHeight="{StaticResource EquipmentSlotSize}"
												   ActionUpEvent="UIUp" ActionDownEvent="UIDown" ActionRightEvent="UIRight" ActionLeftEvent="UILeft"
												   UseWidgetNavigation="True" AlwaysSelectFirst="True" AutoIndex="True"
												   FocusElementVisualStyle="{StaticResource Style.FocusVisualStyle}"
												   ls:MoveFocus.InternalFocusable="True" Background="{StaticResource NavigableGridSlotBrush}"/>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>

									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<ls:LSEntityObject x:Name="SlotRoot" DataContext="{Binding Object}" Background="{x:Null}" Focusable="True" ls:MoveFocus.Focusable="True" ToolTipService.IsEnabled="{Binding ., Converter={StaticResource NullToBoolFalseConverter}}" Tag="EquipmentInventory" Width="{StaticResource EquipmentSlotSize}" Height="{StaticResource EquipmentSlotSize}" ToolTipService.Placement="Left" ToolTipService.VerticalOffset="60" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType={x:Type ls:LSNineSliceImage}}}" FocusVisualStyle="{StaticResource Style.FocusVisualStyle}" EntityRef="{Binding EntityHandle}" Context="Inventory">
												<b:Interaction.Triggers>
													<b:PropertyChangedTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=SlotRoot}">
														<b:Interaction.Behaviors>
															<b:ConditionBehavior>
																<b:ConditionalExpression>
																	<b:ComparisonCondition LeftOperand="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=SlotRoot}" Operator="Equal" RightOperand="True"/>
																</b:ConditionalExpression>
															</b:ConditionBehavior>
														</b:Interaction.Behaviors>
														<b:InvokeCommandAction Command="{Binding DataContext.ClearItemNewFlag, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding .}"/>
													</b:PropertyChangedTrigger>
												</b:Interaction.Triggers>

												<ls:LSEntityObject.ToolTip>
													<ls:LSTooltip x:Name="SlotTooltip" Content="{Binding Path=DataContext, ElementName=SlotRoot}"  />
												</ls:LSEntityObject.ToolTip>

												<Image x:Name="RarityBackground" Style="{StaticResource RarityFrameBackgroundImageStyle}" Width="{StaticResource EquipmentIconSize}" Height="{StaticResource EquipmentIconSize}"/>
												<Rectangle x:Name="ItemIcon" Fill="{Binding Icon}" Width="{StaticResource EquipmentIconSize}" Height="{StaticResource EquipmentIconSize}"/>

												<Image x:Name="RarityForeground" Style="{StaticResource RarityFrameForegroundImageStyle}" Width="{StaticResource EquipmentIconSize}" Height="{StaticResource EquipmentIconSize}"/>

												<Control x:Name="EquipmentIcon" Template="{StaticResource EquippedItemIconIndicator}" Height="42" Width="54"  HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="-8,0,0,4" />
												<ContentPresenter x:Name="TorchIcon" ContentTemplate="{StaticResource EquippedTorchIcon}" Content="{Binding .}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,2,0"/>
												<TextBlock x:Name="NumberOfItems" HorizontalAlignment="Right" Margin="0,0,16,0" TextWrapping="Wrap" VerticalAlignment="Bottom" FontSize="{StaticResource LargeFontSize}"
													   Foreground="{StaticResource LS_tint100}" FontWeight="Bold" Text="{Binding Count, Converter={StaticResource AbbreviateNumberConverter}}"
													   Visibility="{Binding Count, Converter={StaticResource CountToVisibilityConverter}, ConverterParameter=1}"/>
											</ls:LSEntityObject>
											<DataTemplate.Triggers>
												<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Equipment.ShowAvailableEquipment, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="False">
													<Setter TargetName="SlotRoot" Property="ToolTipService.IsEnabled" Value="False"/>
													<Setter TargetName="SlotRoot" Property="ToolTipService.Placement" Value="Left"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding Object.Equipped}" Value="NotEquipped">
													<Setter TargetName="SlotRoot" Property="ToolTipService.Placement" Value="Left"/>
												</DataTrigger>

												<DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Common">
													<Setter TargetName="SlotRoot" Property="ToolTipService.Placement" Value="Right"/>
												</DataTrigger>

												<DataTrigger Binding="{Binding Object.Type}" Value="Character">
													<Setter TargetName="EquipmentIcon" Property="Visibility" Value="Collapsed"/>
												</DataTrigger>

											</DataTemplate.Triggers>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ScrollViewer>
						</ls:LSNineSliceImage>

						<ContentControl Template="{StaticResource FilterContainerTemplate}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,-114,0,0" DataContext="{Binding Equipment}">
							<ls:LSButton Template="{StaticResource ControllerButton.ImageSwitcher}" DataContext="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIMessageBoxY'}" BoundEvent="UIMessageBoxY" IsEnabled="{Binding IsEnabled, ElementName=EquipmentSelectionView}" Width="{StaticResource ScaledControllerHintSize}" Height="{StaticResource ScaledControllerHintSize}" VerticalAlignment="Center">
								<b:Interaction.Triggers>
									<b:EventTrigger EventName="LSButtonPressed">
										<b:ChangePropertyAction TargetName="EquipmentFilter" PropertyName="Visibility" Value="Visible"/>
										<b:ChangePropertyAction TargetName="EquipmentSelectionView" PropertyName="IsEnabled" Value="False"/>
										<b:ControlStoryboardAction x:Name="ShowEquipmentFilterSA">
											<b:ControlStoryboardAction.Storyboard>
												<Storyboard Children="{StaticResource ShowEquipmentFilterAnimation}"/>
											</b:ControlStoryboardAction.Storyboard>
										</b:ControlStoryboardAction>
									</b:EventTrigger>
								</b:Interaction.Triggers>
							</ls:LSButton>
						</ContentControl>
					</StackPanel>

					<!-- Equipment filter -->
					<ContentPresenter x:Name="EquipmentFilter" ContentTemplate="{StaticResource FilterSelectorTemplate}" Content="{Binding Equipment}" Opacity="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="230,0,0,344" MaxWidth="750" Visibility="Collapsed"/>

					<b:Interaction.Triggers>
						<b:EventTrigger EventName="Loaded">
							<!-- Tutorial UI Event - Equipment Opened-->
							<b:InvokeCommandAction Command="{Binding DataContext.TutorialEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="56affdac-faef-448a-94fb-55182779b482"/>
						</b:EventTrigger>

						<!-- Close Equipment Filter if SelectedCharacter or ShowCampCharacter changes -->
						<b:PropertyChangedTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
							<b:ChangePropertyAction TargetName="ToggleEquipmentSelectorButton" PropertyName="IsChecked" Value="True"/>
						</b:PropertyChangedTrigger>

						<b:PropertyChangedTrigger Binding="{Binding Path=DataContext.CurrentPlayer.ShowCampCharacter, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
							<b:ChangePropertyAction TargetName="ToggleEquipmentSelectorButton" PropertyName="IsChecked" Value="True"/>
						</b:PropertyChangedTrigger>
					</b:Interaction.Triggers>
				</Grid>

				<!-- MAIN STATS -->
				<StackPanel x:Name="Stats" Grid.Column="3" HorizontalAlignment="Right" Margin="0,180,0,0" Orientation="Horizontal" IsEnabled="False" DataContext="{Binding CurrentPlayer.SelectedCharacter}">
					<!-- Info list -->

					<StackPanel x:Name="StatsAndAbilities" MinWidth="620" MaxWidth="800" Orientation="Vertical" HorizontalAlignment="Right" ls:MoveFocus.FocusMovementMode="Closest" Visibility="Collapsed">

						<!-- Class Icon -->
						<Grid x:Name="ClassImage" Panel.ZIndex="1" Margin="0,-80,0,-60">
							<Image HorizontalAlignment="Center" VerticalAlignment="Center" Source="{StaticResource CharSheetRadial}" Stretch="Uniform" Width="600" Margin="-30,0,0,0" />
							<Image HorizontalAlignment="Center" VerticalAlignment="Center" DataContext="{Binding Stats.ClassList[0]}" Style="{StaticResource ClassIconStyle}" Stretch="Uniform" Width="400" Margin="0,34,0,0"/>
						</Grid>

						<Grid Margin="0,0,0,0" >

							<Grid x:Name="ExperienceBarRoot" Margin="0,22,0,22" Focusable="True" ls:MoveFocus.Focusable="True" FocusVisualStyle="{StaticResource Style.FocusVisualStyle}">
								<Grid.ToolTip>
									<ls:LSTooltip DataContext="{Binding Stats}">
										<TextBlock Style="{StaticResource TooltipBaseTextStyle}" MaxWidth="700">
											<b:Interaction.Behaviors>
												<ls:CtxTransStringRunGeneratorBehavior Source="{Binding DataContext.Stats.Level.Description, ElementName=ExperienceBarRoot}" ParamRunStyle="{StaticResource TooltipUnitParamRun}"/>
											</b:Interaction.Behaviors>
										</TextBlock>
									</ls:LSTooltip>
								</Grid.ToolTip>
								<Image Source="{StaticResource xpBarDecor}" Stretch="None" Margin="0,12,0,0" HorizontalAlignment="Center"/>
								<Grid Width="440" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center">
									<ProgressBar Value="{Binding Stats.Level.FractionXPToNextLevel, Mode=OneWay}" Minimum="0" Maximum="1" BorderBrush="Transparent">
										<ProgressBar.Foreground>
											<ImageBrush ImageSource="{StaticResource XpBarFillColour}"/>
										</ProgressBar.Foreground>
										<ProgressBar.Background>
											<ImageBrush ImageSource="{StaticResource XpBarBG}"/>
										</ProgressBar.Background>
									</ProgressBar>
								</Grid>
							</Grid>

						</Grid>
						<ScrollViewer Height="Auto" MaxHeight="1400" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" Width="740">
							<StackPanel>
								<ls:LSButton x:Name="LevelUp" Visibility="Collapsed" Tag="LevelUp" Style="{StaticResource FocusableButtonStyleMinimal}">
									<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
										<Border HorizontalAlignment="Center" VerticalAlignment="Center" Width="{StaticResource LevelUpArrowAnimationFrameBigSize}" Height="{StaticResource LevelUpArrowAnimationFrameBigSize}">
											<Image x:Name="LevelUpIcon" Source="{StaticResource LevelUpArrow}" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
										</Border>

										<TextBlock x:Name="LevelUpText" Text="{Binding Source='he3ccedd0gceaeg4b1fg8e74g9dfc6da58cd2', Converter={StaticResource TranslatedStringConverter}}" Foreground="{StaticResource LS_specialTxtColor}" Style="{StaticResource CenteredStatsStyle}"/>
									</StackPanel>
								</ls:LSButton>

								<ItemsControl x:Name="Classes" ItemsSource="{Binding Stats.ClassList}" Margin="0,0,0,0" Template="{StaticResource MinimalItemsControlTemplate}">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="{x:Type ls:VMClass}">
											<ContentControl Template="{StaticResource StatsEntryTemplate}" Tag="{Binding ClassDescription}">
												<TextBlock Style="{StaticResource CenteredStatsStyle}">
													<Run>
														<Run.Text>
															<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
																<Binding Source="h5df00b79ga6acg4d9fgb8dag23340151fba7"/>
																<Binding Path="Level.Value"/>
																<Binding Path="ClassDisplayName"/>
															</MultiBinding>
														</Run.Text>
													</Run>
													<Run x:Name="SubClassSeparator" Text="~"/>
													<Run Text="{Binding SubclassDisplayName}"/>
												</TextBlock>
											</ContentControl>

											<DataTemplate.Triggers>
												<DataTrigger Binding="{Binding SubclassDisplayName, Converter={StaticResource NullToBoolTrueConverter}, ConverterParameter='EmptyString'}" Value="True">
													<Setter TargetName="SubClassSeparator" Property="Text" Value=""/>
												</DataTrigger>
											</DataTemplate.Triggers>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>

								<ContentControl x:Name="RaceInfo" Template="{StaticResource StatsEntryTemplate}" Tag="{Binding Stats.Race.Description}" Margin="0,0,0,0">
									<TextBlock Style="{StaticResource CenteredStatsStyle}" Text="{Binding Stats.Race.DisplayName}"/>
								</ContentControl>

								<ContentControl x:Name="BackgroundInfo" Template="{StaticResource StatsEntryTemplate}" Tag="{Binding Stats.BackgroundDescription}" Margin="0,0,0,0">
									<TextBlock Style="{StaticResource CenteredStatsStyle}" Text="{Binding Stats.Background}"/>
								</ContentControl>

								<ContentControl x:Name="GodInfo" Template="{StaticResource StatsEntryTemplate}" Tag="{Binding Stats.GodDescription}" Visibility="{Binding Stats.God, Converter={StaticResource StringToVisibilityConverter}}" Margin="0,0,0,0">
									<TextBlock Style="{StaticResource CenteredStatsStyle}" Text="{Binding Stats.God}"/>
								</ContentControl>

								<!-- I'm specifying each entry for the abilitie so I can set the tooltip in a specific place per entry -->

								<StackPanel Orientation="Horizontal" Margin="0,42,0,63" HorizontalAlignment="Center">
									<ContentPresenter x:Name="AbilityStat0" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[0]}" Tag="{Binding ElementName=AbilityStat0}"/>
									<ContentPresenter x:Name="AbilityStat1" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[1]}" Tag="{Binding ElementName=AbilityStat0}"/>
									<ContentPresenter x:Name="AbilityStat2" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[2]}" Tag="{Binding ElementName=AbilityStat0}"/>
									<ContentPresenter x:Name="AbilityStat3" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[3]}" Tag="{Binding ElementName=AbilityStat0}"/>
									<ContentPresenter x:Name="AbilityStat4" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[4]}" Tag="{Binding ElementName=AbilityStat0}"/>
									<ContentPresenter x:Name="AbilityStat5" ContentTemplate="{StaticResource StatsAbilitiesEntryTemplate}" Content="{Binding Stats.Abilities[5]}" Tag="{Binding ElementName=AbilityStat0}"/>
								</StackPanel>

								<!-- Melee Attack Stats -->
								<ls:LSButton x:Name="MeleeText" DataContext="{Binding Stats}" Style="{StaticResource FocusableButtonStyleMinimal}">
									<ls:LSButton.ToolTip>
										<ls:LSTooltip x:Name="MeleeTextTT" ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12" Content="{Binding Path=DataContext.EquippedWeaponDamage, ElementName=MeleeText}"/>
									</ls:LSButton.ToolTip>
									<ContentPresenter ContentTemplate="{StaticResource CombatStatsValueEntryTemplate}" Content="{Binding MeleeAttackDamageRange}" Tag="{Binding Source='h506315b4gf172g4fb2ga41ege325b8989902', Converter={StaticResource TranslatedStringConverter}}" >
									</ContentPresenter>
								</ls:LSButton>

								<ContentPresenter x:Name="MeleeAttackBonus" ContentTemplate="{StaticResource CombatStatsBonusEntryTemplate}" Content="{Binding Stats.MeleeAttackBonus}" Tag="{Binding Source='h4db5409ag8fb5g4d46g88a1g465c84e20fef', Converter={StaticResource TranslatedStringConverter}}" />

								<StackPanel x:Name="MeleeOffHandHolder" Visibility="{Binding HasMeleeDualWielding, Converter={StaticResource BoolToVisibleConverter}}">

									<ls:LSButton x:Name="MeleeTextOffHand" DataContext="{Binding Stats}" Style="{StaticResource FocusableButtonStyleMinimal}">
										<ls:LSButton.ToolTip>
											<ls:LSTooltip x:Name="MeleeTextOffHandTT" ToolTipService.Placement="Left" ToolTipService.HorizontalOffset="-40" ToolTipService.VerticalOffset="0" Content="{Binding Path=DataContext.EquippedWeaponDamage, ElementName=MeleeTextOffHand}"/>
										</ls:LSButton.ToolTip>
										<ContentPresenter ContentTemplate="{StaticResource CombatStatsValueEntryTemplate}" Content="{Binding OffHandMeleeAttackDamageRange}" Tag="{Binding Source='h9ff656c8gbe25g470dgb74eg044d418d332e', Converter={StaticResource TranslatedStringConverter}}"/>
									</ls:LSButton>

									<ContentPresenter x:Name="MeleeAttackBonusOfHand" ContentTemplate="{StaticResource CombatStatsBonusEntryTemplate}" Content="{Binding Stats.OffHandMeleeAttackBonus}" Tag="{Binding Source='h29276145g6962g4f7eg938fgf5c4c7096d7b', Converter={StaticResource TranslatedStringConverter}}"/>

								</StackPanel>

								<!-- Ranged Attack Stats -->
								<StackPanel x:Name="RangedHolder" Margin="0,42,0,0" Visibility="{Binding Equipment.RangedMainHand.Item, Converter={StaticResource NullToCollapsedConverter}}">

									<ls:LSButton x:Name="RangedText" DataContext="{Binding Stats}" Style="{StaticResource FocusableButtonStyleMinimal}">
										<ls:LSButton.ToolTip>
											<ls:LSTooltip x:Name="RangedTextTT" ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12" Content="{Binding Path=DataContext.EquippedWeaponDamage, ElementName=RangedText}"/>
										</ls:LSButton.ToolTip>
										<ContentPresenter ContentTemplate="{StaticResource CombatStatsValueEntryTemplate}" Content="{Binding RangedAttackDamageRange}" Tag="{Binding Source='h09323bceg1256g4633g81d0g1863cd0c852b', Converter={StaticResource TranslatedStringConverter}}" />
									</ls:LSButton>

									<ContentPresenter x:Name="RangedAttackBonus" ContentTemplate="{StaticResource CombatStatsBonusEntryTemplate}" Content="{Binding Stats.RangedAttackBonus}" Tag="{Binding Source='h4db5409ag8fb5g4d46g88a1g465c84e20fef', Converter={StaticResource TranslatedStringConverter}}" />
								</StackPanel>
								<StackPanel x:Name="RangedOffHandHolder" Visibility="{Binding HasRangedDualWielding, Converter={StaticResource BoolToVisibleConverter}}">

									<ls:LSButton x:Name="RangedTextOffHand" DataContext="{Binding Stats}" Style="{StaticResource FocusableButtonStyleMinimal}">
										<ls:LSButton.ToolTip>
											<ls:LSTooltip x:Name="RangedTextOffHandTT"  ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12" Content="{Binding Path=DataContext.EquippedWeaponDamage, ElementName=RangedTextOffHand}"/>
										</ls:LSButton.ToolTip>
										<ContentPresenter ContentTemplate="{StaticResource CombatStatsValueEntryTemplate}" Content="{Binding OffHandRangedAttackDamageRange}" Tag="{Binding Source='h09323bceg1256g4633g81d0g1863cd0c852b', Converter={StaticResource TranslatedStringConverter}}"/>
									</ls:LSButton>

									<ContentPresenter x:Name="RangedAttackBonusOffHand" ContentTemplate="{StaticResource CombatStatsBonusEntryTemplate}" Content="{Binding Stats.OffHandRangedAttackBonus}" Tag="{Binding Source='h29276145g6962g4f7eg938fgf5c4c7096d7b', Converter={StaticResource TranslatedStringConverter}}"/>
								</StackPanel>

								<!--Health-->
								<ContentControl Style="{StaticResource FocusableContentControlNoBG}" DataContext="{Binding Stats.Health}" ToolTip="{StaticResource PlacementParentDCTooltip}" Margin="0,42,0,0" ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12">
									<DockPanel Margin="20,0,20,0">
										<Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource StatsNameStyle}"/>
										<TextBlock Text="{Binding Max, StringFormat='/{0}'}" Style="{StaticResource StatsValueStyle}"/>
										<TextBlock Text="{Binding Value}" Style="{StaticResource StatsValueStyle}"/>
									</DockPanel>
								</ContentControl>

								<!--TempHealth-->
								<ContentControl Style="{StaticResource FocusableContentControlNoBG}" DataContext="{Binding Stats.TemporaryHealth}" ToolTip="{StaticResource PlacementParentDCTooltip}" ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12" Visibility="{Binding Value, Converter={StaticResource CountToVisibilityConverter}}">
									<DockPanel Margin="20,0,20,0">
										<Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource StatsNameStyle}"/>
										<TextBlock Text="{Binding Max, StringFormat='/{0}'}" Style="{StaticResource StatsValueStyle}"/>
										<TextBlock Text="{Binding Value}" Style="{StaticResource StatsValueStyle}"/>
									</DockPanel>
								</ContentControl>

								<!--Armour Class-->
								<ContentControl Style="{StaticResource FocusableContentControlNoBG}" DataContext="{Binding Stats.ArmorClass}" ToolTip="{StaticResource PlacementParentDCTooltip}" ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12">
									<DockPanel Margin="20,0,20,0">
										<Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource StatsNameStyle}"/>
										<TextBlock Style="{StaticResource StatsValueStyle}">
												<Run Text="{Binding Value}"/><Run Text="{Binding Max, StringFormat='/{0}'}"/>
										</TextBlock>
									</DockPanel>
								</ContentControl>

								<!-- Movement -->
								<ContentControl Style="{StaticResource FocusableContentControlNoBG}" DataContext="{Binding Stats.MovementResource}" ToolTip="{StaticResource PlacementParentDCTooltip}"  ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12">
									<DockPanel Margin="20,0,20,0">
										<TextBlock Text="{Binding Name}" Style="{StaticResource StatsStyle}"/>
										<TextBlock Text="{Binding MaxValue, Converter={StaticResource UnitConverter}, ConverterParameter='Distance Short'}" Style="{StaticResource StatsValueStyle}"/>
									</DockPanel>
								</ContentControl>

								<!-- Initiative-->
								<ContentControl Style="{StaticResource FocusableContentControlNoBG}" DataContext="{Binding Stats.Initiative}" ToolTip="{StaticResource PlacementParentDCTooltip}"  ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12">
									<DockPanel Margin="20,0,20,0">
										<Control Template="{StaticResource StatsDisplayName}" Style="{StaticResource StatsNameStyle}"/>
										<TextBlock Text="{Binding Value, StringFormat={}{0:+#;-#;+0}}" Style="{StaticResource StatsValueStyle}"/>
									</DockPanel>
								</ContentControl>

								<ItemsControl x:Name="RatingsList" ItemsSource="{Binding ApprovalRatings}" Margin="0,42,0,0" Visibility="{Binding ApprovalRatings.Count, Converter={StaticResource CountToVisibilityConverter}}"
											  Template="{StaticResource MinimalItemsControlTemplate}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<ls:LSButton x:Name="RatingsListRoot" ToolTip="{StaticResource ManagedTooltip}"  Style="{StaticResource FocusableButtonStyleMinimal}" ToolTipService.HorizontalOffset="20" ToolTipService.VerticalOffset="-12">
												<Grid Margin="0,0,20,0">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="20" />
														<ColumnDefinition Width="*" />
														<ColumnDefinition Width="Auto" />
													</Grid.ColumnDefinitions>

													<Image Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource StatsEntryBgStyle}"/>
													<TextBlock Grid.Column="1" Text="{Binding Character.Name}" Style="{StaticResource StatsStyle}" />
													<TextBlock Grid.Column="2" Text="{Binding Rating, Converter={StaticResource ApprovalRatingToStringConverter}}" FontSize="{StaticResource ScaledMediumFontSize}" Style="{StaticResource StatsValueStyle}"  />
												</Grid>
											</ls:LSButton>
											<DataTemplate.Triggers>
												<DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Common" >
													<Setter TargetName="RatingsListRoot" Property="ToolTipService.Placement" Value="Left" />
													<Setter TargetName="RatingsListRoot" Property="ToolTipService.HorizontalOffset" Value="-40" />
												</DataTrigger>

											</DataTemplate.Triggers>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</StackPanel>
						</ScrollViewer>
					</StackPanel>

				</StackPanel>
			</Grid>
			</AdornerDecorator>
			<!-- Button hints -->
			<StackPanel x:Name="LeftHints" Style="{StaticResource ButtonHint.Container.Left}">
				<!-- EMPTY FOR NOW -->
			</StackPanel>
			<StackPanel x:Name="RightHints" Style="{StaticResource ButtonHint.Container.Right}">
				<!-- EMPTY FOR NOW -->
			</StackPanel>

			<ls:AlignableWrapPanel x:Name="Hints" Style="{StaticResource ButtonHint.Container.CenterWrap}">
				<!-- Edit Reaction -->
				<ls:LSButton x:Name="ToggleReactionEnabledButton"
							 ls:LSButton.BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding Source='hd715eb4cg6069g4ebdg8eecg6be753a0d72a', Converter={StaticResource TranslatedStringConverter}}"
							 Command="{Binding ToggleEnabled}"
							 CommandParameter="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
							 Visibility="Collapsed"/>
				<ls:LSButton x:Name="ToggleReactionAskButton"
							 ls:LSButton.BoundEvent="UICreate"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UICreate'}"
							 Tag="{Binding Source='h45a789ccg4fabg4a9dgbf40g29e125978f6d', Converter={StaticResource TranslatedStringConverter}}"
							 Command="{Binding ToggleAsk}"
							 CommandParameter="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
							 Visibility="Collapsed"/>

				<!-- Proficiency Group -->
				<ls:LSButton x:Name="ProficiencyGroupButton"
							ls:LSButton.BoundEvent="UIAccept"
							ContentTemplate="{StaticResource ControllerButtonHint}"
							Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							Tag="{Binding Source='h73880dc7ga260g4f04gab87ga0afe4b0794e', Converter={StaticResource TranslatedStringConverter}}"
							Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:ChangePropertyAction TargetObject="{Binding FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" PropertyName="IsChecked" Value="{Binding FocusedElement.IsChecked, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource InvertBoolConverter}}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Action -->
				<ls:LSButton x:Name="ItemActionButton"
							 ls:LSButton.BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GetUseActionConverter}}"
							 Command="{Binding UseGameObject}"
							 CommandParameter="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
							 Visibility="Collapsed"/>

				<!-- Select equipment slot to open the equipment selector -->
				<ls:LSToggleButton x:Name="ToggleEquipmentSelectorButton"
								   BoundEvent="UIAccept" IsChecked="True" TapTime="{StaticResource DefaultButtonTapTime}"
								   ContentTemplate="{StaticResource ControllerButtonHint}"
								   Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
								   Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}"
								   CommandParameter="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
								   Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=ToggleEquipmentSelectorButton}">
							<b:Interaction.Behaviors>
								<b:ConditionBehavior>
									<b:ConditionalExpression>
										<b:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=ToggleEquipmentSelectorButton}" Operator="Equal" RightOperand="True"/>
									</b:ConditionalExpression>
								</b:ConditionBehavior>
							</b:Interaction.Behaviors>

							<b:ControlStoryboardAction x:Name="HideEquipmentSelectorSA">
								<b:ControlStoryboardAction.Storyboard>
									<Storyboard Children="{StaticResource HideEquipmentSelectAnimation}"/>
								</b:ControlStoryboardAction.Storyboard>
							</b:ControlStoryboardAction>
						</b:PropertyChangedTrigger>

						<b:PropertyChangedTrigger Binding="{Binding IsChecked, ElementName=ToggleEquipmentSelectorButton}">
							<b:Interaction.Behaviors>
								<b:ConditionBehavior>
									<b:ConditionalExpression>
										<b:ComparisonCondition LeftOperand="{Binding IsChecked, ElementName=ToggleEquipmentSelectorButton}" Operator="Equal" RightOperand="False"/>
									</b:ConditionalExpression>
								</b:ConditionBehavior>
							</b:Interaction.Behaviors>

							<b:ControlStoryboardAction x:Name="ShowEquipmentSelectorSA" >
								<b:ControlStoryboardAction.Storyboard>
									<Storyboard Children="{StaticResource ShowEquipmentSelectorAnimation}"/>
								</b:ControlStoryboardAction.Storyboard>
							</b:ControlStoryboardAction>
						</b:PropertyChangedTrigger>
					</b:Interaction.Triggers>

				</ls:LSToggleButton>

				<!-- Level Up -->
				<ls:LSButton x:Name="LevelUpButton"
							 ls:LSButton.BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding Source='he3ccedd0gceaeg4b1fg8e74g9dfc6da58cd2', Converter={StaticResource TranslatedStringConverter}}"
							 Command="{Binding StartLevelUp}"
							 CommandParameter="{Binding CurrentPlayer.SelectedCharacter}"
							 Visibility="Collapsed"/>
				<ls:LSButton x:Name="ToggleMultiSelectButton" Style="{StaticResource ToggleMultiSelectButtonStyle}" Visibility="Collapsed"/>

				<!-- Show Context Menu -->
				<ls:LSButton x:Name="ShowContextMenu"
							 Command="{Binding ShowContextMenu}"
							 CommandParameter="{Binding FocusedElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
							 ls:LSButton.BoundEvent="ContextMenu"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICreate, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='heb4b592bgc665g4e17ga685g07e2eb5e25db', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed"
							 TapTime="{StaticResource DelayedButtonTapTime}" EatInput="False"/>

				<ls:LSButton x:Name="StartMultiSelectButton" Visibility="Collapsed" Style="{StaticResource StartMultiSelectButtonStyle}"/>

				<!-- Toggle Inventory Lock -->
				<ls:LSButton x:Name="ToggleInventoryLockButton"
							 BoundEvent="UIMessageBoxY"
							 TapTime="{StaticResource DefaultButtonTapTime}"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIMessageBoxY'}"
							 Tag="{Binding Source='h285d26a3ge78ag40d0ga7d3gfa9fc01e68cd', Converter={StaticResource TranslatedStringConverter}}"
							 Command="{Binding ToggleInventoryLockCommand}"
							 CommandParameter="{Binding FocusedElement.DataContext.Inventory, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
							 Visibility="Collapsed"/>

				<!-- Toggle helmet -->
				<ls:LSButton x:Name="ToggleHelmet"
							 ls:LSButton.BoundEvent="UIMessageBoxY"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIMessageBoxY, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='h32a6e47bg2a6dg4d0bgbe50g7c95a2ec55da', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:InvokeCommandAction Command="{Binding ChangeEquipmentVisibilityCommand}" CommandParameter="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
							<b:ControlStoryboardAction Storyboard="{StaticResource HelmetVisibilityAnimation}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Toggle musical instrument -->
				<ls:LSButton x:Name="ToggleMusicalInstrument"
							 ls:LSButton.BoundEvent="UIMessageBoxY"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIMessageBoxY, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='h48f7e36dg3063g477eg9bedg91f3721bcfcd', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:InvokeCommandAction Command="{Binding ChangeStowedVisibilityCommand}" CommandParameter="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" />
							<b:ControlStoryboardAction Storyboard="{StaticResource InstrumentVisibilityAnimation}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Toggle Armor Set -->
				<ls:LSButton x:Name="ToggleArmorSet" BoundEvent="UIMessageBoxY" ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIMessageBoxY, Converter={StaticResource FindInputEventConverter}}"
				Tag="{Binding Source='h806a6b7cg41e7g4865gad5bg27046273972c', Converter={StaticResource TranslatedStringConverter}}"
				Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:InvokeCommandAction Command="{Binding DataContext.ToggleArmorSetVisibility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding CurrentPlayer.SelectedCharacter}" />
							<b:ControlStoryboardAction Storyboard="{StaticResource VanityVisibilityAnimation}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Toggle Dual Wield -->
				<ls:LSButton x:Name="ToggleDualWield"
							 BoundEvent="UIMessageBoxY"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIMessageBoxY, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='hfd571216g8e69g4699g8396gb764f90db389', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:InvokeCommandAction Command="{Binding DataContext.ToggleDualWieldingCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
							<b:ControlStoryboardAction Storyboard="{StaticResource DualWieldVisibilityAnimation}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Toggle party filter option -->
				<ls:LSButton x:Name="TogglePartyFilterEquipmentButton"
							 BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:ChangePropertyAction TargetObject="{Binding CurrentPlayer.SelectedCharacter.Equipment}" PropertyName="UsePartyInventory" Value="{Binding CurrentPlayer.SelectedCharacter.Equipment.UsePartyInventory, Converter={StaticResource InvertBoolConverter}}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Toggle tooltips -->
				<ls:LSButton x:Name="ToggleTooltips" VerticalAlignment="Bottom" Margin="10,0" EatInput="False"
								 Command="{Binding ToggleTooltipOnUIElement}"
								 CommandParameter="{Binding FocusedElement, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ls:UIWidget}}"
								 ls:LSButton.BoundEvent="UIShowInfo"
								 ContentTemplate="{StaticResource ControllerButtonHint}"
								 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIShowInfo, Converter={StaticResource FindInputEventConverter}}"
								 Tag="{Binding Source='hf8dd4c2fg97e0g4ccdgac1ag3cd1fe5060ef', Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}"/>

				<!-- Toggle proficiency filter option -->
				<ls:LSButton x:Name="ToggleProficiencyFilterEquipmentButton"
							 BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:ChangePropertyAction TargetObject="{Binding CurrentPlayer.SelectedCharacter.Equipment}" PropertyName="UseProficiencyFilter" Value="{Binding CurrentPlayer.SelectedCharacter.Equipment.UseProficiencyFilter, Converter={StaticResource InvertBoolConverter}}"/>
							<b:InvokeCommandAction Command="{Binding UpdateEquipmentFiltersCommand}" CommandParameter="{Binding Path=(ls:MoveFocus.ScopeMoveFocusedElement).DataContext, ElementName=EquipmentSlots}" />
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Select filter option -->
				<ls:LSButton x:Name="SelectFilterOptionButton"
							 BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:ChangePropertyAction TargetObject="{Binding CurrentPlayer.UIData}" PropertyName="GlobalSelectedFilter"  Value="{Binding FocusedElement.DataContext, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<ls:LSButton x:Name="ClearFilterOptionButton"
							 Command="{Binding ClearFilterCommand}"
							 BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed"/>

				<!-- Select sorting option -->
				<ls:LSButton x:Name="SelectSortOptionButton"
							 Command="{Binding SelectSortCommand}"
							 BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<ls:LSButton.CommandParameter>
						<MultiBinding Converter="{StaticResource PassThroughConverter}">
							<Binding Path="FocusedElement.(ls:AttachedProperties.InheritedTag)" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
							<Binding Path="{x:Null}"/>
							<!-- Use null so all characters will be using this sorting value -->
						</MultiBinding>
					</ls:LSButton.CommandParameter>
				</ls:LSButton>

				<ls:LSButton x:Name="SelectEquipmentSortOptionButton"
							 Command="{Binding SelectSortCommand}"
							 BoundEvent="UIAccept"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"
							 Tag="{Binding Source='h04f38549g65b8g4b72g834eg87ee8863fdc5', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<ls:LSButton.CommandParameter>
						<MultiBinding Converter="{StaticResource PassThroughConverter}">
							<Binding Path="FocusedElement.(ls:AttachedProperties.InheritedTag)" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
							<Binding Path="CurrentPlayer.SelectedCharacter"/>
							<Binding Source="{StaticResource FalseValue}"/>
							<Binding Source="{StaticResource TrueValue}"/>
						</MultiBinding>
					</ls:LSButton.CommandParameter>
				</ls:LSButton>

				<!--This is only here for the button hint look for CancelMultiSelect-->
				<ls:LSButton x:Name="CancelMultiSelectButton"
							 EatInput="False"
							 BoundEvent="UICancel"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='h43f0dd5cg543cg46f5gaa87g4f14f4803cd1', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
				</ls:LSButton>
				<!-- Close the widget -->
				<ls:LSButton x:Name="CloseWidgetButton"
							 Command="{Binding CustomEvent}"
							 CommandParameter="ClosePanelSelect"
							 BoundEvent="UICancel"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='h411fb88eg5261g437aga291g2fb260e633c6', Converter={StaticResource TranslatedStringConverter}}" />

				<!-- Close the equipment filter -->
				<ls:LSButton x:Name="CloseEquipmentFilterButton"
							 BoundEvent="UICancel"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='h411fb88eg5261g437aga291g2fb260e633c6', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="{Binding Visibility, ElementName=EquipmentFilter}">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:ChangePropertyAction TargetName="EquipmentSelectionView" PropertyName="IsEnabled" Value="True"/>
							<b:ControlStoryboardAction x:Name="HideEquipmentFilterSA">
								<b:ControlStoryboardAction.Storyboard>
									<Storyboard Children="{StaticResource HideEquipmentFilterAnimation}"/>
								</b:ControlStoryboardAction.Storyboard>
							</b:ControlStoryboardAction>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

				<!-- Close inventory filter -->
				<ls:LSButton x:Name="CloseInventoryFilterButton"
							 BoundEvent="UICancel"
							 ContentTemplate="{StaticResource ControllerButtonHint}"
							 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}"
							 Tag="{Binding Source='h411fb88eg5261g437aga291g2fb260e633c6', Converter={StaticResource TranslatedStringConverter}}"
							 Visibility="Collapsed">
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="LSButtonPressed">
							<b:ChangePropertyAction TargetName="Tabs" PropertyName="Tag" Value="FiltersClose"/>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</ls:LSButton>

			</ls:AlignableWrapPanel>

			<ls:LSButton VerticalAlignment="Center" BoundEvent="CharacterCreationRotateLeft">
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="LSButtonPressed">
						<b:ChangePropertyAction PropertyName="RotationSpeed" Value="1.8" TargetName="PaperDoll"/>
					</b:EventTrigger>
					<b:EventTrigger EventName="LSButtonReleased" >
						<b:ChangePropertyAction PropertyName="RotationSpeed" Value="0" TargetName="PaperDoll"/>
					</b:EventTrigger>
				</b:Interaction.Triggers>
			</ls:LSButton>
			<ls:LSButton VerticalAlignment="Center"  BoundEvent="CharacterCreationRotateRight">
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="LSButtonPressed">
						<b:ChangePropertyAction PropertyName="RotationSpeed" Value="-1.8" TargetName="PaperDoll"/>
					</b:EventTrigger>
					<b:EventTrigger EventName="LSButtonReleased" >
						<b:ChangePropertyAction PropertyName="RotationSpeed" Value="0" TargetName="PaperDoll"/>
					</b:EventTrigger>
				</b:Interaction.Triggers>
			</ls:LSButton>
			<ls:LSButton VerticalAlignment="Center" BoundEvent="CameraZoomIn">
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="LSButtonPressed">
						<b:ControlStoryboardAction Storyboard="{StaticResource ZoomCharacterIn}"/>
					</b:EventTrigger>
					<b:StoryboardCompletedTrigger  Storyboard="{StaticResource ZoomCharacterIn}">
						<b:ChangePropertyAction TargetName="PaperDoll" PropertyName="Margin" Value="400,0,0,0" />
						<b:ChangePropertyAction TargetName="PaperDoll" PropertyName="Zoom" Value="1.2" />
					</b:StoryboardCompletedTrigger>
				</b:Interaction.Triggers>
			</ls:LSButton>
			<ls:LSButton VerticalAlignment="Center" BoundEvent="CameraZoomOut">
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="LSButtonPressed">
						<b:ControlStoryboardAction Storyboard="{StaticResource ZoomCharacterOut}"/>
					</b:EventTrigger>
					<b:StoryboardCompletedTrigger  Storyboard="{StaticResource ZoomCharacterOut}">
						<b:ChangePropertyAction TargetName="PaperDoll" PropertyName="Margin" Value="400,180,0,0" />
						<b:ChangePropertyAction TargetName="PaperDoll" PropertyName="Zoom" Value="0.2" />
					</b:StoryboardCompletedTrigger>
				</b:Interaction.Triggers>
			</ls:LSButton>
			<!--CAROUSEL-->
			<Control x:Name="CarouselHeader" Style="{StaticResource PanelsCarouselStyle}"/>

			<Control x:Name="c_PartyGold" Style="{StaticResource PartyGoldStyle}" />
		</Grid>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding ShowUIElementTooltip}" Value="True">
				<Setter TargetName="ToggleTooltips" Property="Tag" Value="{Binding Source='hb33ec471gd611g4ee3gbbffg699af8f79167', Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Stats.Level.LevelUpAvailable}" Value="True">
				<Setter TargetName="LevelUp" Property="Visibility" Value="Visible"/>

				<DataTrigger.EnterActions>
					<BeginStoryboard x:Name="IconBounce">
						<BeginStoryboard.Storyboard>
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="LevelUpIcon" RepeatBehavior="Forever">
									<EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame1}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
									<EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame2}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
									<EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame3}" Value="{StaticResource LevelUpArrowAnimationFrameBigSize}"/>
									<EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame4}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</BeginStoryboard.Storyboard>
					</BeginStoryboard>
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<StopStoryboard BeginStoryboardName="IconBounce"/>
				</DataTrigger.ExitActions>
			</DataTrigger>
			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="LevelUp">
				<Setter TargetName="LevelUpText" Property="Foreground" Value="{StaticResource LS_tint100}"/>
				<Setter TargetName="LevelUpButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Value="True">
				<DataTrigger.Binding>
					<MultiBinding Converter="{StaticResource EqualConverter}">
						<Binding Path="Stats.MeleeAttackDamageRange.Value"/>
						<Binding Path="Stats.MeleeAttackDamageRange.Max"/>
					</MultiBinding>
				</DataTrigger.Binding>
				<Setter TargetName="MeleeText" Property="Content" Value="{Binding Stats.MeleeAttackDamageRange.Value}"/>
			</DataTrigger>

			<DataTrigger Value="True">
				<DataTrigger.Binding>
					<MultiBinding Converter="{StaticResource EqualConverter}">
						<Binding Path="Stats.RangedAttackDamageRange.Value"/>
						<Binding Path="Stats.RangedAttackDamageRange.Max"/>
					</MultiBinding>
				</DataTrigger.Binding>
				<Setter TargetName="RangedText" Property="Content" Value="{Binding Stats.RangedAttackDamageRange.Value}"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding Equipment.RangedMainHand.Item, Converter={StaticResource NullToBoolTrueConverter}}" Value="True">
				<Setter TargetName="RangedText" Property="Content" Value="-"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding Equipment.SelectedSlotType}" Value="Cloak">
				<Setter TargetName="EquipmentSelector" Property="Tag" Value="Right"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Equipment.SelectedSlotType}" Value="Amulet">
				<Setter TargetName="EquipmentSelector" Property="Tag" Value="Right"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Equipment.SelectedSlotType}" Value="Ring">
				<Setter TargetName="EquipmentSelector" Property="Tag" Value="Right"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Equipment.SelectedSlotType}" Value="Ring2">
				<Setter TargetName="EquipmentSelector" Property="Tag" Value="Right"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Equipment.SelectedSlotType}" Value="MusicalInstrument">
				<Setter TargetName="EquipmentSelector" Property="Tag" Value="Right"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Equipment.SelectedSlotType}" Value="RangedMainHand">
				<Setter TargetName="EquipmentSelector" Property="Tag" Value="Right"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Equipment.SelectedSlotType}" Value="RangedOffHand">
				<Setter TargetName="EquipmentSelector" Property="Tag" Value="Right"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Tag, ElementName=EquipmentSelector}" Value="Right">
				<Setter TargetName="EquipmentSelector" Property="HorizontalAlignment" Value="Right"/>
				<Setter TargetName="EquipmentFilter" Property="HorizontalAlignment" Value="Left"/>
			</DataTrigger>
			<Trigger SourceName="EquipmentFilter" Property="Visibility" Value="Visible" >
				<Setter TargetName="CloseWidgetButton" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="ToggleTooltips" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Equipment.UsePartyInventory}" Value="True">
				<Setter TargetName="EquipmentFilteringContainerHolder" Property="ItemsList" Value="{Binding InventoriesSlots, ElementName=PartyEquipmentMerger}"/>
			</DataTrigger>


			<!-- Helmet Visibility Messaging -->
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Equipment.Helmet.VisibilityType}" Value="CinematicsHidden">
				<Setter TargetName="HelmetVisibilityText" Property="Text" Value="{Binding Source='h57dce093g8d4ag43b4gb7a3g525250a499c1',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Equipment.Helmet.VisibilityType}" Value="Hidden">
				<Setter TargetName="HelmetVisibilityText" Property="Text" Value="{Binding Source='h5bd7b04cg842eg4892ga9b7ga421ad707517',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<!-- Instrument Visibility Messaging -->
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Equipment.MusicalInstrument.StowedVisibility}" Value="ShowAll">
				<Setter TargetName="InstrumentVisibilityText" Property="Text" Value="{Binding Source='hb82d55a4g4478g4234g8a45gd27ddab005e6',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Equipment.MusicalInstrument.StowedVisibility}" Value="ShowWeaponOnly">
				<Setter TargetName="InstrumentVisibilityText" Property="Text" Value="{Binding Source='h0c4b9c46g5991g4f3dg8362gdc7a527a1022',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.Equipment.MusicalInstrument.StowedVisibility}" Value="ShowMusicalInstrumentOnly">
				<Setter TargetName="InstrumentVisibilityText" Property="Text" Value="{Binding Source='h580931ebgac43g434ag8a43g2829942f642b',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.HasMeleeDualWielding}" Value="True"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.IsDualWieldingToggledOn}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="MeleeDualWieldLink" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.HasRangedDualWielding}" Value="True"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.IsDualWieldingToggledOn}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="RangedDualWieldLink" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<!-- Vanity Visibility Messaging -->
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.ArmorSetVisibility}" Value="Normal">
				<Setter TargetName="VanityVisibilityText" Property="Text" Value="{Binding Source='hf94141f3g2c48g48c0ga839gfae00aaafe28',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.ArmorSetVisibility}" Value="Vanity">
				<Setter TargetName="VanityVisibilityText" Property="Text" Value="{Binding Source='hff9080d3gd2d5g4fe3g9ff0g4bdeabc22b00',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>

			<!-- Vanity Visibility Messaging -->
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.IsDualWieldingToggledOn}" Value="True">
				<Setter TargetName="DualWieldVisibilityText" Property="Text" Value="{Binding Source='hbf3eb825g16dfg42bfg9a2ag81e7e10a2e08',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.IsDualWieldingToggledOn}" Value="False">
				<Setter TargetName="DualWieldVisibilityText" Property="Text" Value="{Binding Source='hcf9235e2gfc31g427dg8f0dgaacb0220ff90',Converter={StaticResource TranslatedStringConverter}}"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.DataContext, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.VMEquipmentSlot">
				<Setter TargetName="ShowContextMenu" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding FocusedElement.DataContext, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.VMItem">
				<Setter TargetName="ShowContextMenu" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ItemActionButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Tag.(ls:MultiSelect.IsEnabled), ElementName=ToggleMultiSelectButton}" Value="False"/>
					<Condition Binding="{Binding FocusedElement, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.LSEntityObject"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="StartMultiSelectButton" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Tag.(ls:MultiSelect.IsEnabled), ElementName=ToggleMultiSelectButton}" Value="True"/>
					<Condition Binding="{Binding FocusedElement, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.LSEntityObject"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleMultiSelectButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ItemActionButton" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="CancelMultiSelectButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="CloseWidgetButton" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.Character"/>
					<Condition Binding="{Binding FocusedElement, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.LSEntityObject"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ShowContextMenu" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="Equipment"/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Equipment.ShowAvailableEquipment, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<Trigger SourceName="ToggleEquipmentSelectorButton" Property="IsChecked" Value="False">
				<Setter TargetName="EquipmentSelector" Property="Visibility" Value="Visible"/>
				<Setter TargetName="EquipmentSelector" Property="Opacity" Value="1"/>
				<!-- The Close widget will be visual only, as it will be the ToggleEquipmentSelectorButton who will handle the input.
					 It's done this way as the ToggleEquipmentSelectorButton is on the left part of the buttons, and hiding CloseWidgetButton would break the visual consistency on the player side.-->
				<Setter TargetName="CloseWidgetButton" Property="BoundEvent" Value=""/>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="Width" Value="0"/>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="Height" Value="0"/>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="ContentTemplate" Value="{StaticResource ControllerButtonHintImageOnly}"/>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="BoundEvent" Value="UICancel"/>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="Command" Value="{Binding ShowAvailableEquipmentCommand}"/>
			</Trigger>

			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.ShowCampCharacter, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="IsEnabled" Value="False"/>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="Width" Value="500"/>
			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Tag, ElementName=CharSheetPanelRoot}" Value="False"/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Equipment.ShowAvailableEquipment, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
					<Condition Binding="{Binding Tag, ElementName=Tabs}" Value=""/>
					<Condition Binding="{Binding IsEnabled, ElementName=SpellsPreparation}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="CloseWidgetButton" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding IsEnabled, ElementName=EquipmentSelectionView}" Value="True"/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Equipment.ShowAvailableEquipment, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleEquipmentSelectorButton" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<!--Show Helmet Toggle when not in Vanity clothes-->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext.SlotType, RelativeSource={RelativeSource Mode=Self}}" Value="Helmet"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.ArmorSetVisibility}" Value="Normal"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleHelmet" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.DataContext.SlotType, RelativeSource={RelativeSource Mode=Self}}" Value="MusicalInstrument">
				<Setter TargetName="ToggleMusicalInstrument" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.DataContext.SlotType, RelativeSource={RelativeSource Mode=Self}}" Value="VanityBody">
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext.SlotType, RelativeSource={RelativeSource Mode=Self}}" Value="MeleeMainHand"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.HasMeleeDualWielding}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleDualWield" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext.SlotType, RelativeSource={RelativeSource Mode=Self}}" Value="MeleeOffHand"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.HasMeleeDualWielding}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleDualWield" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext.SlotType, RelativeSource={RelativeSource Mode=Self}}" Value="RangedMainHand"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.HasRangedDualWielding}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleDualWield" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext.SlotType, RelativeSource={RelativeSource Mode=Self}}" Value="RangedOffHand"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.HasRangedDualWielding}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleDualWield" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleArmorSet" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Tag, ElementName=Tabs}" Value="Filters"/>
					<Condition Binding="{Binding Path=Tag, ElementName=TabContentPresenter}" Value="Inventory"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="CloseInventoryFilterButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="CloseWidgetButton" Property="Visibility" Value="Collapsed"/>

				<Setter TargetName="Equipment" Property="IsEnabled" Value="False"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Tag, ElementName=Tabs}" Value="FiltersClose"/>
					<Condition Binding="{Binding Path=Tag, ElementName=TabContentPresenter}" Value="Inventory"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="CloseInventoryFilterButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="CloseWidgetButton" Property="Visibility" Value="Collapsed"/>

				<Setter TargetName="Equipment" Property="IsEnabled" Value="False"/>
			</MultiDataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="FilterPartyEquipment">
				<Setter TargetName="TogglePartyFilterEquipmentButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="FilterProficiencyEquipment">
				<Setter TargetName="ToggleProficiencyFilterEquipmentButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="InventoryFilter">
				<Setter TargetName="SelectFilterOptionButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="ClearInventoryFilter">
				<Setter TargetName="ClearFilterOptionButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="Sort">
				<Setter TargetName="SelectSortOptionButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="EquipmentSort">
				<Setter TargetName="SelectEquipmentSortOptionButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="ExpanderGroup">
				<Setter TargetName="ProficiencyGroupButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="InventoryExpanderGroup">
				<Setter TargetName="ProficiencyGroupButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.DataContext, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.VMInterrupt">
				<Setter TargetName="ToggleReactionEnabledButton" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ToggleReactionAskButton" Property="Visibility" Value="Visible"/>
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.VMInterrupt"/>
					<Condition Binding="{Binding FocusedElement.DataContext.Enabled, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleReactionEnabledButton" Property="Tag" Value="{Binding Source='h3f9a1151ge25ag43b6ga7bbg75a28c1fa7ff', Converter={StaticResource TranslatedStringConverter}}"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.VMInterrupt"/>
					<Condition Binding="{Binding FocusedElement.DataContext.Ask, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleReactionAskButton" Property="Tag" Value="{Binding Source='hb58734fcg0f51g4b87g90a8g3bd6e7383dce', Converter={StaticResource TranslatedStringConverter}}"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.DataContext, Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="ls.VMInterrupt"/>
					<Condition Binding="{Binding FocusedElement.DataContext.Enabled, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleReactionAskButton" Property="IsEnabled" Value="False"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding FocusedElement.Tag, RelativeSource={RelativeSource Mode=Self}}" Value="InventoryExpanderGroup"/>
					<Condition Binding="{Binding Data.Players.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True"/>
					<Condition Value="True">
						<Condition.Binding>
							<MultiBinding Converter="{StaticResource EqualConverter}">
								<Binding Path="FocusedElement.DataContext.OwnerUserID" RelativeSource="{RelativeSource Mode=Self}"/>
								<Binding Path="CurrentPlayer.UserId"/>
							</MultiBinding>
						</Condition.Binding>
					</Condition>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="ToggleInventoryLockButton" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<DataTrigger Binding="{Binding FocusedElement.(ls:AttachedProperties.InheritedTag), RelativeSource={RelativeSource Mode=Self}}" Value="InventoryLocked">
				<Setter TargetName="ItemActionButton" Property="IsEnabled" Value="False"/>
				<Setter TargetName="ShowContextMenu" Property="IsEnabled" Value="False"/>
				<Setter TargetName="StartMultiSelectButton" Property="IsEnabled" Value="False"/>
			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Tag, ElementName=Tabs}" Value=""/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Equipment.ShowAvailableEquipment, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="Stats" Property="IsEnabled" Value="True"/>
			</MultiDataTrigger>

			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.UIData.ActiveState, RelativeSource={RelativeSource Mode=Self}}" Value="LearnSpellsPanel">
				<Setter TargetName="LeftHints" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="RightHints" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding Layout}" Value="Right">
				<Setter TargetName="RightHints" Property="Style" Value="{StaticResource ButtonHint.Container.Left}"/>
				<Setter TargetName="RightHints" Property="Margin" Value="126,0,0,0" />
				<Setter TargetName="LeftHints" Property="Margin" Value="126,0,0,86"/>
				<Setter TargetName="Hints" Property="Margin" Value="0,0,130,0"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding Layout}" Value="Left">
				<Setter TargetName="LeftHints" Property="Style" Value="{StaticResource ButtonHint.Container.Right}"/>
				<Setter TargetName="RightHints" Property="Margin" Value="126,0,0,0" />
				<Setter TargetName="LeftHints" Property="Margin" Value="126,0,0,86"/>
				<Setter TargetName="Hints" Property="Margin" Value="130,0,0,0"/>
			</DataTrigger>

			<!-- INVENTORY TAB -->
			<!-- ====================================================================================================================================== -->
			<DataTrigger Binding="{Binding Tag, ElementName=TabContentPresenter}" Value="Inventory">
				<Setter TargetName="TabName" Property="Text" Value="{Binding Source='h283ce3cbg6733g4d4fgb15ag88eaac9d99fa', Converter={StaticResource TranslatedStringConverter}}"/>

				<Setter TargetName="InventoryContent" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Tag, ElementName=TabContentPresenter}" Value="Inventory"/>
					<Condition Binding="{Binding CurrentPlayer.SelectedCharacter.UsePartyInventory}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="TabName" Property="Text" Value="{Binding Source='h47336abdg25afg4ecagb8f1g7a8b2675373e', Converter={StaticResource TranslatedStringConverter}}"/>
			</MultiDataTrigger>

			<!-- CHARACTERISTICS TAB -->
			<!-- ====================================================================================================================================== -->
			<DataTrigger Binding="{Binding Tag, ElementName=TabContentPresenter}" Value="Features">
				<Setter TargetName="TabName" Property="Text" Value="{Binding Source='hffc72a17g6934g42f8ga935g447764ee6f43', Converter={StaticResource TranslatedStringConverter}}"/>
				<Setter TargetName="CharacteristicsContent" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<!-- SKILLS TAB -->
			<!-- ====================================================================================================================================== -->

			<DataTrigger Binding="{Binding Tag, ElementName=TabContentPresenter}" Value="Skills">
				<Setter TargetName="TabName" Property="Text" Value="{Binding Source='hbdc95889g6f3fg46efg9993g036cf077a0e7', Converter={StaticResource TranslatedStringConverter}}"/>
				<Setter TargetName="SkillsContent" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<!-- STATS TAB -->
			<!-- ====================================================================================================================================== -->
			<DataTrigger Binding="{Binding Tag, ElementName=TabContentPresenter}" Value="Extras">
				<Setter TargetName="TabName" Property="Text" Value="{Binding Source='h45ab4802ge771g44dagbd56ged6e7335fbc8', Converter={StaticResource TranslatedStringConverter}}"/>
				<Setter TargetName="StatsContent" Property="Visibility" Value="Visible"/>
			</DataTrigger>

			<!-- REACTIONS TAB -->
			<!-- ====================================================================================================================================== -->

			<DataTrigger Binding="{Binding Tag, ElementName=TabContentPresenter}" Value="Reactions">
				<Setter TargetName="TabName" Property="Text" Value="{Binding Source='h2fda2a98g24aeg4745ga96fg486c04590c4e', Converter={StaticResource TranslatedStringConverter}}"/>
				<Setter TargetName="TabSummary" Property="Text" Value="{Binding Source='h4683b44fg5f66g4001gbc80gbcb307102d8d', Converter={StaticResource TranslatedStringConverter}}"/>
				<Setter TargetName="TabSummary" Property="Visibility" Value="Visible"/>
				<Setter TargetName="ReactionsContent" Property="Visibility" Value="Visible"/>
				<Setter TargetName="TabContentPresenter" Property="Margin" Value="8,28,124,180"/>
			</DataTrigger>

			<!-- Split Screen -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Layout}" Value="Common"/>
					<Condition Binding="{Binding Data.AspectRatio, Converter={StaticResource GreaterThanConverter}, ConverterParameter={StaticResource SplitScreenRatio}}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="SubPanelsRoot" Property="Clip" Value="{x:Null}"/>
				<Setter TargetName="CharSheetPanelRoot" Property="Tag" Value="False"/>
			</MultiDataTrigger>
			<!-- Reposition Content for split screen -->
			<DataTrigger Binding="{Binding Path=Tag, ElementName=CharSheetPanelRoot}" Value="True">

				<Setter TargetName="TabContentPresenter" Property="Tag" Value="CoreStats"/>
				<Setter TargetName="Stats" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="Stats" Property="Grid.Column" Value="1"/>
				<Setter TargetName="Stats" Property="HorizontalAlignment" Value="Left"/>

				<Setter TargetName="BackgroundGradient" Property="Margin" Value="0,0,-1300,0"/>
				<Setter TargetName="Tabs" Property="Margin" Value="0,416,0,0"/>
				<Setter TargetName="Tabs" Property="Opacity" Value="1"/>
				<Setter TargetName="TabName" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="TabSummary" Property="MaxWidth" Value="880"/>
				<Setter TargetName="ColumnOne" Property="Width" Value="1080"/>
				<Setter TargetName="ColumnTwo" Property="Width" Value="*"/>
				<Setter TargetName="ColumnThree" Property="Width" Value="300"/>

				<Setter TargetName="LeftPadding" Property="Width" Value="40"/>

				<Setter TargetName="PaperDollGrid" Property="Margin" Value="100,-200,0,0" />

				<Setter TargetName="Equipment" Property="Width" Value="Auto" />
				<Setter TargetName="Equipment" Property="Grid.ColumnSpan" Value="3" />
				<Setter TargetName="Equipment" Property="Margin" Value="0,220,-150,0" />
				<Setter TargetName="Equipment" Property="HorizontalAlignment" Value="Right" />
				<Setter TargetName="Equipment" Property="Visibility" Value="Hidden"/>

				<Setter TargetName="InstrumentSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="HelmetSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="HelmetSlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="BreastSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="BreastSlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="AmuletSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="AmuletSlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="RingOneSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="RingOneSlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="RingTwoSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="RingTwoSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="GlovesSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="GlovesSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="BootsSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="BootsSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="CloakSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="CloakSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="UnderwearSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="UnderwearSlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="InstrumentSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="InstrumentSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="VanityBodySlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="VanityBodySlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="VanityBootsSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="VanityBootsSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="MeleeSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="MeleeSlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="MeleeOffhandSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="MeleeOffhandSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="RangedSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="RangedSlot" Property="ToolTipService.HorizontalOffset" Value="-8" />
				<Setter TargetName="RangedOffhandSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="RangedOffhandSlot" Property="ToolTipService.HorizontalOffset" Value="-120" />
				<Setter TargetName="LightSourceSlot" Property="ToolTipService.Placement" Value="Left" />
				<Setter TargetName="LightSourceSlot" Property="ToolTipService.HorizontalOffset" Value="-66" />
				<Setter TargetName="EquipmentFilter" Property="HorizontalAlignment" Value="Left" />
				<Setter TargetName="EquipmentFilter" Property="Margin" Value="-800,0,0,264" />



			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Tag, ElementName=CharSheetPanelRoot}" Value="True"/>
					<Condition Binding="{Binding Path=Metadata, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="{x:Null}"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="Equipment" Property="Opacity" Value="1"/>
				<Setter TargetName="Equipment" Property="IsEnabled" Value="True"/>
				<Setter TargetName="SubPanelsRoot" Property="Clip" Value="{x:Null}"/>
				<Setter TargetName="Equipment" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Tag, ElementName=CharSheetPanelRoot}" Value="True"/>
					<Condition Binding="{Binding Path=Metadata, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Equipment"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="Equipment" Property="Opacity" Value="1"/>
				<Setter TargetName="Equipment" Property="IsEnabled" Value="True"/>
				<Setter TargetName="SubPanelsRoot" Property="Clip" Value="{x:Null}"/>
				<Setter TargetName="Equipment" Property="Visibility" Value="Visible"/>
			</MultiDataTrigger>

			<DataTrigger Binding="{Binding CurrentPlayer.ShowCampCharacter, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
				<Setter TargetName="Equipment" Property="DataContext" Value="{Binding CurrentPlayer.ShowCampCharacter}"/>
				<Setter TargetName="PaperDoll" Property="EntityRef" Value="{Binding CurrentPlayer.ShowCampCharacter.EntityHandle}"/>
				<Setter TargetName="Stats" Property="DataContext" Value="{Binding CurrentPlayer.ShowCampCharacter}"/>

				<Setter TargetName="CharacteristicsContent" Property="Content" Value="{Binding CurrentPlayer.ShowCampCharacter}"/>
				<Setter TargetName="SkillsContent" Property="Content" Value="{Binding CurrentPlayer.ShowCampCharacter}"/>
				<Setter TargetName="StatsContent" Property="Content" Value="{Binding CurrentPlayer.ShowCampCharacter}"/>
				<Setter TargetName="ReactionsContent" Property="Content" Value="{Binding CurrentPlayer.ShowCampCharacter}"/>
			</DataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Tag, ElementName=CharSheetPanelRoot}" Value="True"/>
					<Condition Binding="{Binding Path=Tag, ElementName=TabContentPresenter}" Value="Inventory"/>
				</MultiDataTrigger.Conditions>

				<Setter TargetName="TabContentPresenter" Property="Margin" Value="8,78,60,180" />
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Tag, ElementName=CharSheetPanelRoot}" Value="False"/>
					<Condition Binding="{Binding Path=Metadata, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Interrupts"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="Tabs" Property="IsEnabled" Value="True"/>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=Tag, ElementName=CharSheetPanelRoot}" Value="True"/>
					<Condition Binding="{Binding Tag, ElementName=TabContentPresenter}" Value="CoreStats"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="Tabs" Property="Visibility" Value="Hidden"/>
				<Setter TargetName="Tabs" Property="IsEnabled" Value="True"/>
				<Setter TargetName="Stats" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Stats" Property="HorizontalAlignment" Value="Left"/>
				<Setter TargetName="Stats" Property="Margin" Value="120,180,0,0"/>
				<Setter TargetName="TabContentPresenter" Property="Visibility" Value="Collapsed"/>

				<Setter TargetName="AbilityStat0" Property="Tag" Value="{Binding ElementName=AbilityStat5}"/>
				<Setter TargetName="AbilityStat1" Property="Tag" Value="{Binding ElementName=AbilityStat5}"/>
				<Setter TargetName="AbilityStat2" Property="Tag" Value="{Binding ElementName=AbilityStat5}"/>
				<Setter TargetName="AbilityStat3" Property="Tag" Value="{Binding ElementName=AbilityStat5}"/>
				<Setter TargetName="AbilityStat4" Property="Tag" Value="{Binding ElementName=AbilityStat5}"/>
				<Setter TargetName="AbilityStat5" Property="Tag" Value="{Binding ElementName=AbilityStat5}"/>

				<Setter TargetName="MeleeTextTT" Property="ToolTipService.Placement" Value="Right" />
				<Setter TargetName="MeleeTextTT" Property="ToolTipService.HorizontalOffset" Value="40" />

				<Setter TargetName="MeleeTextOffHandTT" Property="ToolTipService.Placement" Value="Right" />
				<Setter TargetName="MeleeTextOffHandTT" Property="ToolTipService.HorizontalOffset" Value="40" />

				<Setter TargetName="RangedTextTT" Property="ToolTipService.Placement" Value="Right" />
				<Setter TargetName="RangedTextTT" Property="ToolTipService.HorizontalOffset" Value="40" />

				<Setter TargetName="RangedTextOffHandTT" Property="ToolTipService.Placement" Value="Right" />
				<Setter TargetName="RangedTextOffHandTT" Property="ToolTipService.HorizontalOffset" Value="40" />

			</MultiDataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>