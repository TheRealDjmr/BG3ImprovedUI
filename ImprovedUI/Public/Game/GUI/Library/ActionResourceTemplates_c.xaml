<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
					xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
					xmlns:System="clr-namespace:System;assembly=mscorlib"
					mc:Ignorable="d">

	<!-- MOD START - Custom action resource icons -->
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Library/IUI_ActionResourceTemplates_c.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	<!-- MOD END -->
	
	<ImageSource x:Key="resourceBarBG">/GustavNoesisGUI;component/Assets/ActionResources_c/c_resourceBar.png</ImageSource>

	<ImageSource x:Key="movementAvailable">/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_movement.png</ImageSource>
	<ImageSource x:Key="movementUsed">/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_movement_spent.png</ImageSource>

	<!-- MOD START - Moved to IUI files -->
	<!-- MOD END -->
	<Style x:Key="ResourceBar9Slice" TargetType="ls:LSNineSliceImage" BasedOn="{StaticResource {x:Type ls:LSNineSliceImage}}">
		<Setter Property="ImageSource" Value="{StaticResource resourceBarBG}" />
		<Setter Property="Slices" Value="100,50,100,50" />
		<Setter Property="Padding" Value="60,24,60,24" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IconWidth" Value="200" />
	</Style>
	<!-- MOD START - Moved to IUI files -->
	<!-- MOD END -->

	<Style x:Key="ResourcesCollectionStyle" TargetType="ItemsControl">
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="ContentPresenter">
					<Setter Property="Margin" Value="-4,0"/>
				</Style>
			</Setter.Value>
		</Setter>
		<!-- MOD START - Apply custom action resource template -->
		<Setter Property="ItemTemplate" Value="{StaticResource IUI_ControllerActionResourcesTemplate}"/>
		<!-- MOD END -->
	</Style>

	<ControlTemplate x:Key="ActionResourcesTemplate">

		<Grid x:Name="ResourceContainer" HorizontalAlignment="Stretch">
			<b:Interaction.Behaviors>
				<ls:CollectionFilterBehavior x:Name="BasicFilter" ItemsSource="{Binding }" Predicate="{Binding DataContext.Data.ActionResourceBasicPredicate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
				<ls:CollectionFilterBehavior x:Name="SpecialFilter" ItemsSource="{Binding }" Predicate="{Binding DataContext.Data.ActionResourceSpecialPredicate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
				<ls:CollectionFilterBehavior x:Name="SpellSlotFilter" ItemsSource="{Binding }" Predicate="{Binding DataContext.Data.ActionResourceSpellSlotPredicate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
			</b:Interaction.Behaviors>

			<ls:AlignableWrapPanel x:Name="resourceBarWrapPanel" HorizontalAlignment="Center" VerticalAlignment="Top" HorizontalContentAlignment="Center" MinWidth="700">
				<ItemsControl Name="BasicResources"
									   ItemsSource="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems, ElementName=ResourceContainer, Mode=OneWay}"
									   Style="{StaticResource ResourcesCollectionStyle}" AlternationCount="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems.Count, ElementName=ResourceContainer}"
									   ls:AttachedProperties.InheritedNumber="1" Margin="0,-6,0,-6">
					<ItemsControl.Resources>
						<System:Double x:Key="ActionPointSize">80</System:Double>
					</ItemsControl.Resources>
				</ItemsControl>
				<ContentControl Name="MovementResources">
					<StackPanel Orientation="Horizontal" Margin="0,0,12,0">
						<TextBlock x:Name="MovementLabel" Text="{Binding Source='ha9fe36bfg692ag4f8bg8d9eg379bbbf04c87',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource ResourceBarLabelStyle}"/>
						<Grid>
							<Rectangle x:Name="MovementResourceBackground" HorizontalAlignment="Stretch" Height="72" Fill="{StaticResource ActionResource.MovementBG}" RadiusX="36" RadiusY="36" Opacity="1"/>
							<Rectangle x:Name="MovementResourceBackgroundStroke" HorizontalAlignment="Stretch" Height="72" Fill="Transparent" RadiusX="36" RadiusY="36" Stroke="{StaticResource ActionResource.Movement}" StrokeThickness="4" Opacity="0.2" />
							<StackPanel Orientation="Horizontal" >
								<Image x:Name="MovementIcon" HorizontalAlignment="Center" Margin="14,0,10,0" Source="{StaticResource movementAvailable}" />
								<TextBlock x:Name="MovementAmount" MinWidth="102" TextAlignment="Left" Text="{Binding DataContext.CurrentPlayer.UIData.MovementResourceCostPreview.ValueAfterUse, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource UnitConverter}, ConverterParameter='Distance preservezeros N1'}" Style="{StaticResource ActionResourceAmountStyle}" />
							</StackPanel>
						</Grid>
					</StackPanel>
				</ContentControl>
				<ItemsControl Name="SpellSlotResources" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems, ElementName=ResourceContainer, Mode=OneWay}" Style="{StaticResource ResourcesCollectionStyle}" AlternationCount="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer}" ls:AttachedProperties.InheritedNumber="-1">
					<ItemsControl.Resources>
						<System:Double x:Key="ActionPointSize">80</System:Double>
					</ItemsControl.Resources>
				</ItemsControl>
				<ItemsControl Name="SpecialResources" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems, ElementName=ResourceContainer, Mode=OneWay}" Style="{StaticResource ResourcesCollectionStyle}" AlternationCount="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer}" ls:AttachedProperties.InheritedNumber="-1">
					<ItemsControl.Resources>
						<System:Double x:Key="ActionPointSize">80</System:Double>
					</ItemsControl.Resources>
				</ItemsControl>
			</ls:AlignableWrapPanel>
		</Grid>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.MovementResource.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter='9.9'}" Value="True" >
				<Setter TargetName="MovementAmount" Property="MinWidth" Value="120" />
			</DataTrigger>
			
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.MovementResource.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource LessThanConverter}, ConverterParameter='9.9'}" Value="True" >
				<Setter TargetName="MovementAmount" Property="MinWidth" Value="102" />
			</DataTrigger>

			<!-- Hide Movement Label At Level 5-->
			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=4}" Value="True">
				<Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>

			<!-- Hide Movement Label At Level 3 for split screen-->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Left"/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right"/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

		 
			<DataTrigger Binding="{Binding DataContext.Data.AspectRatio, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0.7}" Value="True">
				<Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
			</DataTrigger>
			
			<DataTrigger Binding="{Binding ActualHeight, ElementName=resourceBarWrapPanel, Converter={StaticResource GreaterThanConverter}, ConverterParameter=140}" Value="True">
				<Setter TargetName="BasicResources" Property="Margin" Value="0,-6,0,-6"/>
				<Setter TargetName="MovementResources" Property="Margin" Value="0,-6,0,-6"/>
				<Setter TargetName="SpellSlotResources" Property="Margin" Value="0,-6,0,-6"/>
				<Setter TargetName="SpecialResources" Property="Margin" Value="0,-6,0,-6"/>
			</DataTrigger>

			<DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.MovementResource.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="0">
				<Setter TargetName="MovementLabel" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
				<Setter TargetName="MovementResourceBackground" Property="Fill" Value="{StaticResource  ActionResource.MovementBG}"/>
				<Setter TargetName="MovementResourceBackgroundStroke" Property="Stroke" Value="#444444"/>
				<Setter TargetName="MovementResourceBackgroundStroke" Property="Opacity" Value="0.8"/>
				<Setter TargetName="MovementAmount" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
				<Setter TargetName="MovementIcon" Property="Source" Value="{StaticResource movementUsed}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer}" Value="0">
				<Setter TargetName="SpecialResources" Property="Margin" Value="0"/>
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer}" Value="0"/>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer}" Value="0"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="BasicResources" Property="Margin" Value="0"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.InTurnBasedMode, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="False"/>
					<Condition Binding="{Binding DataContext.CurrentPlayer.UIData.ActiveTask.RootCastSpell, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<Setter TargetName="BasicResources" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="MovementResources" Property="Visibility" Value="Collapsed"/>
			</MultiDataTrigger>

			<!-- We need to detect the first and the last elements in the container, so we're checking it here by checking Count properties and passing it deeper through this inherited property -->
			<!-- Values: -1 (none) / 0 (only first) / 1 (first and last) / 2 (only last) -->
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="SpecialResources" Property="ls:AttachedProperties.InheritedNumber" Value="1"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="SpellSlotResources" Property="ls:AttachedProperties.InheritedNumber" Value="1"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
					<Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter TargetName="SpecialResources" Property="ls:AttachedProperties.InheritedNumber" Value="0"/>
					<Setter TargetName="SpellSlotResources" Property="ls:AttachedProperties.InheritedNumber" Value="2"/>
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
</ResourceDictionary>