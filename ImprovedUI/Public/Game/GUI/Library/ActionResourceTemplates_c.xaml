
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
					mc:Ignorable="d">

    <ImageSource x:Key="resourceBarBG">/GustavNoesisGUI;component/Assets/ActionResources_c/c_resourceBar.png</ImageSource>

    <ImageSource x:Key="movementHighlight">/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_movement_h.png</ImageSource>
    <ImageSource x:Key="movementAvailable">/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_movement.png</ImageSource>
    <ImageSource x:Key="movementUsed">/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_movement_spent.png</ImageSource>
    <ImageSource x:Key="movementMissing">/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_movement_unavailable.png</ImageSource>

    <Style x:Key="ResourceBarLabelStyle">
        <Setter Property="TextBlock.FontWeight" Value="DemiBold" />
        <Setter Property="TextBlock.FontSize" Value="{StaticResource ScaledMediumFontSize}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource LS_accent75TxtColor}" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.Margin" Value="28,0,14,0" />
    </Style>
    <Style x:Key="ActionResourceAmountStyle">
        <Setter Property="TextBlock.FontWeight" Value="Bold" />
        <Setter Property="TextBlock.FontSize" Value="{StaticResource ScaledLargeFontSize}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource LS_accent100TxtColor}" />
        <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.Margin" Value="0,-3,0,3" />
    </Style>
    <Style x:Key="ResourceBar9Slice" TargetType="ls:LSNineSliceImage" BasedOn="{StaticResource {x:Type ls:LSNineSliceImage}}">
        <Setter Property="ImageSource" Value="{StaticResource resourceBarBG}" />
        <Setter Property="Slices" Value="100,50,100,50" />
        <Setter Property="Padding" Value="60,24,60,24" />
        <Setter Property="Focusable" Value="False" />
    </Style>

    <Storyboard x:Key="ResourceSelectedAnimation" RepeatBehavior="Forever">
        <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                        Storyboard.TargetName="ResourceLabel"
                        To="White"
                        AutoReverse="True"
                        Duration="0:0:0.4"/>
    </Storyboard>

    <Storyboard x:Key="ResourceSelectedBGAnimation" RepeatBehavior="Forever" AutoReverse="True">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Rectangle.Opacity)" Storyboard.TargetName="ActionResourceBackgroundStrokeHighlight">
            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.4">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseInOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.8">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseInOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>


    <Style x:Key="ResourcesCollectionStyle" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Margin" Value="-4,0"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="ls:VMActionResourceCostPreview">
                    <Border x:Name="Container" ls:MoveFocus.Focusable="True" Focusable="True" ToolTipService.Placement="Top" ToolTip="{StaticResource ManagedTooltip}" HorizontalAlignment="Center" VerticalAlignment="Center" MinHeight="90" BorderThickness="2" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:Name="SpellSlotLabel" Effect="{StaticResource ShadowEffect}" Visibility="Collapsed" Style="{StaticResource ResourceBarLabelStyle}" />
                            <TextBlock x:Name="ResourceLabel" Effect="{StaticResource ShadowEffect}" Text="{Binding ActionResource.Name}" Style="{StaticResource ResourceBarLabelStyle}"/>
                            <Grid Margin="0,0,12,0">
                                <Rectangle HorizontalAlignment="Stretch" Height="72" Fill="#99151515" RadiusX="36" RadiusY="36" Opacity="0.4">
                                </Rectangle>
                                <Rectangle x:Name="ActionResourceBackground" HorizontalAlignment="Stretch" Height="72" Fill="#99CCCCFF" RadiusX="36" RadiusY="36" Opacity="0.3">
                                </Rectangle>
                                <Rectangle x:Name="ActionResourceBackgroundStroke" HorizontalAlignment="Stretch" Height="72" Fill="Transparent" RadiusX="36" RadiusY="36" Stroke="Transparent" StrokeThickness="4" Opacity="0.2" >
                                </Rectangle>
                                <Rectangle x:Name="ActionResourceBackgroundStrokeHighlight" HorizontalAlignment="Stretch" Height="72" Fill="Transparent" RadiusX="36" RadiusY="36" Stroke="{StaticResource LS_selectedTextPad}" StrokeThickness="4" Opacity="0" >
                                </Rectangle>
                                <StackPanel x:Name="ResourcePointsStack" Orientation="Horizontal" Margin="16,0,0,0">
                                    <Image x:Name="LevelImage" Visibility="Collapsed" HorizontalAlignment="Center" Margin="0,0,0,0"/>
                                    <ls:LSActionPointResources x:Name="ResourcePoints"
                                                       Background="Transparent"
                                                       HorizontalAlignment="Center"
                                                       MaxActionPoints="{Binding MaxValue}"
                                                       AvailableActionPoints="{Binding Value}"
                                                       HighlightedActionPoints="{Binding DataContext.Cost, ElementName=Container}"
                                                       Style="{StaticResource ActionResourcesTemplateSelector}" 
                                                       DataContext="{Binding ActionResource}"
                                                       MaxActionPointGroups="0"
                                                       ActionPointGroupSize="-1"
                                                       SmallActionPointSize="{DynamicResource ActionPointSize}"
                                                       ActionPointSize="{DynamicResource ActionPointSize}"
                                                       MaxGroupActionPoints="99"
                                                       Margin="-24,0,0,0"/>
                                    <TextBlock x:Name="ResourceAmount" Effect="{StaticResource ShadowEffect}" Margin="8,-2,6,2" Text="{Binding ActionResource.Value}" Style="{StaticResource ActionResourceAmountStyle}" Visibility="Collapsed" />
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding ActionResource.Level}" Value="1">
                            <Setter TargetName="SpellSlotLabel" Property="Text" Value="{Binding Source='hbdeb8e2fg50e9g424fgbe6dg248268275452',Converter={StaticResource TranslatedStringConverter}}"/>
                            <Setter TargetName="SpellSlotLabel" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.MaxValue}" Value="1">
                            <Setter TargetName="ResourcePointsStack" Property="Margin" Value="16,0,30,0"/>
                        </DataTrigger>

                        <!-- Hide Resource Bar Labels At Level 5-->
                        <DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=4}" Value="True">
                            <Setter TargetName="SpellSlotLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ResourceLabel" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>


                        <DataTrigger Binding="{Binding DataContext.Cost, ElementName=Container, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">

                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="ResourceHoverAnim" Storyboard="{StaticResource ResourceSelectedAnimation}" Storyboard.TargetName="ResourceLabel"/>
                                <BeginStoryboard x:Name="ResourceHoverBGAnim" Storyboard="{StaticResource ResourceSelectedBGAnimation}" Storyboard.TargetName="ActionResourceBackgroundStroke"/>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="ResourceHoverAnim"/>
                                <StopStoryboard BeginStoryboardName="ResourceHoverBGAnim"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="SpellSlot">
                            <Setter TargetName="ResourceLabel" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <!-- Hide Movement Label At Level 3 for split screen-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Left"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="ResourceLabel" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="SpellSlotLabel" Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right"/>
                                <Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="ResourceLabel" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="SpellSlotLabel" Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding DataContext.Data.AspectRatio, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0.7}" Value="True">
                            <Setter TargetName="ResourceLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="SpellSlotLabel" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=Container}" Value="True">
                            <Setter TargetName="Container" Property="BorderBrush" Value="{StaticResource LS_tint100}"/>
                            <Setter TargetName="ResourceLabel" Property="TextBlock.Foreground" Value="{StaticResource LS_selectedTextPad}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="ActionPoint">
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-32"/>
                            <Setter TargetName="ResourcePointsStack" Property="Margin" Value="22,0,22,0"/>
                            <Setter TargetName="ResourceAmount" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionPoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionPoint}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="BonusActionPoint">
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-32"/>
                            <Setter TargetName="ResourcePointsStack" Property="Margin" Value="22,0,22,0"/>
                            <Setter TargetName="ResourceAmount" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource BonusActionPoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource BonusActionPoint}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="SpellSlot">
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="LevelImage" Property="Margin" Value="6,0,6,0"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.SpellSlot}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.SpellSlot}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="SorceryPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_sorc.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.SorceryPoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.SorceryPoint}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h2b304762g10e7g4f6cg96c4g1432137ef83e', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="KiPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_ki.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.KiPoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.KiPoint}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h65345978g6d61g4572g87e0ga850a81ca9bc', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="LayOnHandsCharge">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_LayOnHands.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.LayOnHands}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.LayOnHands}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h4afff1a2g3fd3g42a0g9584g4e4956b3e46d', Converter={StaticResource TranslatedStringConverter}}"/>
                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="RitualPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_rituals_d.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.RitualPoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.RitualPoint}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h5615f8c3gb113g45dagada6gaf1794083c92', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="NaturalRecoveryPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_NaturalRecovery.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.NaturalRecovery}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.NaturalRecovery}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h17002d15gd024g41f7ga17bg49b42c867b42', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="WildShape">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_wildshape.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.WildShape}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.WildShape}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='hde7c0e66g9526g4e3bgb10cg1f7f82300b96', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="TidesOfChaos">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_tidesOfChaos.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.TidesOfChaos}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.TidesOfChaos}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h1fbdf74dge1fdg4835g86d7gac64fc3a18b3', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="ArcaneRecoveryPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Margin" Value="-10,0,-6,0"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_arcaneRecovery.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.ArcaneRecovery}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.ArcaneRecovery}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h7d59230fg2bf7g436dgb436g08e0b4e9234e', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="SuperiorityDie">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_res_superiorityDice.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.SuperiorityDie}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.SuperiorityDie}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="ChannelOath">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_channelOath.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.ChannelOath}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.ChannelOath}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h2da99030g63cbg4d3egb77bg91a0985eee6d', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="ChannelDivinity">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_channelDivinity.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.ChannelDivinity}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.ChannelDivinity}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="BardicInspiration">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_inspiration.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.InspirationPoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.InspirationPoint}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="Rage">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_rage.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.RagePoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.RagePoint}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h509b8e00gacb9g4eafgb41dgc56656969a2b', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="WarPriestActionPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_warPriest.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.WarPriest}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.WarPriest}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='hcf90a672g10deg4b3egad4fg9094c6ac6224', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="PsiPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/ico_classRes_psi.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.PsiPoint}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.PsiPoint}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h76127eebgb8a8g47eegb88fg5a492c3ef51f', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="BladesongCharge">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/ico_classRes_bladesong.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.BladesongCharge}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.BladesongCharge}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='hee205f06gca41g4dedg89cdg8bfb80bbd016', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <!-- Add a plural to the name if there is more than one Extra Attack -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActionResource.TypeId}" Value="WarPriestActionPoint"/>
                                <Condition Binding="{Binding ActionResource.MaxValue, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h25d1fb0cg356dg49e4gb43bg597ee721f740', Converter={StaticResource TranslatedStringConverter}}"/>
                        </MultiDataTrigger>
                        
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="FungalInfestationCharge">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_classRes_FungalInfestationCharge.png"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource ActionResource.FungalInfestation}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource ActionResource.FungalInfestation}"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='h8de4539cgd476g4fb8gacf6g2b527fae71b5', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="LuckPoint">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="{StaticResource LuckPoint}"/>
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='heb90a9a3ga125g4a66gbcbcga3bb72dfe17a', Converter={StaticResource TranslatedStringConverter}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.TypeId}" Value="WarlockSpellSlot">
                            <Setter TargetName="ResourcePoints" Property="ActionPointInBetweenMargin" Value="-56"/>
                            <Setter TargetName="SpellSlotLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ResourceLabel" Property="Text" Value="{Binding Source='hbdeb8e2fg50e9g424fgbe6dg248268275452',Converter={StaticResource TranslatedStringConverter}}"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="{StaticResource Sorcerer.Metamagic}"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="{StaticResource Sorcerer.Metamagic}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ActionResource.Level}" Value="1">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_spellLevel_1.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.Level}" Value="2">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_spellLevel_2.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.Level}" Value="3">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_spellLevel_3.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.Level}" Value="4">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_spellLevel_4.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.Level}" Value="5">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_spellLevel_5.png"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.Level}" Value="6">
                            <Setter TargetName="LevelImage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="LevelImage" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/ActionResources_c/Icons/c_ico_spellLevel_6.png"/>
                        </DataTrigger>

                        <!-- Unavailable Resources State-->
                        <DataTrigger Binding="{Binding ActionResource.Value}" Value="0">
                            <Setter TargetName="ResourceLabel" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="#444444"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="#444444"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Opacity" Value="0.8"/>
                            <Setter TargetName="ActionResourceBackground" Property="Opacity" Value="0.4"/>
                            <Setter TargetName="ResourceAmount" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActionResource.Value}" Value="0">
                            <Setter TargetName="ResourceLabel" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                            <Setter TargetName="ActionResourceBackground" Property="Fill" Value="#444444"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Stroke" Value="#444444"/>
                            <Setter TargetName="ActionResourceBackgroundStroke" Property="Opacity" Value="0.8"/>
                            <Setter TargetName="ActionResourceBackground" Property="Opacity" Value="0.4"/>
                            <Setter TargetName="ResourceAmount" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ActionResourcesTemplate">

        <Grid x:Name="ResourceContainer" HorizontalAlignment="Stretch">
            <b:Interaction.Behaviors>
                <ls:CollectionFilterBehavior x:Name="BasicFilter" ItemsSource="{Binding }" Predicate="{Binding DataContext.Data.ActionResourceBasicPredicate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="SpecialFilter" ItemsSource="{Binding }" Predicate="{Binding DataContext.Data.ActionResourceSpecialPredicate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
                <ls:CollectionFilterBehavior x:Name="SpellSlotFilter" ItemsSource="{Binding }" Predicate="{Binding DataContext.Data.ActionResourceSpellSlotPredicate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}"/>
            </b:Interaction.Behaviors>

            <ls:AlignableWrapPanel x:Name="resourceBarWrapPanel" HorizontalAlignment="Center" VerticalAlignment="Top" HorizontalContentAlignment="Center">
                <ItemsControl Name="BasicResources"
                                       ItemsSource="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems, ElementName=ResourceContainer, Mode=OneWay}"
                                       Style="{StaticResource ResourcesCollectionStyle}" AlternationCount="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems.Count, ElementName=ResourceContainer}"
                                       ls:AttachedProperties.InheritedNumber="1" Margin="0,-6,0,-6">
                    <ItemsControl.Resources>
                        <System:Double x:Key="ActionPointSize">80</System:Double>
                    </ItemsControl.Resources>
                </ItemsControl>
                <ContentControl Name="MovementResources">
                    <StackPanel Orientation="Horizontal" Margin="0,0,12,0">
                        <TextBlock x:Name="MovementLabel" Text="{Binding Source='ha9fe36bfg692ag4f8bg8d9eg379bbbf04c87',Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource ResourceBarLabelStyle}"/>
                        <Grid>
                            <Rectangle x:Name="MovementResourceBackground" HorizontalAlignment="Stretch" Height="72" Fill="{StaticResource ActionResource.Movement}" RadiusX="36" RadiusY="36" Opacity="0.3"/>
                            <Rectangle x:Name="MovementResourceBackgroundStroke" HorizontalAlignment="Stretch" Height="72" Fill="Transparent" RadiusX="36" RadiusY="36" Stroke="{StaticResource ActionResource.Movement}" StrokeThickness="4" Opacity="0.2" />
                            <StackPanel Orientation="Horizontal" >
                                <Image x:Name="MovementIcon" HorizontalAlignment="Center" Margin="12,0,0,0" Source="{StaticResource movementAvailable}" />
                                <TextBlock x:Name="MovementAmount" MinWidth="96" TextAlignment="Center" Text="{Binding DataContext.CurrentPlayer.UIData.MovementResourceCostPreview.ValueAfterUse, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource UnitConverter}, ConverterParameter='Distance preservezeros N1'}" Style="{StaticResource ActionResourceAmountStyle}" />
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </ContentControl>
                <ItemsControl Name="SpellSlotResources" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems, ElementName=ResourceContainer, Mode=OneWay}" Style="{StaticResource ResourcesCollectionStyle}" AlternationCount="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer}" ls:AttachedProperties.InheritedNumber="-1">
                    <ItemsControl.Resources>
                        <System:Double x:Key="ActionPointSize">80</System:Double>
                    </ItemsControl.Resources>
                </ItemsControl>
                <ItemsControl Name="SpecialResources" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems, ElementName=ResourceContainer, Mode=OneWay}" Style="{StaticResource ResourcesCollectionStyle}" AlternationCount="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer}" ls:AttachedProperties.InheritedNumber="-1">
                    <ItemsControl.Resources>
                        <System:Double x:Key="ActionPointSize">80</System:Double>
                    </ItemsControl.Resources>
                </ItemsControl>
            </ls:AlignableWrapPanel>
        </Grid>
        <ControlTemplate.Triggers>
            
            <!-- Hide Movement Label At Level 5-->
            <DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=4}" Value="True">
                <Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <!-- Hide Movement Label At Level 3 for split screen-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Left"/>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right"/>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.Level.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

         
            <DataTrigger Binding="{Binding DataContext.Data.AspectRatio, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0.7}" Value="True">
                <Setter TargetName="MovementLabel" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding ActualHeight, ElementName=resourceBarWrapPanel, Converter={StaticResource GreaterThanConverter}, ConverterParameter=140}" Value="True">
                <Setter TargetName="BasicResources" Property="Margin" Value="0,-6,0,-6"/>
                <Setter TargetName="MovementResources" Property="Margin" Value="0,-6,0,-6"/>
                <Setter TargetName="SpellSlotResources" Property="Margin" Value="0,-6,0,-6"/>
                <Setter TargetName="SpecialResources" Property="Margin" Value="0,-6,0,-6"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.Stats.MovementResource.Value, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="0">
                <Setter TargetName="MovementLabel" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                <Setter TargetName="MovementResourceBackground" Property="Fill" Value="#444444"/>
                <Setter TargetName="MovementResourceBackgroundStroke" Property="Stroke" Value="#444444"/>
                <Setter TargetName="MovementResourceBackgroundStroke" Property="Opacity" Value="0.8"/>
                <Setter TargetName="MovementResourceBackground" Property="Opacity" Value="0.4"/>
                <Setter TargetName="MovementAmount" Property="TextBlock.Foreground" Value="{StaticResource LS_accent00TxtColor}"/>
                <Setter TargetName="MovementIcon" Property="Source" Value="{StaticResource movementUsed}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer}" Value="0">
                <Setter TargetName="SpecialResources" Property="Margin" Value="0"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer}" Value="0"/>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="BasicResources" Property="Margin" Value="0"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.InTurnBasedMode, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="False"/>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.ActiveTask.RootCastSpell, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource NullToBoolFalseConverter}, FallbackValue=False}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BasicResources" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="MovementResources" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>

            <!-- We need to detect the first and the last elements in the container, so we're checking it here by checking Count properties and passing it deeper through this inherited property -->
            <!-- Values: -1 (none) / 0 (only first) / 1 (first and last) / 2 (only last) -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SpecialResources" Property="ls:AttachedProperties.InheritedNumber" Value="1"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="False"/>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SpellSlotResources" Property="ls:AttachedProperties.InheritedNumber" Value="1"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=ResourceContainer, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="SpecialResources" Property="ls:AttachedProperties.InheritedNumber" Value="0"/>
                    <Setter TargetName="SpellSlotResources" Property="ls:AttachedProperties.InheritedNumber" Value="2"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>