<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"

                    xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
                    xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
					mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DataTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <System:String x:Key="FallBackIconPath">Assets/ControllerUIIcons/Item_Unknown.png</System:String>

    <System:Single x:Key="LevelUpArrowAnimationFrameSmallSize">72</System:Single>
    <System:Single x:Key="LevelUpArrowAnimationFrameBigSize">90</System:Single>

    <System:Double x:Key="CharacterPanelWidth">450</System:Double>
    <System:Double x:Key="ActionResources.ActionPointGroupSize">56</System:Double>
    <System:Double x:Key="ActionResources.ActionPointSize">48</System:Double>
    <System:Double x:Key="ActionResources.ActionPointSmallSize">24</System:Double>

    <ControlTemplate x:Key="ActionResources.ActionGroup.DefaultActionPointGroup">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ap_active.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ap_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ap_used.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ap_used.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.BonusActionPointGroup">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/bap_active.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/bap_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/bap_used.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/bap_used.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.ReactionActionPointGroup">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/rp_active.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/rp_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/rp_used.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/rp_used.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.SorceryPointGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_sorc_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>
	
	<!-- MOD START - Custom action resources -->
	<ControlTemplate x:Key="ActionResources.ActionGroup.SneakAttackDieGroup" TargetType="ls:LSActionPoint">
		<ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_sneakAttack_spent.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentControl ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.PsiPointGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_psi_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.HitDiceGroup" TargetType="ls:LSActionPoint">
		<ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_hitdice_spent.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentControl ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.RampageDieGroup" TargetType="ls:LSActionPoint">
		<ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rampagedie_spent.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentControl ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>
	
	<ControlTemplate x:Key="ActionResources.ActionGroup.NecroThaumGroup" TargetType="ls:LSActionPoint">
		<ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Hover.dds</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Icon.dds</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/Resource_Thaumaturgy_Used.dds</ImageSource>
        </ControlTemplate.Resources>
        <ContentControl ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.InfusionSlotGroup" TargetType="ls:LSActionPoint">
		<ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_infusion_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_infusion_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_infusion_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_infusion_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentControl ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.ExperimentalElixirsGroup" TargetType="ls:LSActionPoint">
		<ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_elixir_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_elixir_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_elixir_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_elixir_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentControl ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.BladesongChargeGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_bladesong_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_bladesong_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_bladesong_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_bladesong_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>
	<!-- MOD END -->

    <ControlTemplate x:Key="ActionResources.ActionGroup.KiActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_ki_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.LayOnHandsChargeActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_LayOnHands_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_LayOnHands.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_LayOnHands_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_LayOnHands_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.RageActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rage_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.DivinityActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelDivinity_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.OathActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelOath_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelOath.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelOath_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_channelOath_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.SuperiorityDieActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_res_superiorityDice_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.ArcaneRecoveryActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_arcaneRecovery_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.InspirationActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_inspiration_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.SpellSlot" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.WarlockSpellSlot" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_mini_spellSlot_warlock_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.RitualPointActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_rituals_spent.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.NaturalRecoveryPointActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_NaturalRecovery_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.WildShapeActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_wildshape_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.TidesOfChaosActionGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_d.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_tidesOfChaos_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.WarPriestActionPointGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_warPriest_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_warPriest.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_warPriest_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_warPriest_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.FungalInfestationChargeGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_FungalInfestationCharge_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_FungalInfestationCharge.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_FungalInfestationCharge_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_FungalInfestationCharge_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ActionResources.ActionGroup.LuckPointGroup" TargetType="ls:LSActionPoint">
        <ControlTemplate.Resources>
            <ImageSource x:Key="Highlight">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_luck_h.png</ImageSource>
            <ImageSource x:Key="Available">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_luck.png</ImageSource>
            <ImageSource x:Key="Used">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_luck_spent.png</ImageSource>
            <ImageSource x:Key="Missing">/GustavNoesisGUI;component/Assets/Shared/Resources/ico_classRes_luck_missing.png</ImageSource>
        </ControlTemplate.Resources>
        <ContentPresenter ContentTemplate="{StaticResource ActionResources.ActionGroup.ActionPoint}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="DefaultProgressBar" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot" MinHeight="{TemplateBinding MinHeight}">
            <Border x:Name="PART_Track" Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1"/>
            <Grid x:Name="PART_Indicator" HorizontalAlignment="Left">
                <Border x:Name="IndicatorBorder" Margin="{TemplateBinding Padding}" Background="{TemplateBinding Foreground}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <LinearGradientBrush x:Key="LS_PortraitHealthBarColor" StartPoint="1,0.5" EndPoint="0,0.5" Opacity="1">
        <GradientStop Color="{StaticResource HBCol1}" Offset="0"/>
        <GradientStop Color="{StaticResource HBCol2}" Offset="0.2"/>
        <GradientStop Color="{StaticResource HBCol3}" Offset="1.0"/>
    </LinearGradientBrush>

    <Style x:Key="CharacterPortraitBarStyle" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource LS_PortraitHealthBarColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Value" Value="{Binding Stats.Health.PercentValue, Mode=OneWay, Converter={StaticResource InvertPercConverter}}"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="1"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Stats.IsAlive}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource LS_PortraitDeadRadialColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Path" x:Key="ArcFrameGlow">
        <Setter Property="Width" Value="860"/>
        <Setter Property="Height" Value="1776"/>
        <Setter Property="StrokeThickness" Value="4"/>

        <Setter Property="Data">
            <Setter.Value>
                <Geometry >M37,51 H303    A 260,300 0 0 1 556,51    H826 L852,78 V1742 L826,1770 H36 L8,1742 V78 Z</Geometry>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CharacterPanelGold">
        <Grid Width="{TemplateBinding Width}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock Text="{Binding ., StringFormat={}{0:N0}}" Margin="0,6,4,0" Foreground="{TemplateBinding Foreground}" FontSize="{StaticResource MediumFontSize}" FontWeight="Bold"/>
                <Image Stretch="None" Source="{StaticResource GoldIconImg}" />
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <!-- Arched Vacant Slot -->
    <ResourceDictionary x:Key="ArchedVacantSlot">
        <ControlTemplate x:Key="VacantSlot">
            <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="18,0,12,0">
                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Equipment/characterArch_vacant.png" Stretch="None"/>

                <Path x:Name="SBPFrameStroke" Style="{DynamicResource ArcFrameGlow}"  VerticalAlignment="Top">
                    <Path.Stroke>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                            <GradientStop Color="{StaticResource PanelGlowAnimColour}" Offset="{DynamicResource SBPGlowAnimVal1a}"/>
                            <GradientStop Color="{StaticResource PanelGlowAnimColourC}" Offset="{DynamicResource SBPGlowAnimVal2a}"/>
                            <GradientStop Color="{StaticResource PanelGlowAnimColour}" Offset="{DynamicResource SBPGlowAnimVal3a}"/>
                        </LinearGradientBrush>
                    </Path.Stroke>
                </Path>
                <b:Interaction.Triggers>
                    <b:TimerTrigger  x:Name="TimeTrigger" EventName="Loaded" MillisecondsPerTick="{Binding Path=Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, Converter={StaticResource MultiplierConverter}, ConverterParameter=300}" TotalTicks="1">
                        <b:ControlStoryboardAction Storyboard="{StaticResource SingleBasicPanelGlowAnim}"/>
                    </b:TimerTrigger>
                </b:Interaction.Triggers>
            </Grid>
        </ControlTemplate>
    </ResourceDictionary>

    <Style x:Key="VacantSlotStyle" TargetType="{x:Type Control}">
        <Setter Property="Template" Value="{DynamicResource VacantSlot}"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Margin" Value="0,0,24,0"/>
    </Style>
    
    <ControlTemplate x:Key="VacantSlots">
        <StackPanel Orientation="Horizontal">
            <Control x:Name="Slot1" Style="{StaticResource VacantSlotStyle}"/>
            <Control x:Name="Slot2" Style="{StaticResource VacantSlotStyle}"/>
            <Control x:Name="Slot3" Style="{StaticResource VacantSlotStyle}"/>
            <Control x:Name="Slot4" Style="{StaticResource VacantSlotStyle}"/>
            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <BeginStoryboard.Storyboard>
                            <Storyboard TargetName="Slot1">
                                <Storyboard.Children>
                                    <Storyboard Children="{StaticResource TCResetAnimInCharacterSlot}"  />
                                    <Storyboard Children="{StaticResource TCAnimInCharacterSlot}"  />
                                </Storyboard.Children>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <BeginStoryboard.Storyboard>
                            <Storyboard TargetName="Slot2">
                                <Storyboard.Children>
                                    <Storyboard BeginTime="0:0:0.1" Children="{StaticResource TCAnimInCharacterSlot}"  />
                                </Storyboard.Children>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <BeginStoryboard.Storyboard>
                            <Storyboard TargetName="Slot3">
                                <Storyboard.Children>
                                    <Storyboard BeginTime="0:0:0.2" Children="{StaticResource TCAnimInCharacterSlot}"  />
                                </Storyboard.Children>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>

                    <BeginStoryboard>
                        <BeginStoryboard.Storyboard>
                            <Storyboard TargetName="Slot4">
                                <Storyboard.Children>
                                    <Storyboard BeginTime="0:0:0.3" Children="{StaticResource TCAnimInCharacterSlot}"  />
                                </Storyboard.Children>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>

                </EventTrigger>
            </StackPanel.Triggers>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Count}" Value="0">
                <Setter TargetName="Slot1" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Slot2" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Slot3" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Slot4" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Count}" Value="1">
                <Setter TargetName="Slot2" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Slot3" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Slot4" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Count}" Value="2">
                <Setter TargetName="Slot3" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Slot4" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Count}" Value="3">
                <Setter TargetName="Slot4" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <DataTemplate x:Key="PartyVacantSlots">
        <Control Template="{StaticResource VacantSlots}" DataContext="{Binding CurrentPlayer.AssignedCharacters}"/>
    </DataTemplate>

    <Style x:Key="AvatarCrownImageStyle" TargetType="Image">
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/avatar_crown.png"/>
        <Setter Property="Visibility" Value="Hidden" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding CharacterType}" Value="Avatar">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="CharacterPortraitTemplate">
        <StackPanel Orientation="Vertical">
            <Grid VerticalAlignment="Top" HorizontalAlignment="Center">

                <!--ALIVE-->
                <Path Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Width="134" Height="200" Fill="{Binding Icon}" RenderTransformOrigin="0.5,0.534" Visibility="{Binding Stats.IsAlive, Converter={StaticResource BoolToVisibleConverter}}">
                    <Path.Data>
                        <Geometry >M0,27 A90,90 0 0 1 27,0 H105 A90,90 0 0 1 134,27 V171 A90,90 0 0 1 105,200 H27 A90,90 0 0 1 0,171 V42 Z</Geometry>
                    </Path.Data>
                </Path>

                <!--DEAD-->
                <Grid Visibility="{Binding Stats.IsAlive, Converter={StaticResource BoolToCollapsedConverter}}">
                    <Path Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Width="134" Height="200" Fill="{Binding Icon}" RenderTransformOrigin="0.5,0.534">
                        <Path.Data>
                            <Geometry >M0,27 A90,90 0 0 1 27,0 H105 A90,90 0 0 1 134,27 V171 A90,90 0 0 1 105,200 H27 A90,90 0 0 1 0,171 V42 Z</Geometry>
                        </Path.Data>
                        <Path.Effect>
                            <ls:SaturationEffect Saturation="0.1"/>
                        </Path.Effect>
                    </Path>
                    <Path Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Width="134" Height="200"
                          RenderTransformOrigin="0.5,0.534" Fill="{StaticResource LS_PortraitDeadRadialColor}">
                        <Path.Data>
                            <Geometry >M0,27 A90,90 0 0 1 27,0 H105 A90,90 0 0 1 134,27 V171 A90,90 0 0 1 105,200 H27 A90,90 0 0 1 0,171 V42 Z</Geometry>
                        </Path.Data>
                    </Path>
                </Grid>


                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/character_image_frame.png" Stretch="None"/>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="MouseEnter">
                        <b:InvokeCommandAction Command="{Binding DataContext.SetDebugUIEntityCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding EntityHandle}"/>
                    </b:EventTrigger>
                    <b:EventTrigger EventName="MouseLeave">
                        <b:InvokeCommandAction Command="{Binding DataContext.ClearDebugUIEntityCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="FrameAttachedCharacterPortraitTemplate">
        <ContentControl>
            <b:Interaction.Behaviors>
                <ls:DropOnCharacterBehavior TargetCharacter="{Binding}" DropExtraCommand="{Binding DataContext.DropFollowerOrSummonCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            </b:Interaction.Behaviors>
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseLeftButtonDown">
                    <!-- Select this Character when panel is clicked -->
                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                           Command="{Binding DataContext.SelectCharacter,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                           Command="{Binding DataContext.PlaySelectCharacterReaction,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                    <b:InvokeCommandAction Command="{Binding DataContext.TargetGameobjectCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>

            <ContentPresenter x:Name="Portrait" ContentTemplate="{StaticResource CharacterPortraitTemplate}" Content="{Binding}"/>

        </ContentControl>
    </DataTemplate>

    <!-- Tooltip defined here because Controller needs a version with a button hint -->
    <DataTemplate DataType="{x:Type ls:QuestView}">
        <ContentControl Template="{StaticResource QuestTooltipTemplate}" Content="{Binding .}"/>
    </DataTemplate>
    
    <!--Status Effects START -->

    <DataTemplate x:Key="StatusTemplate">
        <Grid x:Name="StatusContainer" Width="{DynamicResource StatusWidth}" Height="{DynamicResource StatusHeight}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-100">
            <Grid.Background>
                <ImageBrush ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/status_bg.png"/>
            </Grid.Background>
            <ls:LSPie Value="{Binding RemainingPercentage}" SweepDirection="Clockwise" Width="92" Height="92" VerticalAlignment="Center" HorizontalAlignment="Center">
                <ls:LSPie.Style>
                    <Style TargetType="ls:LSPie">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Duration}" Value="-1">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ls:LSPie.Style>
                <Image Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/statusBG_floating_bar.png" Stretch="UniformToFill" Width="64" Height="64" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </ls:LSPie>
            <Rectangle Width="50" Height="50" Fill="{Binding Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Label VerticalAlignment="Bottom" HorizontalAlignment="Right" IsHitTestVisible="False" Content="{Binding Duration}" Margin="0,0,16,8" Foreground="{StaticResource LS_tint100}" FontWeight="Bold" FontSize="{StaticResource SmallFontSize}" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="2">
                <Label.Style>
                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Duration}" Value="-1">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Duration}" Value="0">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>
            <Rectangle x:Name="BlinkRectangle" Fill="White" Width="70" Height="70" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" IsHitTestVisible="False"/>
            <ls:AnimatedImage x:Name="WMPopExplosion" Template="{StaticResource BaseAnimatedImage}" Time="0:0:0.033" ClipSize="216,240" RepeatBehavior="1x" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/VFX/popExplosion.png" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden" IsHitTestVisible="False">
                <ls:AnimatedImage.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform X="-8" Y="-10"/>
                    </TransformGroup>
                </ls:AnimatedImage.RenderTransform>
            </ls:AnimatedImage>

            <b:Interaction.Triggers>
                <b:DataTrigger Binding="{Binding ElementName=StatusContainer, Path=Tag}" Value="PlayWMSound">
                    <ls:LSPlaySound Sound="UI_HUD_WildMagic_Status"/>
                </b:DataTrigger>

                <b:DataTrigger Binding="{Binding ElementName=StatusContainer, Path=Tag}" Value="WMAnimationValidated">
                    <b:InvokeCommandAction Command="{Binding DataContext.WildMagicStatusAnimationDoneCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding .}"/>
                </b:DataTrigger>
            </b:Interaction.Triggers>

        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsWildMagicStatus}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <BeginStoryboard.Storyboard>
                            <Storyboard TargetName="StatusContainer">
                                <Storyboard.Children>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StatusContainer" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.75" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BlinkRectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.00" Value="0.0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.00" Value="0.0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.25" Value="0.6"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.50" Value="0.0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.60" Value="0.0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.85" Value="0.6"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.10" Value="0.0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.20" Value="0.0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.45" Value="0.6"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.70" Value="0.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WMPopExplosion" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.75" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:2.0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StatusContainer" Storyboard.TargetProperty="Tag">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value=""/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:1.75" Value="PlayWMSound"/>
                                            <!-- The animation is not done yet, but the status appeared, to which we don't need to replay the animation after that.-->
                                            <DiscreteObjectKeyFrame KeyTime="0:0:2.00" Value="WMAnimationValidated"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>

                                </Storyboard.Children>
                            </Storyboard>
                        </BeginStoryboard.Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--Status Effects END -->

    <!--PlayerPortraits BEGIN -->
    <ControlTemplate x:Key="PortraitHealth">
        <Viewbox StretchDirection="DownOnly">
            <DockPanel>
                <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" IsHitTestVisible="False" FontSize="{StaticResource ScaledSmallFontSize}" FontWeight="Bold" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" Visibility="{Binding Stats.Health.IsValid, Converter={StaticResource BoolToVisibleConverter}}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{StaticResource LS_PrimaryColor}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Stats.Health.PercentValue, Mode=OneWay, Converter={StaticResource LessThanConverter}, ConverterParameter='0.6'}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource LS_warning50TxtColor}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Stats.Health.PercentValue, Mode=OneWay, Converter={StaticResource LessThanConverter}, ConverterParameter='0.3'}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource LS_alertTxtColor}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Stats.Health.PercentValue, Mode=OneWay, Converter={StaticResource LessThanConverter}, ConverterParameter='0.1'}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource LS_tint60}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}/{1}">
                            <Binding Path="Stats.Health.Value"/>
                            <Binding Path="Stats.Health.Max"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock DockPanel.Dock="Bottom" IsHitTestVisible="False" FontSize="{StaticResource ScaledSmallFontSize}" FontWeight="Bold" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" HorizontalAlignment="Center" Margin="0,-4,12,-4"
                           Visibility="{Binding Stats.TemporaryHealth.PercentValue, Converter={StaticResource CountToVisibilityConverter}}" Foreground="{StaticResource LS_tempHPColor}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="+{0}/{1}">
                            <Binding Path="Stats.TemporaryHealth.Value"/>
                            <Binding Path="Stats.TemporaryHealth.Max"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </Viewbox>
    </ControlTemplate>

    <!--Summon Portrait Representation -->

    <DataTemplate x:Key="SummonPortrait">
        <ContentControl x:Name="summonControl">
            <b:Interaction.Behaviors>
                <ls:DragGenericBehavior StartDragCommand="{Binding DataContext.DragFollowerOrSummonCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
            </b:Interaction.Behaviors>

            <ContentControl.Tag>
                <MultiBinding Converter="{StaticResource EqualConverter}">
                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                    <Binding Path="OwnerUserID"/>
                </MultiBinding>
            </ContentControl.Tag>
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseLeftButtonUp">
                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                           Command="{Binding DataContext.SelectCharacter,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
                                           Command="{Binding DataContext.PlaySelectCharacterReaction,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                    <b:InvokeCommandAction Command="{Binding DataContext.TargetGameobjectCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="UI_HUD_SelectCharacter"/>
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseDoubleClick" >
                    <b:InvokeCommandAction Command="{Binding DataContext.SetCameraOnGameObject,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseEnter">
                    <b:InvokeCommandAction Command="{Binding DataContext.HighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="UI_Shared_Hover"/>
                    <b:InvokeCommandAction Command="{Binding DataContext.SetDebugUIEntityCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding EntityHandle}"/>
                    <b:ChangePropertyAction TargetName="FrameHighlight" PropertyName="Visibility" Value="Visible" />
                </b:EventTrigger>
                <b:EventTrigger EventName="MouseLeave">
                    <b:InvokeCommandAction Command="{Binding DataContext.ClearHighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                    <b:ChangePropertyAction TargetName="FrameHighlight" PropertyName="Visibility" Value="Collapsed" />
                    <b:InvokeCommandAction Command="{Binding DataContext.ClearDebugUIEntityCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>

            <StackPanel x:Name="SummonPortraitRoot" Orientation="Vertical" VerticalAlignment="Bottom" Height="165">
                <StackPanel.ToolTip>
                    <ls:LSTooltip Content="{TemplateBinding DataContext}" ContentTemplate="{StaticResource PartyLineTooltipTemplate}" Placement="Top"/>
                </StackPanel.ToolTip>
                <Grid Style="{StaticResource PortraitGridStyle}" Margin="-6,-3,0,0">
                    <ls:LSEntityObject EntityRef="{Binding EntityHandle}" VerticalAlignment="Center" Background="Transparent">
                        <Rectangle Fill="Black" Width="103" Height="153" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Rectangle Fill="{Binding Icon}" Width="100" Height="150" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <ProgressBar Template="{DynamicResource DefaultProgressBar}" Width="100" Height="150" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource CharacterPortraitBarStyle}"/>
                    </ls:LSEntityObject>

                    <Image x:Name="Frame" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_summon_d.png" Height="165"  Stretch="Uniform"/>
                    <Image x:Name="FrameHighlight" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_summon_h.png" Height="165" Stretch="Uniform" Visibility="Collapsed"/>

                    <Image x:Name="ConditionsIndicator" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_conditionsBigMark_d.png" Stretch="None" Visibility="{Binding StatusEffects.Count, Converter={StaticResource CountToVisibilityConverter}}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,14,10,0"/>

                    <Control Template="{StaticResource CharacterModeIcon}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,6,0,0"/>
                    <Control Template="{StaticResource PortraitHealth}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="92" Margin="0,0,0,8"/>
                </Grid>
            </StackPanel>
        </ContentControl>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelectedCharacter}" Value="True">
                <Setter TargetName="Frame" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_summon_active_d.png"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_summon_active_h.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag, ElementName=summonControl}" Value="False">
                <Setter TargetName="Frame" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/remote_portrait_frame_summon_d.png"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/remote_portrait_frame_summon_h.png"/>
            </DataTrigger>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0]" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- CharacterPortrait Template -->
    <DataTemplate x:Key="CharacterPortrait">
        <DataTemplate.Resources>
            <ImageSource x:Key="SuccessActive">pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_tallyUp_active.png</ImageSource>
            <ImageSource x:Key="SuccessInactive">pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_tallyUp_inActive.png</ImageSource>
            <ImageSource x:Key="FailureActive">pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_tallyDown_active.png</ImageSource>
            <ImageSource x:Key="FailureInactive">pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_tallyDown_inActive.png</ImageSource>
            <ImageSource x:Key="ListenBgTop">pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/listenBg_top.png</ImageSource>
            <ImageSource x:Key="ListenBgBot">pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/listenBg_bottom.png</ImageSource>
            <BitmapImage x:Key="StatusBg" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/statusBG.png" />
            <BitmapImage x:Key="StatusBgFill" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/statusBG_fill.png" />
        </DataTemplate.Resources>

        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
            <ls:LSContentControl x:Name="ParentControl" Background="Transparent" >
                <b:Interaction.Behaviors>
                    <ls:DropOnCharacterBehavior TargetCharacter="{Binding}" DropExtraCommand="{Binding DataContext.DropFollowerOrSummonCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" DropExtraCommandParameter="{Binding ElementName=FollowersUnlinked}"/>
                </b:Interaction.Behaviors>
                <ls:LSContentControl.Tag>
                    <MultiBinding Converter="{StaticResource EqualConverter}">
                        <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                        <Binding Path="OwnerUserID"/>
                    </MultiBinding>
                </ls:LSContentControl.Tag>

                <Grid x:Name="baseGrid">
                    <ls:LSInputBinding x:Name="SelectCharacterInput" 
                                   PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" IsEnabled="False">
                        <b:Interaction.Triggers>
                            <b:EventTrigger  EventName="LSInputBindingPressed">
                                <b:InvokeCommandAction Command="{Binding DataContext.SelectCharacter,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                <b:InvokeCommandAction Command="{Binding DataContext.PlaySelectCharacterReaction,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                <ls:LSPlaySound Sound="UI_HUD_SelectCharacter"/>
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </ls:LSInputBinding>

                    <ls:LSInputBinding x:Name="CameraResetInput" 
                                   PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Command="{Binding DataContext.SetCameraOnGameObject,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"  CommandParameter="{Binding}"/>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">

                        <ContentControl Panel.ZIndex="2">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseLeftButtonUp" >
                                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Command="{Binding DataContext.SelectCharacter,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                    <b:InvokeCommandAction IsEnabled="{Binding DataContext.CurrentPlayer.SelectedCharacter.IsCasting, Converter={StaticResource InvertBoolConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Command="{Binding DataContext.PlaySelectCharacterReaction,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                    <b:InvokeCommandAction Command="{Binding DataContext.TargetGameobjectCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                    <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="UI_HUD_SelectCharacter"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseDoubleClick" >
                                    <b:InvokeCommandAction Command="{Binding DataContext.SetCameraOnGameObject,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" />
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseEnter">
                                    <b:InvokeCommandAction Command="{Binding DataContext.HighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                    <b:InvokeCommandAction Command="{Binding DataContext.PlaySoundEvent, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="UI_Shared_Hover"/>
                                    <b:ChangePropertyAction TargetName="FrameHighlight" PropertyName="Visibility" Value="Visible" />
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseLeave">
                                    <b:InvokeCommandAction Command="{Binding DataContext.ClearHighlightGameobject, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"/>
                                    <b:ChangePropertyAction TargetName="FrameHighlight" PropertyName="Visibility" Value="Collapsed" />
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                            <Grid Style="{StaticResource PortraitGridStyle}" MaxHeight="{Binding ActualHeight, ElementName=FrameHighlight}">
                                <ls:LSEntityObject EntityRef="{Binding EntityHandle}" Background="Transparent" Margin="0,-3,0,-3" Opacity="1">
                                    <ls:LSEntityObject.ToolTip>
                                        <ls:LSTooltip Content="{TemplateBinding DataContext}" ContentTemplate="{StaticResource PartyLineTooltipTemplate}" ls:TooltipExtender.Owner="{Binding Path=DataContext, ElementName=ParentControl}" Placement="Right" VerticalOffset="-18" CanBePinned="True"/>
                                    </ls:LSEntityObject.ToolTip>
                                    <Grid IsHitTestVisible="False">
                                        <Rectangle Fill="Black" Width="138" Height="204" VerticalAlignment="Center" HorizontalAlignment="Center" />

                                        <!--ALIVE-->
                                        <Rectangle Width="134" Height="200" VerticalAlignment="Center" HorizontalAlignment="Center"  Fill="{Binding Icon}" Visibility="{Binding Stats.IsAlive, Converter={StaticResource BoolToVisibleConverter}}"/>

                                        <!--DEAD-->
                                        <Rectangle Width="134" Height="200" VerticalAlignment="Center" HorizontalAlignment="Center"  Fill="{Binding Icon}" Visibility="{Binding Stats.IsAlive, Converter={StaticResource BoolToHiddenConverter}}">
                                            <Rectangle.Effect>
                                                <ls:SaturationEffect Saturation="0.1"/>
                                            </Rectangle.Effect>
                                        </Rectangle>

                                        <ProgressBar Template="{DynamicResource DefaultProgressBar}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="134" Height="200" Style="{StaticResource CharacterPortraitBarStyle}" />

                                        <Image x:Name="Frame" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_inactive_d.png" Stretch="None"/>
                                        <Image x:Name="FrameHighlight" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_inactive_h.png" Stretch="None" Visibility="Hidden"/>

                                        <Control x:Name="CharacterMode" Template="{StaticResource CharacterModeIcon}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="-35,0,0,0" />
                                        <Control Template="{StaticResource PortraitHealth}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="132" Margin="0,0,0,8"/>
                                    </Grid>

                                    <ls:LSButton x:Name="LevelUpButton" HorizontalAlignment="Left" VerticalAlignment="Top" Command="{Binding DataContext.StartLevelUp, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding .}" Width="90" Height="90">
                                        <ls:LSButton.ToolTip>
                                            <ls:LSTooltip IsHitTestVisible="False" Placement="Top" VerticalOffset="60">
                                                <TextBlock Text="{Binding Source='h279c7a26gafe3g440cgb460g878bbfc0bdc0', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource TooltipBaseTextStyle}"/>
                                            </ls:LSTooltip>
                                        </ls:LSButton.ToolTip>
                                        <ls:LSButton.Template>
                                            <ControlTemplate TargetType="ls:LSButton">
                                                <Image x:Name="img" Source="{StaticResource IconLevelUpArrow}" Stretch="Uniform" Width="60" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-30,-30,0,0"/>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared/ico_levelUp_h.png" TargetName="img"/>
                                                    </Trigger>

                                                    <DataTrigger Binding="{Binding DataContext.CurrentPlayer.UIData.AllowInteraction, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="False">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>

                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}" TargetName="img"/>
                                                    </Trigger>

                                                    <DataTrigger Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard x:Name="IconBounce">
                                                                <BeginStoryboard.Storyboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Width" Storyboard.TargetName="img" RepeatBehavior="Forever">
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame1}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame2}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame3}" Value="{StaticResource LevelUpArrowAnimationFrameBigSize}"/>
                                                                            <EasingDoubleKeyFrame KeyTime="{StaticResource LevelUpArrowAnimationFrame4}" Value="{StaticResource LevelUpArrowAnimationFrameSmallSize}"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard.Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <StopStoryboard BeginStoryboardName="IconBounce"/>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ls:LSButton.Template>
                                    </ls:LSButton>

                                    <Rectangle x:Name="DownedBg" Height="{Binding ActualHeight, ElementName=DownedStatus}" Margin="-28,0" HorizontalAlignment="Left" VerticalAlignment="Center" Width="70" Visibility="Collapsed">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#00000000" Offset="0" />
                                                    <GradientStop Color="#CF000000" Offset="0.08" />
                                                    <GradientStop Color="#FF000000" Offset="0.2" />
                                                    <GradientStop Color="#FF000000" Offset="0.8" />
                                                    <GradientStop Color="#CF000000" Offset="0.92" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <Rectangle.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="#00000000" Offset="0.1" />
                                                    <GradientStop Color="#FF000000" Offset="0.3" />
                                                    <GradientStop Color="#FF000000" Offset="0.7" />
                                                    <GradientStop Color="#00000000" Offset="0.9" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>

                                    <StackPanel x:Name="DownedStatus" Margin="-28,0" HorizontalAlignment="Left" VerticalAlignment="Center" Width="70" Visibility="Collapsed">
                                        <Image x:Name="SuccessIII" Stretch="None" Margin="0,0,0,-20" VerticalAlignment="Top" Source="{StaticResource SuccessInactive}"/>
                                        <Image x:Name="SuccessII" Stretch="None" Margin="0,0,0,-20" VerticalAlignment="Top" Source="{StaticResource SuccessInactive}"/>
                                        <Image x:Name="SuccessI" Stretch="None" Margin="0,0,0,0" VerticalAlignment="Top" Source="{StaticResource SuccessInactive}"/>

                                        <Image x:Name="DownedStatusIcon" VerticalAlignment="Center" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/ico_downed.png" Stretch="None"/>

                                        <Image x:Name="FailureI" Stretch="None" Margin="0,0,0,0" VerticalAlignment="Bottom" Source="{StaticResource FailureInactive}"/>
                                        <Image x:Name="FailureII" Stretch="None" Margin="0,-20,0,0" VerticalAlignment="Bottom" Source="{StaticResource FailureInactive}"/>
                                        <Image x:Name="FailureIII" Stretch="None" Margin="0,-20,0,0" VerticalAlignment="Bottom" Source="{StaticResource FailureInactive}"/>
                                    </StackPanel>

                                </ls:LSEntityObject>
                            </Grid>

                        </ContentControl>

                        <Control x:Name="ListenInGrid" Margin="-27,0" Panel.ZIndex="5" Visibility="Collapsed">
                            <Control.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <Image x:Name="BgTop" Source="{StaticResource ListenBgTop}" HorizontalAlignment="Center" VerticalAlignment="Top" Stretch="None" Margin="0,-3,0,0"/>
                                        <Image x:Name="BgBot" Source="{StaticResource ListenBgBot}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="None" Margin="0,0,0,-3"/>

                                        <ls:LSButton x:Name="ListenToDialog" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                            Command="{Binding DataContext.ListenToDialog, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}"
                                            BoundEvent="ToggleGroupMode" IsEnabled="{Binding DataContext.CurrentPlayer.UIData.InPlayerPanels, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource InvertBoolConverter}}" >
                                            <ls:LSButton.Template>
                                                <ControlTemplate TargetType="ls:LSButton">
                                                    <ControlTemplate.Resources>
                                                        <BitmapImage x:Key="btnNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/btn.png"/>
                                                        <BitmapImage x:Key="btnHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/btn.png" />
                                                        <BitmapImage x:Key="btnBackground" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/listenBg_btn.png" />
                                                        <BitmapImage x:Key="trail" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/trail.png" />
                                                        <BitmapImage x:Key="playIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/ico_play.png" />
                                                        <BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/ico_ear.png" />
                                                        <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/ico_ear.png" />
                                                        <BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/ListenIn/ico_ear.png" />
                                                    </ControlTemplate.Resources>

                                                    <Grid>
                                                        <Image x:Name="BtnBackground" Source="{StaticResource btnBackground}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                            <Image.RenderTransform>
                                                                <ScaleTransform x:Name="BtnBackgroundTransform" ScaleX="1" ScaleY="1"/>
                                                            </Image.RenderTransform>
                                                        </Image>

                                                        <Image x:Name="BtnBg" Source="{StaticResource btnNormal}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                            <Image.RenderTransform>
                                                                <ScaleTransform x:Name="BtnBgTransform" ScaleX="0" ScaleY="0"/>
                                                            </Image.RenderTransform>
                                                        </Image>

                                                        <Grid x:Name="IconGrid">
                                                            <Image x:Name="icon" Source="{StaticResource Icon_Normal}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <ScaleTransform x:Name="iconTransform" ScaleX="1" ScaleY="1"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                            <Image x:Name="trail" Source="{StaticResource trail}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <RotateTransform x:Name="trailTransform" Angle="0"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                            <Image x:Name="play1" Source="{StaticResource playIcon}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,23,0" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <TranslateTransform x:Name="play1Transform" X="0"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                            <Image x:Name="play2" Source="{StaticResource playIcon}" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,23,0" Stretch="None" RenderTransformOrigin="0.5 0.5">
                                                                <Image.RenderTransform>
                                                                    <TranslateTransform x:Name="play2Transform" X="0"/>
                                                                </Image.RenderTransform>
                                                            </Image>
                                                        </Grid>
                                                    </Grid>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnHover}"/>
                                                            <Setter TargetName="icon" Property="Source" Value="{StaticResource Icon_Hover}" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnPressed}" />
                                                            <Setter TargetName="icon" Property="Source" Value="{StaticResource Icon_Pressed}" />
                                                            <Setter TargetName="icon" Property="Margin" Value="0,4,0,0" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource btnDisabled}" />
                                                            <Setter TargetName="icon" Property="Opacity" Value="0.7" />
                                                        </Trigger>
                                                        <Trigger Property="IsVisible" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard x:Name="ListenButtonAnimation">
                                                                    <Storyboard>
                                                                        <!-- Animations OnStart-->
                                                                        <DoubleAnimation Storyboard.TargetName="BtnBackgroundTransform" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.6" From="1.4" To="1">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>
                                                                        <DoubleAnimation Storyboard.TargetName="BtnBackgroundTransform" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.6" From="1.4" To="1">
                                                                            <DoubleAnimation.EasingFunction>
                                                                                <ElasticEase EasingMode="EaseOut" Oscillations="1"/>
                                                                            </DoubleAnimation.EasingFunction>
                                                                        </DoubleAnimation>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBgTransform" Storyboard.TargetProperty="ScaleX">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="8"/>
                                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                                            </EasingDoubleKeyFrame>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBgTransform" Storyboard.TargetProperty="ScaleY">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                                                <EasingDoubleKeyFrame.EasingFunction>
                                                                                    <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="8"/>
                                                                                </EasingDoubleKeyFrame.EasingFunction>
                                                                            </EasingDoubleKeyFrame>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBg" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.4"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.55"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BtnBackground" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IconGrid" Storyboard.TargetProperty="Opacity">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.6"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <!-- Animations Forever-->
                                                                        <DoubleAnimation Storyboard.TargetName="trailTransform" Storyboard.TargetProperty="Angle" From="0" To="360" RepeatBehavior="Forever" Duration="0:0:3"/>
                                                                        <DoubleAnimation Storyboard.TargetName="play1Transform" Storyboard.TargetProperty="X" From="-18" To="0" RepeatBehavior="Forever" Duration="0:0:1.6"/>
                                                                        <DoubleAnimation Storyboard.TargetName="play2Transform" Storyboard.TargetProperty="X" From="-18" To="0" RepeatBehavior="Forever" Duration="0:0:1.6" BeginTime="0:0:0.8"/>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="play1" Storyboard.TargetProperty="Opacity" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.2"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="play2" Storyboard.TargetProperty="Opacity" RepeatBehavior="Forever" BeginTime="0:0:0.8">
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.2"/>
                                                                            <LinearDoubleKeyFrame Value="0" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>

                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="iconTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1.05" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="iconTransform" Storyboard.TargetProperty="ScaleY" RepeatBehavior="Forever">
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                                                                            <LinearDoubleKeyFrame Value="1.05" KeyTime="0:0:0.8"/>
                                                                            <LinearDoubleKeyFrame Value="1" KeyTime="0:0:1.6"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <StopStoryboard BeginStoryboardName="ListenButtonAnimation"/>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </ls:LSButton.Template>
                                            <ls:LSButton.ToolTip>
                                                <ls:LSTooltip Content="{Binding Source='h182e2a31gc475g436egb05cga8b95d58b7a8',Converter={StaticResource TranslatedStringConverter}}"/>
                                            </ls:LSButton.ToolTip>
                                        </ls:LSButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsVisible" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard FillBehavior="Stop">
                                                        <ThicknessAnimation Storyboard.TargetName="BgTop" Storyboard.TargetProperty="Margin" From="0,-20,0,0" To="0,-3,0,0" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetName="BgTop" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.1"/>
                                                        <ThicknessAnimation Storyboard.TargetName="BgBot" Storyboard.TargetProperty="Margin" From="0,0,0,-20" To="0,0,0,-3" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetName="BgBot" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Control.Template>
                        </Control>

                        <StackPanel Orientation="Vertical">
                            <ItemsControl x:Name="StatusHolder" ls:TooltipExtender.Owner="{Binding Path=DataContext, ElementName=ParentControl}"
                                          ItemsSource="{Binding StatusEffects}" MinHeight="55"
                                          BorderBrush="Transparent" Background="Transparent" HorizontalAlignment="Left">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid ToolTip="{StaticResource ManagedTooltip}" ToolTipService.IsEnabled="True" ToolTipService.Placement="Right" Width="55" Height="55">
                                            <Image Source="{StaticResource StatusBg}" Stretch="UniformToFill" Width="55" Height="55"/>
                                            <Ellipse Width="42" Height="42" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{Binding Icon}"/>
                                            <ls:LSPie x:Name="Progression" Value="{Binding RemainingPercentage}" SweepDirection="Clockwise" RenderTransformOrigin="0.5 0.5">
                                                <Image Source="{StaticResource StatusBgFill}" Stretch="UniformToFill" Width="54" Height="54" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </ls:LSPie>
                                            <Label VerticalAlignment="Bottom" HorizontalAlignment="Right" IsHitTestVisible="False" Content="{Binding Duration}" 
                                               Margin="0,0,0,0" 
                                               Foreground="{StaticResource LS_tint100}" FontWeight="Bold" FontSize="{StaticResource TinyFontSize}" 
                                               noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="4" Visibility="{Binding Duration, Converter={StaticResource CountToVisibilityConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <StackPanel Orientation="Horizontal">
                                <ItemsControl x:Name="Followers" Height="165" ItemsSource="{Binding Followers}" ItemTemplate="{StaticResource SummonPortrait}" Background="Transparent" 
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderBrush="Transparent" 
                                  Margin="0,0,0,-6" Visibility="Collapsed" AlternationCount="{Binding Followers.Count}" Panel.ZIndex="1" Tag="200"
                                  VerticalAlignment="Bottom">
                                    <b:Interaction.Behaviors>
                                        <ls:HorizontalCollapseBehavior MaxSpace="{Binding Tag, ElementName=Followers}" SideElementsSizeModifier="0.85" SideElementsSizeModifierRadius="3">
                                            <ls:HorizontalCollapseBehavior.Storyboard>
                                                <Storyboard>
                                                    <!-- From and To will be filled in the behavior -->
                                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.15">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </ls:HorizontalCollapseBehavior.Storyboard>
                                        </ls:HorizontalCollapseBehavior>
                                    </b:Interaction.Behaviors>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Panel.ZIndex">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource SubtractionMultipleConverter}">
                                                        <Binding Path="AlternationCount" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                        <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}"/>
                                                        <Binding Source="1"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                                <ItemsControl x:Name="FollowersUnlinked" Height="165" ItemsSource="{Binding FollowersUnlinked}" ItemTemplate="{StaticResource SummonPortrait}" Background="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderBrush="Transparent" Margin="20,0,0,-6" Visibility="Collapsed" AlternationCount="{Binding FollowersUnlinked.Count}" Tag="200">
                                    <b:Interaction.Behaviors>
                                        <ls:HorizontalCollapseBehavior MaxSpace="{Binding Tag, ElementName=FollowersUnlinked}" SideElementsSizeModifier="0.85" SideElementsSizeModifierRadius="3" MoveFirst="False">
                                            <ls:HorizontalCollapseBehavior.Storyboard>
                                                <Storyboard>
                                                    <!-- From and To will be filled in the behavior -->
                                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="0:0:0.15">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </ls:HorizontalCollapseBehavior.Storyboard>
                                        </ls:HorizontalCollapseBehavior>
                                    </b:Interaction.Behaviors>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Panel.ZIndex">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource SubtractionMultipleConverter}">
                                                        <Binding Path="AlternationCount" RelativeSource="{RelativeSource AncestorType={x:Type ItemsControl}}"/>
                                                        <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}"/>
                                                        <Binding Source="1"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <!-- Toggle all summons -->
                    <ls:LSButton x:Name="ToggleAllSummons" Template="{StaticResource PanelButtonWT}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="120,10,0,0" Command="{Binding DataContext.ToggleSummonsLinkCommand, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding .}" Visibility="{Binding HasAnySummon, Converter={StaticResource BoolToVisibleConverter}}" OverwriteClickSound="UI_Gameplay_PartyMember_Group">
                        <ls:LSButton.RenderTransform>
                            <ScaleTransform CenterX="0" CenterY="0" ScaleX="0.75" ScaleY="0.75" />
                        </ls:LSButton.RenderTransform>
                        <ls:LSButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='h861b4dc9g3666g4c95g8f44gea717dbf6a9e',Converter={StaticResource TranslatedStringConverter}}"/>
                        </ls:LSButton.ToolTip>
                        <ls:LSButton.Resources>
                            <BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/ico_party_groupAll_d.png" />
                            <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/ico_party_groupAll_h.png" />
                            <BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/ico_party_groupAll_d.png" />
                        </ls:LSButton.Resources>
                    </ls:LSButton>
                </Grid>
            </ls:LSContentControl>
        </StackPanel>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding Path=IsDragOver, ElementName=ParentControl}" Value="True"/>
                    <Condition Binding="{Binding Path=MouseRelativeAbove, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0,200,0,0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding Path=IsDragOver, ElementName=ParentControl}" Value="True"/>
                    <Condition Binding="{Binding Path=MouseRelativeAbove, ElementName=ParentControl}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0,0,0,220"/>
            </MultiDataTrigger>
            <!-- Do not add any padding when we're dragging a summon/follower -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0].CharacterType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Follower"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0], Converter={StaticResource TypeConverter}, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="ls.Character"/>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.DragData.DraggingGameObjects[0].CharacterType, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Summon"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ParentControl" Property="Padding" Value="0"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                                <Binding Path="OwnerUserID"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ToggleAllSummons" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Visibility, ElementName=DownedStatus}" Value="Visible">
                <Setter TargetName="CharacterMode" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsCurrentTurn}" Value="True">
                <Setter TargetName="Frame" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_active_inTurn_d.png"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_active_inTurn_h.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelectedCharacter}" Value="True">
                <Setter TargetName="Frame" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_active_d.png"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/portrait_frame_active_h.png"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="False">
                <Setter TargetName="Frame" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/remote_portrait_frame_d.png"/>
                <Setter TargetName="FrameHighlight" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/remote_portrait_frame_h.png"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=IsEnabled, ElementName=CameraResetInput}" Value="False">
                <Setter TargetName="SelectCharacterInput" Property="IsEnabled" Value ="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelectedCharacter}" Value="False">
                <Setter TargetName="CameraResetInput" Property="IsEnabled" Value ="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CharacterMode}" Value="InTrade">
                <Setter TargetName="CameraResetInput" Property="IsEnabled" Value ="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CharacterMode}" Value="InDialogue">
                <Setter TargetName="CameraResetInput" Property="IsEnabled" Value ="False"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CharacterMode}" Value="InDialogue"/>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                                <Binding Path="OwnerUserID"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource EqualConverter}">
                                <Binding Path="DataContext.Data.LocalPlayers.Count" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                                <Binding Path="DataContext.Data.Players.Count" RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ListenInGrid" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentPlayer.SelectedCharacter.InAutomatedDialogueCount, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0 }" Value="True">
                <Setter TargetName="ListenInGrid" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="0"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar1"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar1"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="1"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar2"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar2"/>
                <Setter TargetName="Frame" Property="ls:TutorialProperties.ModalType" Value ="LeftBottom"/>
                <Setter TargetName="Frame" Property="ls:TutorialProperties.TargetID" Value ="TUT_Recruitment"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="2"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar3"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar3"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=OrderIndex,RelativeSource={RelativeSource AncestorType=ls:LSPortraitListItem}}" Value="3"/>
                    <Condition Binding="{Binding Path=Tag, ElementName=ParentControl}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="SelectCharacterInput" Property="BoundEvent" Value ="UISelectChar4"/>
                <Setter TargetName="CameraResetInput" Property="BoundEvent" Value ="UISelectChar4"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding DownedInfo.Active}" Value="True">
                <Setter TargetName="DownedStatus" Property="Visibility" Value="Visible"/>
                <Setter TargetName="DownedBg" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DownedInfo.Active}" Value="False"/>
                    <Condition Binding="{Binding Stats.Health.Value}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="DownedStatus" Property="Visibility" Value="Visible"/>
                <Setter TargetName="DownedStatusIcon" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/PlayerPortraits/ico_dead.png"/>
                <Setter TargetName="SuccessI" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SuccessII" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SuccessIII" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="FailureI" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="FailureII" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="FailureIII" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollSuccesses, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0 }" Value="True">
                <Setter TargetName="SuccessI" Property="Source" Value="{StaticResource SuccessActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollSuccesses, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1 }" Value="True">
                <Setter TargetName="SuccessII" Property="Source" Value="{StaticResource SuccessActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollSuccesses, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2 }" Value="True">
                <Setter TargetName="SuccessIII" Property="Source" Value="{StaticResource SuccessActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollFailures, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0 }" Value="True">
                <Setter TargetName="FailureI" Property="Source" Value="{StaticResource FailureActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollFailures, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1 }" Value="True">
                <Setter TargetName="FailureII" Property="Source" Value="{StaticResource FailureActive}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DownedInfo.RollFailures, Converter={StaticResource GreaterThanConverter}, ConverterParameter=2 }" Value="True">
                <Setter TargetName="FailureIII" Property="Source" Value="{StaticResource FailureActive}"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Followers.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                    <Condition Binding="{Binding FollowersUnlinked.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Followers" Property="Tag" Value="100"/>
                    <Setter TargetName="FollowersUnlinked" Property="Tag" Value="100"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.InPlayerPanels, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, FallbackValue=False}" Value="False"/>
                    <Condition Binding="{Binding Followers.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="Followers" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding DataContext.CurrentPlayer.UIData.InPlayerPanels, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, FallbackValue=False}" Value="False"/>
                    <Condition Binding="{Binding FollowersUnlinked.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="FollowersUnlinked" Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Stats.Level.LevelUpAvailable}" Value="False">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding CharacterMode}" Value="InCombat">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding DownedInfo.Active}" Value="True">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Stats.IsAlive}" Value="False">
                <Setter TargetName="LevelUpButton" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Visibility, ElementName=ConcentrationHolder}" Value="Visible">
                <Setter TargetName="LevelUpButton" Property="Margin" Value="0,80,0,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentPlayer.UIData.ActiveState, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="PartyPanel">
                <Setter TargetName="StatusHolder"  Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--PlayerPortraits END -->
    

    <ControlTemplate x:Key="InventoryLock">
        <ls:LSToggleButton x:Name="InventoryLockToggle" SoundID="UI_HUD_Inventory_Lock" IsChecked="{Binding IsInventoryLocked, Mode=OneWay}"
                           Command="{Binding DataContext.ToggleInventoryLockCommand ,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
                           CommandParameter="{Binding Inventory}" ToolTipService.Placement="Top"
                           Visibility="Collapsed" IsEnabled="False">
            <ls:LSToggleButton.Tag>
                <MultiBinding Converter="{StaticResource EqualConverter}">
                    <Binding RelativeSource="{RelativeSource AncestorType={x:Type ls:UIWidget}}" Path="DataContext.CurrentPlayer.UserId"/>
                    <Binding Path="OwnerUserID"/>
                </MultiBinding>
            </ls:LSToggleButton.Tag>

            <ls:LSToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Image x:Name="bg" Source="{StaticResource BtnSmallRound}" Stretch="None"/>
                        <Image x:Name="img" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_lock_disabled_d.png"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_h.png"/>
                            <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_lock_disabled_h.png"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_lock_enabled_d.png"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="img" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_lock_enabled_h.png"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ls:LSToggleButton.Template>
        </ls:LSToggleButton>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsInventoryLocked}" Value="True">
                <Setter TargetName="InventoryLockToggle" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Tag, ElementName=InventoryLockToggle}" Value="True">
                <Setter TargetName="InventoryLockToggle" Property="Visibility" Value="Visible"/>
                <Setter TargetName="InventoryLockToggle" Property="IsEnabled" Value="True"/>
            </DataTrigger>

            <!-- If we're not in MP and inventory is not locked, you don't need to display the lock state-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInventoryLocked}" Value="False"/>
                    <Condition Binding="{Binding DataContext.Data.Players.Count, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="InventoryLockToggle" Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="CharacterPassivesTemplate">
        <StackPanel x:Name="PassivesHolder" Orientation="Horizontal">
            <b:Interaction.Behaviors>
                <ls:CollectionFilterBehavior ItemsSource="{Binding DataContext.Stats.Passives, ElementName=PassivesHolder}" Predicate="{Binding DataContext.Stats.AllCharacterFeaturesPredicate, ElementName=PassivesHolder}"/>

                <!-- Only for Level up -->
                <ls:CollectionFilterBehavior ItemsSource="{Binding DataContext.ProgressionData.ClassProgression.Other, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Predicate="{Binding DataContext.Stats.AllCharacterFeaturesPredicate, ElementName=PassivesHolder}"/>
                <ls:CollectionFilterBehavior ItemsSource="{Binding DataContext.ProgressionData.SubClassProgression.Other, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Predicate="{Binding DataContext.Stats.AllCharacterFeaturesPredicate, ElementName=PassivesHolder}"/>
            </b:Interaction.Behaviors>

            <StackPanel.Resources>
                <BitmapImage x:Key="Background" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/characterSheet_feats_bg.png" />
                <BitmapImage x:Key="FeaturesIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/ico_features.png" />
                <BitmapImage x:Key="ArrowIcon" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/btn_director.png" />
            </StackPanel.Resources>

            <ls:LSNineSliceImage x:Name="BarBackground" ImageSource="{StaticResource Background}" Width="124" Slices="4,120,4,100" MinHeight="260" Panel.ZIndex="1">
                <ls:LSNineSliceImage.Resources>
                    <!-- The shadows in the texture will block parts of the character UI, mainly scrollbars -->
                    <!-- We'll prevent the background image from blocking, and make the content block instead -->
                    <Style TargetType="Image">
                        <Setter Property="IsHitTestVisible" Value="False"/>
                    </Style>
                </ls:LSNineSliceImage.Resources>
                <StackPanel x:Name="Content" Orientation="Vertical" Background="Transparent" Margin="20">
                    <StackPanel.Resources>
                        <!-- Revert style back to normal for the actual content -->
                        <Style TargetType="Image">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                        </Style>
                    </StackPanel.Resources>
                    <ls:LSToggleButton x:Name="ToggleFeaturesButton" Margin="0,20,0,0" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-10">
                        <ToggleButton.ToolTip>
                            <ls:LSTooltip Content="{Binding Source='h2e7c9702ge80dg4f47g8551gaf988cde27de',Converter={StaticResource TranslatedStringConverter}}"/>
                        </ToggleButton.ToolTip>
                        <ToggleButton.Template>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid>
                                    <Image x:Name="bg" Source="{DynamicResource btnRoundImg}" Stretch="None"/>
                                    <Image Source="{DynamicResource FeaturesIcon}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Image x:Name="arrowDirection" Source="{DynamicResource ArrowIcon}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Bottom" RenderTransformOrigin="0.5 0.5"/>

                                    <b:Interaction.Triggers>
                                        <b:EventTrigger EventName="MouseEnter">
                                            <ls:LSPlaySound Sound="UI_Shared_Hover"/>
                                        </b:EventTrigger>
                                    </b:Interaction.Triggers>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="bg" Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/CharacterPanel/btn_round_h.png"/>
                                    </Trigger>

                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="arrowDirection" Property="VerticalAlignment" Value="Center"/>
                                        <Setter TargetName="arrowDirection" Property="HorizontalAlignment" Value="Right"/>
                                        <Setter TargetName="arrowDirection" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="270"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ParentState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="CharacterLevelUp"/>
                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter TargetName="arrowDirection" Property="HorizontalAlignment" Value="Left"/>
                                            <Setter TargetName="arrowDirection" Property="RenderTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="90"/>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ls:LSToggleButton>

                    <ScrollViewer VerticalScrollBarVisibility="Hidden" MaxHeight="1300" HorizontalScrollBarVisibility="Hidden" Template="{StaticResource ScrollViewerTemplate}" Background="Transparent"  Visibility="{Binding IsChecked, ElementName=ToggleFeaturesButton, Converter={StaticResource BoolToCollapsedConverter}}" Margin="0,8,0,40" VerticalAlignment="Top" HorizontalAlignment="Center">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="ItemsControl">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical"/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <Setter Property="ItemTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ls:LSButton x:Name="TabRoot" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTipService.Placement="Right" ToolTipService.VerticalOffset="-20" ToolTipService.HorizontalOffset="8" Margin="0,8">
                                                    <ls:LSButton.Template>
                                                        <ControlTemplate TargetType="ls:LSButton">
                                                            <Ellipse x:Name="ButtonImage" Width="60" Height="60" Fill="{Binding Icon}" ToolTip="{StaticResource ManagedTooltip}" ToolTipService.Placement="Right"/>

                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding ParentState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="CharacterLevelUp">
                                                                    <Setter TargetName="ButtonImage" Property="ToolTipService.Placement" Value="Left"/>
                                                                </DataTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </ls:LSButton.Template>

                                                    <b:Interaction.Triggers>
                                                        <b:EventTrigger EventName="Click">
                                                            <b:ChangePropertyAction TargetName="ToggleFeaturesButton" PropertyName="IsChecked" Value="True"/>
                                                        </b:EventTrigger>
                                                    </b:Interaction.Triggers>
                                                </ls:LSButton>

                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding ParentState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="CharacterLevelUp">
                                                        <Setter TargetName="TabRoot" Property="ToolTipService.Placement" Value="Left"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </StackPanel.Resources>

                            <ItemsControl x:Name="Passives" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems, ElementName=PassivesHolder}" Visibility="{Binding Path=(b:Interaction.Behaviors)[0].FilteredItems.Count, ElementName=PassivesHolder, Converter={StaticResource CountToVisibilityConverter}}"/>
                            <ItemsControl x:Name="ClassPassives" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems, ElementName=PassivesHolder}" Visibility="{Binding Path=(b:Interaction.Behaviors)[1].FilteredItems.Count, ElementName=PassivesHolder, Converter={StaticResource CountToVisibilityConverter}}"/>
                            <ItemsControl x:Name="SubClassPassives" ItemsSource="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems, ElementName=PassivesHolder}" Visibility="{Binding Path=(b:Interaction.Behaviors)[2].FilteredItems.Count, ElementName=PassivesHolder, Converter={StaticResource CountToVisibilityConverter}}"/>
                        </StackPanel>
                    </ScrollViewer>
                </StackPanel>
            </ls:LSNineSliceImage>

            <ls:LSNineSliceImage x:Name="ExtendedInfo" Style="{DynamicResource DefaultTooltip9Slice}" Visibility="{Binding IsChecked, ElementName=ToggleFeaturesButton, Converter={StaticResource BoolToVisibleConverter}}" Panel.ZIndex="0" Margin="-84,-30,0,0">
                <Control x:Name="ExtendedInfoContent" Template="{DynamicResource ExtendedPassivesHolderTemplate}" MaxHeight="840" Background="Transparent"/>
            </ls:LSNineSliceImage>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ParentState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" Value="CharacterLevelUp">
                <Setter TargetName="ExtendedInfo" Property="Margin" Value="-986,-30,146,0"/>
                <Setter TargetName="ExtendedInfo" Property="Width" Value="942"/>
                <Setter TargetName="ExtendedInfoContent" Property="MaxHeight" Value="1500"/>
                <Setter TargetName="BarBackground" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="-1" CenterX="59"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Content" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="-1" CenterX="43"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="ToggleFeaturesButton" Property="ToolTipService.Placement" Value="Left"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Page Layout Templates -->
    <GridLength x:Key="PageHeaderHeight">210</GridLength>
    <GridLength x:Key="PageHeaderHeightTabs">260</GridLength>
    <GridLength x:Key="PageFooterHeight">220</GridLength>

    <ControlTemplate x:Key="PageHeader">
        <ControlTemplate.Resources>
            <BitmapImage x:Key="TopDecorationImage" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/titlebar.png"/>
            <BitmapImage x:Key="FadeHeader" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/DMSettings/fade_header.png"/>
        </ControlTemplate.Resources>
        <Grid HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="52"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

           <Image Grid.Row="0" Grid.RowSpan="2" Source="{StaticResource FadeHeader}" Stretch="Fill" Margin="0,-32"/>

            <TextBlock Grid.Row="1" x:Name="Title" 
                       Text="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       FontSize="{StaticResource ScaledMassiveFontSize}" 
                       Foreground="{StaticResource LS_PrimaryColor}"/>

            <Image Grid.Row="2" x:Name="Bg_Top" 
                   Source="{StaticResource TopDecorationImage}" 
                   Stretch="None"
                   Margin="0,0,0,22"/>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>