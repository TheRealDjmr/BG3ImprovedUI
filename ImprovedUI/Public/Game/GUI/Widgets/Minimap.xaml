<ls:UIWidget x:Name="Minimap"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type ls:DCWidget}, IsDesignTimeCreatable=True}"
             Template="{StaticResource Hud.Root}">

    <ls:UIWidget.Resources>
        <BitmapImage x:Key="mnmBtnNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_d.png"/>
        <BitmapImage x:Key="mnmBtnHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_h.png" />
        <BitmapImage x:Key="mnmBtnPressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_p.png" />
        <BitmapImage x:Key="mnmBtnDisabled" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_hudNav_disabled.png" />
        <BitmapImage x:Key="pingBtnNormal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_signal_d.png"/>
        <BitmapImage x:Key="pingBtnHover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_signal_h.png"/>
        <BitmapImage x:Key="DangerZone" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/alertGlow.png"/>

        <ControlTemplate x:Key="PanelButtonWT" TargetType="ls:LSButton">
            <Grid x:Name="BtnRoot" ToolTipService.Placement="Top" ToolTipService.IsEnabled="True" ToolTipService.VerticalOffset="4">
                <Grid.ToolTip>
                    <ls:LSTooltip Content="{Binding ElementName=BtnRoot,Path=DataContext}"/>
                </Grid.ToolTip>

                <Image x:Name="BtnBg" Source="{StaticResource mnmBtnNormal}" Stretch="None"/>
                <Image x:Name="icon" Source="{DynamicResource Icon_Normal}" Stretch="None"/>
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource mnmBtnHover}"/>
                    <Setter TargetName="icon" Property="Source" Value="{DynamicResource Icon_Hover}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource mnmBtnPressed}" />
                    <Setter TargetName="icon" Property="Source" Value="{DynamicResource Icon_Pressed}" />
                    <Setter TargetName="icon" Property="Margin" Value="0,4,0,0" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="BtnBg" Property="Source" Value="{StaticResource mnmBtnDisabled}" />
                    <Setter TargetName="icon" Property="Opacity" Value="0.7" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="MiniMapTextBlockStyle" TargetType="TextBlock">
            <Setter Property="noesis:Text.StrokeThickness" Value="4"/>
            <Setter Property="noesis:Text.Stroke" Value="Black"/>
            <Setter Property="Foreground" Value="{StaticResource LS_PrimaryColor}"/>
        </Style>

        <Style TargetType="TextBlock" BasedOn="{StaticResource MiniMapTextBlockStyle}"/>

        <KeyTime x:Key="SlideInHudTime">0:0:1</KeyTime>
        <KeyTime x:Key="SlideInHudBeginTime">0:0:0.5</KeyTime>
        <Storyboard x:Key="Hud.AnimIn" >
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MinimapContainer">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudBeginTime}" Value="0.12"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudTime}" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="MinimapContainer">
                <EasingDoubleKeyFrame KeyTime="0" Value="-200"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudBeginTime}" Value="-200"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudTime}" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="MinimapContainer">
                <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudBeginTime}" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="{StaticResource SlideInHudTime}" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuarticEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </ls:UIWidget.Resources>
    <ls:UIWidget.ContentTemplate>
        <DataTemplate DataType="ls:Widget">
            <DataTemplate.Resources>
                <Style TargetType="TextBlock" BasedOn="{StaticResource MiniMapTextBlockStyle}"/>

                <BitmapImage x:Key="MinimapBg" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/minimap_bg.png" />
                <BitmapImage x:Key="MinimapFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/minimap_frame.png" />
                <BitmapImage x:Key="MinimapNorth" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_north.png" />
                <BitmapImage x:Key="MinimapSouth" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_south.png" />
                <BitmapImage x:Key="MinimapWest" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_west.png" />
                <BitmapImage x:Key="MinimapEast" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/dir_east.png" />
            </DataTemplate.Resources>
            <Grid MinHeight="40" MinWidth="40">
                <!--Ping hotkey binding-->
                <ls:LSInputBinding x:Name="PingBinding" BoundEvent="Ping" SoundID="UI_Shared_Tick" PlayerId="{Binding CurrentPlayer.PlayerId}" Command="{Binding RequestPing}"
                                   IsEnabled="{Binding ElementName=WorldMap, Path=IsMouseOver, Converter={StaticResource InvertBoolConverter}}"/>

                <ls:LSInputBinding x:Name="MapPingBinding" BoundEvent="Ping" SoundID="UI_Shared_Tick" PlayerId="{Binding CurrentPlayer.PlayerId}"
                                   IsEnabled="{Binding ElementName=WorldMap, Path=IsMouseOver}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="LSInputBindingPressed">
                            <b:InvokeCommandAction Command="{Binding RequestPing}" CommandParameter="{Binding ElementName=WorldMap, Path=MouseWorldCoordinates}"/>
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ls:LSInputBinding>

                <ls:LSInputBinding x:Name="PingCancelBinding" BoundEvent="UICancel" PlayerId="{Binding CurrentPlayer.PlayerId}" Command="{Binding RequestPingState}"
                                   IsEnabled="{Binding CurrentPlayer.IsRequestingPing}"/>

                <StackPanel  Margin="0,15,15,0" VerticalAlignment="Top" HorizontalAlignment="Right">
                    <!-- MOD START - Minimap changes -->
					<Grid x:Name="MinimapContainer" Background="Transparent"  VerticalAlignment="Top" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>

                        <!-- Map Border -->
                        <Border Height="468" Width="468">
							<Image Source="{StaticResource MinimapBg}" Stretch="Fill"/>
						</Border>

                        <!-- Map -->
                        <Grid VerticalAlignment="Top" HorizontalAlignment="Left" Margin="7,7">
                            <Grid.Resources>
                                <Style TargetType="ls:LSWorldMapMarker" BasedOn="{StaticResource Minimap.MarkerItemStyle}"/>
                            </Grid.Resources>
                            <ls:LSWorldMap x:Name="WorldMap"
                                       Height="468" Width="468"
                                       MarkerTrajectory ="Ellipse"                                       
                                       Scale="28.0" MinScale="8.0" MaxScale="40.0" ScaleSteps="4.0"
                                       WorldMapData="{Binding CurrentPlayer.WorldMap}"
                                       MarkerScale="1"
                                       FollowCameraRotation="{Binding CurrentPlayer.UIOptions.NorthFacingMinimap, Converter={StaticResource InvertBoolConverter}}"
                                       ZoomRate="0" PanRate="0">
                                <ls:LSWorldMap.Clip>
                                    <EllipseGeometry Center="234,234" RadiusX="234" RadiusY="234" />
                                </ls:LSWorldMap.Clip>
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="MouseDown">
                                        <b:Interaction.Behaviors>
                                            <b:ConditionBehavior>
                                                <b:ConditionalExpression>
                                                    <b:ComparisonCondition LeftOperand="{Binding CurrentPlayer.IsRequestingPing}" Operator="Equal" RightOperand="True"/>
                                                </b:ConditionalExpression>
                                            </b:ConditionBehavior>
                                        </b:Interaction.Behaviors>
                                        <b:InvokeCommandAction Command="{Binding RequestPingFromMap}" CommandParameter="{Binding ElementName=WorldMap, Path=MouseWorldCoordinates}"/>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </ls:LSWorldMap>

                            <Grid IsHitTestVisible="False" Visibility="{Binding CurrentPlayer.SelectedCharacter.IsInDangerZone, Converter={StaticResource BoolToVisibleConverter}}">
                                <!-- Danger zone outlines -->
                                <Image x:Name="DangerZoneGlow" IsHitTestVisible="False" Stretch="None" Source="{StaticResource DangerZone}" Focusable="False" Opacity="0.45" />
                                <Image x:Name="DangerZoneGlowAnimated" IsHitTestVisible="False" Stretch="None" Source="{StaticResource DangerZone}" Focusable="False" Opacity="0.1"/>
                            </Grid>

                            <!-- North Pointer -->
                            <Grid Height="483" Width="483" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.RenderTransform>
                                    <RotateTransform Angle="{Binding ElementName=WorldMap, Path=MapRotation}"/>
                                </Grid.RenderTransform>
                                <Image Source="{StaticResource MinimapFrame}" Stretch="Fill" IsHitTestVisible="False"/>
								<Border Height="21" Width="21" VerticalAlignment="Top" HorizontalAlignment="Center">
									<Image Source="{StaticResource MinimapNorth}" Stretch="Fill"/>
								</Border>
								<Border Height="21" Width="21" VerticalAlignment="Center" HorizontalAlignment="Right">
									<Image Source="{StaticResource MinimapEast}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
										<Image.RenderTransform>
											<RotateTransform Angle="90"/>
										</Image.RenderTransform>
									</Image>
								</Border>
								<Border Height="21" Width="21" VerticalAlignment="Bottom" HorizontalAlignment="Center">
									<Image Source="{StaticResource MinimapSouth}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
										<Image.RenderTransform>
											<RotateTransform Angle="180"/>
										</Image.RenderTransform>
									</Image>
								</Border>
								<Border Height="21" Width="21" VerticalAlignment="Center" HorizontalAlignment="Left">
									<Image Source="{StaticResource MinimapWest}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
										<Image.RenderTransform>
											<RotateTransform Angle="270"/>
										</Image.RenderTransform>
									</Image>
								</Border>
                            </Grid>
                        </Grid>

                        <!-- Map Location Text - Hidden -->
                        <!--<TextBlock Text="{Binding CurrentPlayer.SelectedCharacter.CurrentSubregionName, Converter={StaticResource StringToUpperConverter}}" 
                                   Foreground="{StaticResource LS_tint100}" FontSize="{StaticResource MediumFontSize}" Effect="{StaticResource HUD.DropShadow}" Opacity="0.8"
                                   MaxWidth="300" MaxHeight="72" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" TextAlignment="Center" LineHeight="32" LineStackingStrategy="BlockLineHeight"
                                   HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,120" Panel.ZIndex="2" /> -->

                        <!-- Co-ordinates - Moved -->
                        <TextBlock  Foreground="{StaticResource LS_accent100TxtColor}" FontSize="{StaticResource SmallFontSize}" Background="Black" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,-5">
                            <Run Text="X:"/><Run Text="{Binding CurrentPlayer.WorldMap.CameraLookatPos.X, StringFormat={}{0:0.}}"/>
                            <Run Text="Y:"/><Run Text="{Binding CurrentPlayer.WorldMap.CameraLookatPos.Y, StringFormat={}{0:0.}}"/>
                        </TextBlock>

                        <!-- Buttons around the minimap -->
                        <ls:LSButton x:Name="TadpoleBtn" VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIToggleTadpolePowers'}" ls:LSButton.BoundEvent="UIToggleTadpolePowers" Command="{Binding Path=DataContext.CustomEvent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" CommandParameter="OpenTadpoleTree" SoundID="UI_HUD_EscapeMenu" ls:TutorialProperties.TargetID="TUT_TadpoleTree" ls:TutorialProperties.ModalType="TopRight" Visibility="Collapsed" Margin="-60,0,0,0">
                            <ls:LSButton.Template>
                                <ControlTemplate TargetType="ls:LSButton">
                                    <Grid x:Name="BtnRoot">
                                        <Grid.ToolTip>
                                            <ls:LSTooltip Content="{Binding ElementName=BtnRoot,Path=DataContext}"/>
                                        </Grid.ToolTip>
                                        <Image x:Name="Bg" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpoleEmpty_d.png" Stretch="None"/>
                                        <Image x:Name="TadpoleIcon" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/ICO_TadpoleGold.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                            <Image.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform x:Name="TadpoleScale" ScaleX="1" ScaleY="1"/>
                                                </TransformGroup>
                                            </Image.RenderTransform>
                                        </Image>

                                        <Grid x:Name="HudTadpoleCount" HorizontalAlignment="Left" VerticalAlignment="Top" Width="60" Height="60" Margin="-8,-8,0,0" Visibility="Collapsed">
                                            <Image HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="None" Source="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/Btn_TadpoleCounter.png"></Image>
                                            <TextBlock x:Name="TadpoleCount" Text="{Binding DataContext.CurrentPlayer.PartyTadpoleCount, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="{StaticResource ScaledMediumFontSize}">
                                            </TextBlock>
                                        </Grid>

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpoleEmpty_h.png" TargetName="Bg"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpoleEmpty_p.png" TargetName="Bg"/>
                                            <Setter TargetName="TadpoleIcon" Property="Margin" Value="0,4,0,0" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpoleEmpty_disabled.png" TargetName="Bg"/>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding DataContext.CurrentPlayer.PartyTadpoleCount, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True">
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpolePopulated_d.png" TargetName="Bg"/>
                                            <Setter TargetName="TadpoleIcon" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="HudTadpoleCount" Property="Visibility" Value="Visible"/>
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Name="TadpolePulseStoryboard">
                                                    <Storyboard x:Name="PulsingAnimation" RepeatBehavior="Forever" Duration="0:3:0">
                                                        <DoubleAnimation Storyboard.TargetName="TadpoleScale" Storyboard.TargetProperty="ScaleX" From="1" To="1.3" AutoReverse="True" Duration="0:0:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetName="TadpoleScale" Storyboard.TargetProperty="ScaleY" From="1" To="1.3" AutoReverse="True" Duration="0:0:0.2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="TadpolePulseStoryboard"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.CurrentPlayer.PartyTadpoleCount, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpolePopulated_h.png" TargetName="Bg"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                                                <Condition Binding="{Binding DataContext.CurrentPlayer.PartyTadpoleCount, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpolePopulated_p.png" TargetName="Bg"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                                                <Condition Binding="{Binding DataContext.CurrentPlayer.PartyTadpoleCount, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource GreaterThanConverter}, ConverterParameter='0'}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Source" Value="pack://application:,,,/GustavNoesisGUI;component/Assets/TadpoleTree/BTN_TadpolePopulated_disabled.png" TargetName="Bg"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ls:LSButton.Template>
                        </ls:LSButton>

                        <ls:LSButton Margin="0,-10,-10,0" VerticalAlignment="Top" HorizontalAlignment="Right" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleInGameMenu'}"
                                 Template="{StaticResource PanelButtonWT}" Command="{Binding Path=DataContext.CustomEvent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" CommandParameter="ToggleGameMenu"
                                 SoundID="UI_HUD_EscapeMenu"
                                 IsEnabled="{Binding DataContext.CurrentPlayer.UIData.IsGameMenuAllowed, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}">
                            <ls:LSButton.Resources>
                                <BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_menu_d.png" />
                                <BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_menu_h.png" />
                                <BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_menu_d.png" />
                            </ls:LSButton.Resources>
                        </ls:LSButton>

                        <ls:LSButton Margin="0,28,94,0" VerticalAlignment="Top" HorizontalAlignment="Right" Command="ls:LSWorldMap.ZoomInCommand" CommandTarget="{Binding ElementName=WorldMap}" SoundID="UI_HUD_Map_Zoom" Template="{StaticResource IconButtonTemplate}">
                            <ls:LSButton.Resources>
                                <BitmapImage x:Key="ButtonNormal" UriSource="{Binding UriSource, Source={StaticResource BtnSmallRound}}"/>
                                <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_h.png</ImageSource>
                                <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_p.png</ImageSource>
                                <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_disabled.png</ImageSource>
                                <ImageSource x:Key="IconNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_plus_d.png</ImageSource>
                                <ImageSource x:Key="IconHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_plus_h.png</ImageSource>
                                <ImageSource x:Key="IconPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_plus_h.png</ImageSource>
                                <ImageSource x:Key="IconDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_plus_disabled.png</ImageSource>
                                <System:Double x:Key="IconWidth">32</System:Double>
                                <System:Double x:Key="IconHeight">32</System:Double>
                            </ls:LSButton.Resources>
                        </ls:LSButton>

                        <ls:LSButton Margin="0,56,61,0" VerticalAlignment="Top" HorizontalAlignment="Right" Command="ls:LSWorldMap.ZoomOutCommand" CommandTarget="{Binding ElementName=WorldMap}" SoundID="UI_HUD_Map_Zoom" Template="{StaticResource IconButtonTemplate}">
                            <ls:LSButton.Resources>
                                <BitmapImage x:Key="ButtonNormal" UriSource="{Binding UriSource, Source={StaticResource BtnSmallRound}}"/>
                                <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_h.png</ImageSource>
                                <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_p.png</ImageSource>
                                <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_disabled.png</ImageSource>
                                <ImageSource x:Key="IconNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_minus_d.png</ImageSource>
                                <ImageSource x:Key="IconHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_minus_h.png</ImageSource>
                                <ImageSource x:Key="IconPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_minus_h.png</ImageSource>
                                <ImageSource x:Key="IconDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_minus_disabled.png</ImageSource>
                                <System:Double x:Key="IconWidth">32</System:Double>
                                <System:Double x:Key="IconHeight">32</System:Double>
                            </ls:LSButton.Resources>
                        </ls:LSButton>

                        <ls:LSButton x:Name="CenterBtn" Margin="0,88,32,0" VerticalAlignment="Top" HorizontalAlignment="Right" Command="{Binding DataContext.SetCameraOnGameObject,RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding CurrentPlayer.SelectedCharacter}" Template="{StaticResource IconButtonTemplate}">
                            <ls:LSButton.Resources>
                                <BitmapImage x:Key="ButtonNormal" UriSource="{Binding UriSource, Source={StaticResource BtnSmallRound}}"/>
                                <ImageSource x:Key="ButtonHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_h.png</ImageSource>
                                <ImageSource x:Key="ButtonPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_p.png</ImageSource>
                                <ImageSource x:Key="ButtonDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Buttons/btn_small_round_disabled.png</ImageSource>
                                <ImageSource x:Key="IconNormal">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_centerCam_d.png</ImageSource>
                                <ImageSource x:Key="IconHighlight">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_centerCam_h.png</ImageSource>
                                <ImageSource x:Key="IconPressed">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_centerCam_h.png</ImageSource>
                                <ImageSource x:Key="IconDisabled">pack://application:,,,/GustavNoesisGUI;component/Assets/Minimap/ico_centerCam_disabled.png</ImageSource>
                                <System:Double x:Key="IconWidth">32</System:Double>
                                <System:Double x:Key="IconHeight">32</System:Double>
                            </ls:LSButton.Resources>
                            <ls:LSButton.ToolTip>
                                <ls:LSTooltip Content="{Binding DataContext.CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='CameraCenter' , ElementName=CenterBtn}" IsHitTestVisible="False" Placement="Left" VerticalOffset="4"/>
                            </ls:LSButton.ToolTip>
                        </ls:LSButton>

						<!-- Buttons below the minimap -->
						<StackPanel Orientation="Horizontal" Margin="0,0,0,-80" VerticalAlignment="Bottom" HorizontalAlignment="Center">
							<ls:LSButton Template="{StaticResource PanelButtonWT}" Command="{Binding Path=DataContext.CustomEvent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" CommandParameter="ToggleJournalQuests" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleJournal'}" SoundID="UI_HUD_Journal" BoundEvent="ToggleJournal">
								<ls:LSButton.Resources>
									<BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_journal_d.png" />
									<BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_journal_h.png" />
									<BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_journal_d.png" />
								</ls:LSButton.Resources>
							</ls:LSButton>
							
							<ls:LSButton Template="{StaticResource PanelButtonWT}" Command="{Binding Path=DataContext.CustomEvent, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" CommandParameter="ToggleJournalMap" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleMap'}"
									 BoundEvent="ToggleMap" SoundID="UI_HUD_Map">
								<ls:LSButton.Resources>
									<BitmapImage x:Key="Icon_Normal" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_map_d.png" />
									<BitmapImage x:Key="Icon_Hover" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_map_h.png" />
									<BitmapImage x:Key="Icon_Pressed" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/BottomBar/ico_map_d.png" />
								</ls:LSButton.Resources>
							</ls:LSButton>

							<ls:LSToggleButton x:Name="PingButton" Command="{Binding Path=DataContext.RequestPingState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" DataContext="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='Ping'}" ToolTipService.Placement="Top" ToolTipService.IsEnabled="True" ToolTipService.VerticalOffset="4">
								<ls:LSToggleButton.ToolTip>
									<ls:LSTooltip Content="{Binding ElementName=PingButton,Path=DataContext}"/>
								</ls:LSToggleButton.ToolTip>
								<ls:LSToggleButton.Template>
									<ControlTemplate TargetType="ToggleButton">
										<Grid>
											<Image x:Name="bg" Source="{StaticResource mnmBtnNormal}" Stretch="None"/>
											<Image x:Name="img" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" Source="{StaticResource pingBtnNormal}"/>
										</Grid>

										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter TargetName="bg" Property="Source" Value="{StaticResource mnmBtnHover}"/>
												<Setter TargetName="img" Property="Source" Value="{StaticResource pingBtnHover}"/>
											</Trigger>

											<Trigger Property="IsChecked" Value="True">
												<Setter TargetName="bg" Property="Source" Value="{StaticResource mnmBtnHover}"/>
												<Setter TargetName="img" Property="Source" Value="{StaticResource pingBtnHover}"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</ls:LSToggleButton.Template>
							</ls:LSToggleButton>
						
						</StackPanel>

                    </Grid>
					<!-- MOD END -->
                    
                    <ContentPresenter x:Name="StoryTimer" HorizontalAlignment="Right" Margin="0,6,0,0" Content="{Binding CurrentPlayer.SelectedCharacter.StoryTimer}" Visibility="Collapsed" Style="{StaticResource StoryTimerStyle}"/>

                    <StackPanel x:Name="DebugInfo" Panel.ZIndex="2" Margin="0,28,30,0" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding Data.IsGold, Converter={StaticResource BoolToCollapsedConverter}}">

                        <!-- Additional debug info -->
                        <TextBlock Foreground="{StaticResource LS_specialTxtColor}" TextAlignment="Right" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="6">
                            <Run Text="Live UI -"/>
                            <Run Text="{Binding Data.DebugData.BuildType}"/>
                        </TextBlock>
                        <TextBlock Foreground="{StaticResource LS_specialTxtColor}" TextAlignment="Right" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="6">
                            <Run Text="{Binding Data.DebugData.MainModName, StringFormat=' {0} -'}"/>
                            <Run Text="{Binding Data.DebugData.CurrentLevelName}"/>
                        </TextBlock>

                        <!-- Active rulesets -->
                        <ItemsControl ItemsSource="{Binding Data.DebugData.ActiveRulesets}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Line}" Foreground="{StaticResource LS_baseTxtColor}" TextAlignment="Right" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="6"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- EA text + version -->
                        <TextBlock Foreground="{StaticResource LS_specialTxtColor}" Text="{Binding Data.VersionString}" Panel.ZIndex="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" TextAlignment="Right" noesis:Text.Stroke="Black" noesis:Text.StrokeThickness="6"/>
                    </StackPanel>

                    <ItemsControl x:Name="NotificationsContainer" ItemsSource="{Binding CurrentPlayer.UIData.Tutorials}"
                              AlternationCount="{Binding CurrentPlayer.UIData.Tutorials.Count}" VerticalAlignment="Top"
                              HorizontalAlignment="Right" Width="800" ItemTemplate="{StaticResource TutorialNotification}"
                              MaxHeight="945" />
                </StackPanel>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding CurrentPlayer.IsRequestingPing}" Value="False">
                    <Setter TargetName="PingButton" Property="IsChecked" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.IsRequestingPing}" Value="True">
                    <Setter TargetName="PingButton" Property="IsChecked" Value="True"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.StoryTimer, Converter={StaticResource NullToBoolFalseConverter}}" Value="True">
                    <Setter TargetName="StoryTimer" Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.PartyUnlockedTadpolePowers}" Value="True">
                    <Setter TargetName="TadpoleBtn" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CombatLogSize}" Value="Expanded">
                    <Setter TargetName="NotificationsContainer" Property="MaxHeight" Value="840"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.CombatLogSize}" Value="SuperExpanded">
                    <Setter TargetName="NotificationsContainer" Property="MaxHeight" Value="420"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyInventory">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyEquipment">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="Dialogue">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="PartyCharacterSheet">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <DataTrigger Binding="{Binding CurrentPlayer.UIData.PreviousState}" Value="SpellBook">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard  Storyboard="{StaticResource Hud.AnimIn}" />
                    </DataTrigger.EnterActions>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.UIData.InPlayerPanels}" Value="True">
                    <Setter TargetName="MinimapContainer" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding CurrentPlayer.SelectedCharacter.IsInDangerZone}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="DangerZoneGlowAnimation">
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DangerZoneGlowAnimated" Storyboard.TargetProperty="(UIElement.Opacity)" AutoReverse="True">
                                    <EasingDoubleKeyFrame Value="0.6" KeyTime="0:0:0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                    <EasingDoubleKeyFrame Value="0.1" KeyTime="0:0:4">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="DangerZoneGlowAnimation"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </ls:UIWidget.ContentTemplate>
</ls:UIWidget>
