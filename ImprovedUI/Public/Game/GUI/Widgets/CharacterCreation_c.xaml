<ls:UIWidget x:Name="CharacterCreation_c"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:ls="clr-namespace:ls;assembly=SharedGUI"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:noesis="clr-namespace:NoesisGUIExtensions;assembly=Noesis.GUI.Extensions"
	xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	mc:Ignorable="d"
	d:DesignHeight="2160" d:DesignWidth="3840"
	ls:UIWidget.ContextName="CharacterCreation"
	ls:TooltipExtender.Owner="{Binding DummyCharacter}"
	d:DataContext="{d:DesignInstance {x:Type ls:DCCharacterCreation}, IsDesignTimeCreatable=True}"
	FocusDown="UIDown" FocusLeft="UILeft" FocusRight="UIRight" FocusUp="UIUp" ls:MoveFocus.FocusMovementMode="Closest" CanCacheFocusSurroundingElements="False">

	<ls:UIWidget.Resources>
		<ResourceDictionary>

			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../Library/CCLib_c.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<!-- Message box to ensure user wants to activate tutorials -->
			<ls:LSMessageBoxData x:Key="MessageBoxTutorialsCheck"
								 Text="{Binding Source='h86f06e64g4588g4798gb828gf6e0268122af', Converter={StaticResource TranslatedStringConverter}}"
								 Title="{Binding Source='h402bb6d3gff93g4f4fga983g36460a611cab', Converter={StaticResource TranslatedStringConverter}}"
								 UUID="UUIDTutorialsCheck" CheckBox="True" CheckBoxValue="True">
				<ls:LSMessageBoxData.Actions>
					<ls:LSGameCommandData ActionName="{Binding Source='h31d65d36gfe5fg4f9bg9184g9f8ceee5f3ed', Converter={StaticResource TranslatedStringConverter}}"
										  Command="{Binding DataContext.CheckShowTutorialsQuestion, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"
										  BoundInput="{Binding DataContext.CurrentPlayer.UIData.InputEvents, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIAccept'}"/>
				</ls:LSMessageBoxData.Actions>
			</ls:LSMessageBoxData>

			<ControlTemplate x:Key="originControlsTemplate">
				<ControlTemplate.Resources>
					<BitmapImage x:Key="originFrame" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/Shared_c/c_itemHolderAlt.png"/>
				</ControlTemplate.Resources>
				<StackPanel>

					<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=h19e906f0g930ag4c5agaad9gd0413fc716c0, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>

					<ListBox x:Name="originCarousel" Template="{StaticResource IconCarouselTemplate}" ItemsSource="{Binding FilteredItems, ElementName=SelectablePresetOriginsCollection}" SelectedItem="{Binding SelectedOrigin}" Margin="0,30,0,0">

						<ListBox.Resources>
							<ControlTemplate x:Key="IconsTemplate">
								<Grid>

									<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
										<StackPanel.OpacityMask>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
												<GradientStop Offset="0" Color="Transparent" />
												<GradientStop Offset="0.2" Color="White" />
												<GradientStop Offset="0.8" Color="White" />
												<GradientStop Offset="1" Color="Transparent" />
											</LinearGradientBrush>
										</StackPanel.OpacityMask>
										<Border Margin="6,0,6,0" BorderThickness="4" Height="228" BorderBrush="#251e19" Padding="6,6,6,6" Opacity="0.7" Background="#80000000">
											<Rectangle Fill="{Binding SelectedItem.Prev.Prev.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="162" Height="206"/>
										</Border>

										<Border Margin="6,0,6,0" BorderThickness="4" Height="228" BorderBrush="#251e19" Padding="6,6,6,6" Opacity="0.7" Background="#80000000">
											<Grid>

												<Rectangle Fill="{Binding SelectedItem.Prev.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="162" Height="206"/>
												<Image Visibility="{Binding SelectedItem.Prev.IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={StaticResource BoolToCollapsedConverter}}" Source="{StaticResource IconLock}" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20"/>
											</Grid>
										</Border>


										<ls:LSNineSliceImage x:Name="Img3" Margin="-8,-32,-8,-32" Padding="28,28,28,28"
														 ImageSource="{StaticResource originFrame}" Slices="34" Opacity="1">

												<Grid>
													<Rectangle x:Name="selected" Fill="{Binding SelectedItem.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="202" Height="260"/>
													<Image x:Name="lock" Visibility="Collapsed" Source="{StaticResource IconLock}" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20"/>
													<Ellipse x:Name="otherPlayer" Height="50" Width="50" Fill="{Binding SelectedItem.OtherPlayerChoice.CommunityIcon, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,20"/>
												</Grid>
									 
										</ls:LSNineSliceImage>

										<Border Margin="6,0,6,0" BorderThickness="4" Height="228" BorderBrush="#251e19" Padding="6,6,6,6" Opacity="0.7" Background="#80000000">
											<Grid >

												<Rectangle Fill="{Binding SelectedItem.Next.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="162" Height="206"/>
												<Image Visibility="{Binding SelectedItem.Next.IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Converter={StaticResource BoolToCollapsedConverter}}" Source="{StaticResource IconLock}" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,20"/>
											</Grid>
										</Border>

										<Border Margin="6,0,6,0" BorderThickness="4" Height="228" BorderBrush="#251e19" Padding="6,6,6,6" Opacity="0.7" Background="#80000000">
											<Rectangle Fill="{Binding SelectedItem.Next.Next.Portrait, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Width="162" Height="206" />
										</Border>



									</StackPanel>
									<TextBlock x:Name="disableReason" Visibility="Collapsed" ls:TextBlockFormatter.SourceText="{Binding Path=SelectedItem.DisableReason, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" FontSize="{StaticResource ScaledDefaultFontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

								</Grid>
								<ControlTemplate.Triggers>
									<DataTrigger Binding="{Binding SelectedItem.IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Value="False">
										<Setter TargetName="lock" Property="Visibility" Value="Visible"/>
										<Setter TargetName="disableReason" Property="Visibility" Value="Visible"/>
									</DataTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</ListBox.Resources>
					</ListBox>
				   
				</StackPanel>
				<ControlTemplate.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1"/>
							<Condition Binding="{Binding ElementName=originCarousel, Path=SelectedItem}" Value="{x:Null}"/>
						</MultiDataTrigger.Conditions>
						<Setter TargetName="originCarousel" Property="SelectedIndex" Value="0"/>
					</MultiDataTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>

			<ControlTemplate x:Key="setDaisyCamera">
				<Canvas>
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="Loaded">

							<b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
							<b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
								<b:InvokeCommandAction.CommandParameter>
									<MultiBinding Converter="{StaticResource PassThroughConverter}">
										<Binding>
											<Binding.Source>
												<System:Single>-6</System:Single>
											</Binding.Source>
										</Binding>
										<Binding>
											<Binding.Source>
												<System:Single>-4</System:Single>
											</Binding.Source>
										</Binding>
										<Binding>
											<Binding.Source>
												<System:Single>0.5</System:Single>
											</Binding.Source>
										</Binding>
									</MultiBinding>
								</b:InvokeCommandAction.CommandParameter>
							</b:InvokeCommandAction>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</Canvas>
			</ControlTemplate>

			<ControlTemplate x:Key="setDaisyCamera_Splitscreen">
				<Canvas>
					<b:Interaction.Triggers>
						<b:EventTrigger EventName="Loaded">

							<b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
							<b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
								<b:InvokeCommandAction.CommandParameter>
									<MultiBinding Converter="{StaticResource PassThroughConverter}">
										<Binding>
											<Binding.Source>
												<System:Single>-0.5</System:Single>
											</Binding.Source>
										</Binding>
										<Binding>
											<Binding.Source>
												<System:Single>-1.5</System:Single>
											</Binding.Source>
										</Binding>
										<Binding>
											<Binding.Source>
												<System:Single>0.5</System:Single>
											</Binding.Source>
										</Binding>
									</MultiBinding>
								</b:InvokeCommandAction.CommandParameter>
							</b:InvokeCommandAction>
						</b:EventTrigger>
					</b:Interaction.Triggers>
				</Canvas>
			</ControlTemplate>




		</ResourceDictionary>
	</ls:UIWidget.Resources>


	<b:Interaction.Triggers>
		<b:EventTrigger EventName="Loaded">
			<!-- Start with Tooltips enabled -->
			<b:InvokeCommandAction Command="{Binding EnableTooltipOnUIElement}"/>
			<b:InvokeCommandAction Command="{Binding OpenShowTutorialsQuestion}" CommandParameter="{StaticResource MessageBoxTutorialsCheck}"/>
		</b:EventTrigger>

		<b:EventTrigger EventName="GotKeyboardFocus">
			<b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding Path=FocusedElement, ElementName=CharacterCreation_c}"/>
		</b:EventTrigger>
		<b:DataTrigger Binding="{Binding HasInputEnabled, ElementName=CharacterCreation_c}" Value="True">
			<b:InvokeCommandAction Command="{Binding ShowTooltipOnUIElement}" CommandParameter="{Binding FocusedElement, ElementName=CharacterCreation_c}"/>
		</b:DataTrigger>

		<b:EventTrigger EventName="MoveFocusUp">
			<ls:LSPlaySound Sound="UI_Shared_Hover" />
		</b:EventTrigger>

		<b:EventTrigger EventName="MoveFocusDown">
			<ls:LSPlaySound Sound="UI_Shared_Hover" />
		</b:EventTrigger>

		<b:EventTrigger EventName="MoveFocusRight">
			<ls:LSPlaySound Sound="UI_Shared_Hover" />
		</b:EventTrigger>

		<b:EventTrigger EventName="MoveFocusLeft">
			<ls:LSPlaySound Sound="UI_Shared_Hover" />
		</b:EventTrigger>
	</b:Interaction.Triggers>

	<b:Interaction.Behaviors>
		<ls:CollectionFilterBehavior x:Name="CustomOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsCustomOriginPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="PresetOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsNotCustomOriginPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="SelectablePresetOriginsCollection" ItemsSource="{Binding SelectableOrigins}" Predicate="{Binding IsNotCustomSelectableOriginPredicate}"/>

		<ls:CollectionFilterBehavior x:Name="RaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="SubRaceProgressions" ItemsSource="{Binding RaceProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="ClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="SubClassProgressions" ItemsSource="{Binding ClassProgressionDetails.Progressions}" Predicate="{Binding IsSubProgressionPredicate}"/>

		<ls:CollectionFilterBehavior x:Name="RaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="SubRaceSpellSelectors" ItemsSource="{Binding RaceProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="ClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="SubClassSpellSelectors" ItemsSource="{Binding ClassProgressionDetails.SpellSelectors}" Predicate="{Binding IsSubProgressionPredicate}"/>

		<!-- MOD START - Racial passive selection -->
		<ls:CollectionFilterBehavior x:Name="RacePassiveFeatures" ItemsSource="{Binding RacePassiveFeatures}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="SubRacePassiveFeatures" ItemsSource="{Binding RacePassiveFeatures}" Predicate="{Binding IsSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="RacePassiveSelectors" ItemsSource="{Binding RaceProgressionDetails.NotSubPassiveSelectors}"/>
		<ls:CollectionFilterBehavior x:Name="SubRacePassiveSelectors" ItemsSource="{Binding RaceProgressionDetails.SubPassiveSelectors}"/>
		<!-- MOD END -->
		<ls:CollectionFilterBehavior x:Name="ClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsNotSubProgressionPredicate}"/>
		<ls:CollectionFilterBehavior x:Name="SubClassPassiveFeatures" ItemsSource="{Binding PassiveFeatures}" Predicate="{Binding IsSubProgressionPredicate}"/>

		<ls:CollectionSortBehavior x:Name="SortedRaceSkills" ItemsSource="{Binding AllSkills.RaceProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
		<ls:CollectionSortBehavior x:Name="SortedClassSkills" ItemsSource="{Binding AllSkills.ClassProficientSkills.Skills}" Comparer="{Binding SkillSortComparer}" />
		<ls:CollectionSortBehavior x:Name="SortedExpertiseSkills" ItemsSource="{Binding AllSkills.ExpertiseSkills.Skills}" Comparer="{Binding SkillSortComparer}" />

		<ls:CollectionSortBehavior x:Name="SortedSummarySkills" ItemsSource="{Binding ProgressionData.AllProgressions.Skills}" Comparer="{Binding SkillSortComparer}" />

		<ls:CollectionSortBehavior x:Name="SortedPreparableSpells" ItemsSource="{Binding SpellPrepare.Preparable}" Comparer="{Binding SpellByLevelSortComparer}" />
		<ls:CollectionSortBehavior x:Name="SortedPreparableSpellGroupsByLevel" ItemsSource="{Binding SpellPrepare.PreparableByLevel}" Comparer="{Binding SpellGroupByLevelSortComparer}" />
	</b:Interaction.Behaviors>

	<ls:UIWidget.ContentTemplate>
		<DataTemplate>

			<Grid x:Name="widgetBase" IsEnabled="{Binding IsLocked, Converter={StaticResource InvertBoolConverter}}">

				<b:Interaction.Triggers>
					<b:DataTrigger Binding="{Binding CharacterCreationStep}" Value="Companion">
						<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
						<b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Hidden" />
						<b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
						<b:ChangePropertyAction TargetName="readyInfoPage" PropertyName="Visibility" Value="Collapsed" />
					</b:DataTrigger>

					<b:DataTrigger Binding="{Binding CharacterCreationStep}" Value="Finish">
						<!-- Multiplayer Ready -->
						<b:ChangePropertyAction TargetName="widgetBase" PropertyName="IsEnabled" Value="True" />
						<b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Hidden" />
						<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
						<b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
						<b:ChangePropertyAction TargetName="readyInfoPage" PropertyName="Visibility" Value="Visible" />
					</b:DataTrigger>
				</b:Interaction.Triggers>

				<Control x:Name="gamePlayPage" ls:MoveFocus.IsMoveFocusScope="True">

					<Control.Template>
						<ControlTemplate TargetType="Control">
							<Grid>

								<Grid>
									<Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>
									<Rectangle x:Name="leftSideShading" HorizontalAlignment="Left" Width="{StaticResource leftSidePanelBackgroundWidthSplitscreen}" Fill="{StaticResource LeftSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}"/>

									<!-- FocusScope for returning from Summary -->
									<Grid x:Name="leftSidePanels" ls:MoveFocus.IsMoveFocusScope="True" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="1218" Margin="0,140,0,0">

										<ContentControl x:Name="gameplaySubPanel" Content="{Binding .}">
											<b:Interaction.Triggers>
												<b:PropertyChangedTrigger Binding="{Binding Path=SelectedIndex, ElementName=gameplayTabs}">
													<b:Interaction.Behaviors>
														<b:ConditionBehavior>
															<b:ConditionalExpression>
																<b:ComparisonCondition LeftOperand="{Binding Path=SelectedIndex, ElementName=gameplayTabs}" Operator="NotEqual" RightOperand="-1"/>
															</b:ConditionalExpression>
														</b:ConditionBehavior>
													</b:Interaction.Behaviors>
													<!-- clear subtab panel -->
													<b:ChangePropertyAction TargetName="gameplaySubPanel" PropertyName="DataContext" Value="{x:Null}"/>
												</b:PropertyChangedTrigger>
											</b:Interaction.Triggers>
										</ContentControl>

										<Control x:Name="gameplayPanel" Height="{StaticResource gameplayPanelHeightSplit}"/>
																			 
									</Grid>

									<ls:LSButton x:Name="focusGameplayPanelButton" 
												 Visibility="Hidden" 
												 Tag=" "
												 ContentTemplate="{StaticResource ControllerButtonHint}"
												 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='JumpToFromTab'}"
												 BoundEvent="JumpToFromTab"
												 HorizontalAlignment="Left"
												 VerticalAlignment="Top"
												 Margin="50,230,0,0">
										<b:Interaction.Triggers>
											<b:EventTrigger EventName="Click" >
												<b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
												<b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
												<b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
												<b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
												<b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
												<ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
												<b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
											</b:EventTrigger>
										</b:Interaction.Triggers>
									</ls:LSButton>


									<Control x:Name="appearanceBackground"/>
									<Control x:Name="appearancePanel" Height="{StaticResource appearancePanelHeight_SplitScreen}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,212,50,0"/>

									<Grid x:Name="tabNavigation" Tag="None">

										<b:Interaction.Triggers>
											<b:DataTrigger Binding="{Binding Tag, ElementName=tabNavigation}" Value="GoBack">
												<b:InvokeCommandAction Command="{Binding SetupGameplayTabNavigation}" CommandParameter="{Binding ElementName=gameplayTabs}"/>
												<b:ChangePropertyAction TargetName="tabNavigation" PropertyName="Tag" Value="None" />
											</b:DataTrigger>
										</b:Interaction.Triggers>

										<Rectangle x:Name="tabBarBackground" Width="3000" Height="{StaticResource TabsPanelHeight}" Fill="{StaticResource NavShadingBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"/>

										<StackPanel x:Name="tabBar" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="216,0,0,0" Width="3000" Tag="CanJumpToAppearance">

											<Grid x:Name="tabBarClipper" Width="3000" ClipToBounds="True" Tag="430">

												<Grid x:Name="backplate" Width="{Binding GameplayBackplateWidth}" Height="{StaticResource TabsPanelHeight}" HorizontalAlignment="Left" VerticalAlignment="Top" Visibility="Hidden">
													<Grid.Background>
														<LinearGradientBrush Opacity="1.0" StartPoint="0,0" EndPoint="0,1">
															<GradientStop Offset="0" Color="{StaticResource transparentBlack}"/>
															<GradientStop Offset="0.5" Color="#70af8768"/>
															<GradientStop Offset="1.0" Color="#b0af8768" />
														</LinearGradientBrush>
													</Grid.Background>

													<!-- Set Backplate position - todo improve animation -->
													<Grid.RenderTransform>
														<TranslateTransform X="0" Y="0"/>
													</Grid.RenderTransform>

													<b:Interaction.Triggers>

														<!-- Animated SelectedGameplayTabOffset -->
														<b:PropertyChangedTrigger Binding="{Binding Path=DataContext.SelectedGameplayTabOffset, ElementName=gameplayTabs}">
															<b:ControlStoryboardAction ControlStoryboardOption="Play">
																<b:ControlStoryboardAction.Storyboard>
																	<Storyboard x:Name="slideBackplate">

																		<DoubleAnimation Storyboard.TargetName="backplate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource BackplateSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
																			<DoubleAnimation.To>
																				<MultiBinding Converter="{StaticResource AddMultipleConverter}">

																					<!-- Tab Offset (could be shared?) -->
																					<Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
																					<Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
																					<Binding ElementName="tabBarClipper" Path="Tag"/>

																					<!-- Add backplate offset -->
																					<Binding ElementName="gameplayTabs" Path="DataContext.GameplayBackplateOffset"/>

																				</MultiBinding>
																			</DoubleAnimation.To>
																		</DoubleAnimation>

																	</Storyboard>
																</b:ControlStoryboardAction.Storyboard>
															</b:ControlStoryboardAction>

															<!-- Ensure offset calculated after startup animations have completed -->
															<ls:LSControlStoryboard ControlStoryboardOption="Play" CompletedCommand="{Binding SetupGameplayTabNavigation}" CompletedCommandParameter="{Binding ElementName=gameplayTabs}">
																<ls:LSControlStoryboard.Storyboard>
																	<Storyboard x:Name="initialBackplateWidthSetting" Duration="0:0:0.4">
																		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="backplate">
																			<DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
																		</ObjectAnimationUsingKeyFrames>
																	</Storyboard>
																</ls:LSControlStoryboard.Storyboard>
															</ls:LSControlStoryboard>

														</b:PropertyChangedTrigger>

														<!-- For when Splitscreen changes -->
														<b:PropertyChangedTrigger Binding="{Binding Path=Tag, ElementName=tabBarClipper}">
															<b:ControlStoryboardAction ControlStoryboardOption="Play">
																<b:ControlStoryboardAction.Storyboard>
																	<Storyboard x:Name="slideBackplateSplitscreen">

																		<DoubleAnimation Storyboard.TargetName="backplate" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource BackplateSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
																			<DoubleAnimation.To>
																				<MultiBinding Converter="{StaticResource AddMultipleConverter}">

																					<!-- Tab Offset (could be shared?) -->
																					<Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
																					<Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
																					<Binding ElementName="tabBarClipper" Path="Tag"/>

																					<!-- Add backplate offset -->
																					<Binding ElementName="gameplayTabs" Path="DataContext.GameplayBackplateOffset"/>

																				</MultiBinding>
																			</DoubleAnimation.To>
																		</DoubleAnimation>

																	</Storyboard>
																</b:ControlStoryboardAction.Storyboard>
															</b:ControlStoryboardAction>                                                            
														</b:PropertyChangedTrigger>

													</b:Interaction.Triggers>
												</Grid>

												<!-- All the Gameplay Tabs -->
												<ListBox x:Name="gameplayTabs" Template="{StaticResource noScrollViewerListBoxTemplate}" VerticalAlignment="Center">

													<ListBox.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel x:Name="itemsPanel" IsItemsHost="True" Orientation="Horizontal">
																<StackPanel.RenderTransform>
																	<TranslateTransform X="0" Y="0"/>
																</StackPanel.RenderTransform>

																<b:Interaction.Triggers>

																	<!-- Animated SelectedGameplayTabOffset -->
																	<b:PropertyChangedTrigger Binding="{Binding Path=DataContext.SelectedGameplayTabOffset, ElementName=gameplayTabs}">
																		<b:ControlStoryboardAction ControlStoryboardOption="Play">
																			<b:ControlStoryboardAction.Storyboard>
																				<Storyboard x:Name="scrollTabs">

																					<DoubleAnimation Storyboard.TargetName="itemsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource TabsSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
																						<DoubleAnimation.To>
																							<MultiBinding Converter="{StaticResource AddMultipleConverter}">
																								<Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
																								<Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
																								<!-- Added to center tab over related gameplay panel -->
																								<Binding ElementName="tabBarClipper" Path="Tag"/>
																							</MultiBinding>
																						</DoubleAnimation.To>
																					</DoubleAnimation>

																				</Storyboard>
																			</b:ControlStoryboardAction.Storyboard>
																		</b:ControlStoryboardAction>
																	</b:PropertyChangedTrigger>

																	<!-- For when Splitscreen changes -->
																	<b:PropertyChangedTrigger Binding="{Binding Path=Tag, ElementName=tabBarClipper}">
																		<b:ControlStoryboardAction ControlStoryboardOption="Play">
																			<b:ControlStoryboardAction.Storyboard>
																				<Storyboard x:Name="scrollTabsSplitscreen">

																					<DoubleAnimation Storyboard.TargetName="itemsPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Duration="{StaticResource TabsSlideAnimationDuration}" AccelerationRatio="0.25" DecelerationRatio="0.25">
																						<DoubleAnimation.To>
																							<MultiBinding Converter="{StaticResource AddMultipleConverter}">
																								<Binding ElementName="gameplayTabs" Path="DataContext.SelectedGameplayTabOffset" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-1"/>
																								<Binding ElementName="tabSelector" Path="Width" Converter="{StaticResource MultiplierConverter}" ConverterParameter="-0.5"/>
																								<!-- Added to center tab over related gameplay panel -->
																								<Binding ElementName="tabBarClipper" Path="Tag"/>
																							</MultiBinding>
																						</DoubleAnimation.To>
																					</DoubleAnimation>

																				</Storyboard>
																			</b:ControlStoryboardAction.Storyboard>
																		</b:ControlStoryboardAction>
																	</b:PropertyChangedTrigger>

																</b:Interaction.Triggers>

															</StackPanel>
														</ItemsPanelTemplate>
													</ListBox.ItemsPanel>

													<ListBox.ItemContainerStyle>
														<Style TargetType="ListBoxItem">
															<Setter Property="Template" Value="{StaticResource gameplayTabTemplate2}"/>
														</Style>
													</ListBox.ItemContainerStyle>

													<b:Interaction.Triggers>
														
														<b:DataTrigger Binding="{Binding ElementName=gamePlayPage, Path=IsVisible}" Value="True">
															<b:InvokeCommandAction Command="{Binding SetupGameplayTabNavigation}" CommandParameter="{Binding ElementName=gameplayTabs}"/>
														</b:DataTrigger>

														<!-- Only set if not in a subtab -->
														<b:EventTrigger EventName="SelectionChanged">
															<b:Interaction.Behaviors>
																<b:ConditionBehavior>
																	<b:ConditionalExpression>
																		<b:ComparisonCondition LeftOperand="{Binding ElementName=gameplayTabs, Path=SelectedIndex}" Operator="NotEqual" RightOperand="-1"/>
																	</b:ConditionalExpression>
																</b:ConditionBehavior>
															</b:Interaction.Behaviors>
															<b:ChangePropertyAction TargetName="gameplayTabs" PropertyName="Tag" Value="{Binding SelectedIndex, ElementName=gameplayTabs}" />
														</b:EventTrigger>

													</b:Interaction.Triggers>

													<ListBoxItem x:Name="originTab" Tag="origin" IsSelected="True"/>

													<ListBoxItem x:Name="raceTab" Tag="race"/>
													<ListBoxItem x:Name="subRaceTab" Tag="subrace" IsEnabled="{Binding SelectableSubRaces.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>

													<ListBoxItem x:Name="classTab" Tag="class"/>
													<ListBoxItem x:Name="subClassTab" Tag="subclass" IsEnabled="{Binding SelectableSubClasses.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
													<ListBoxItem x:Name="deityTab" Tag="deity" IsEnabled="{Binding SelectableDeities.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
													<ListBoxItem x:Name="spellPrepTab" Tag="spellprep" IsEnabled="{Binding SpellPrepare.Preparable.Count, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>

													<ListBoxItem x:Name="backgroundTab" Tag="background"/>

													<!-- MOD START - Add feat selection into CC -->
													<ListBoxItem x:Name="featTab" Tag="feat" Visibility="{Binding CanSelectFeat, Converter={StaticResource BoolToVisibleConverter}}"/>
													<ListBoxItem x:Name="featDetailsTab" Tag="featdetails" Visibility="{Binding SelectedFeatDetails.HasFeat, Converter={StaticResource BoolToVisibleConverter}}"/>
													<!-- MOD END -->

													<ListBoxItem x:Name="abilityTab" Tag="ability"/>
													<ListBoxItem x:Name="raceSkillsTab" Tag="raceskills" IsEnabled="{Binding AllSkills.RaceProficientSkills.MaxSelectedSkillCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
													<ListBoxItem x:Name="skillsTab" Tag="skills" IsEnabled="{Binding AllSkills.ClassProficientSkills.MaxSelectedSkillCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>
													<ListBoxItem x:Name="expertiseTab" Tag="expertise" IsEnabled="{Binding AllSkills.ExpertiseSkills.MaxSelectedSkillCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}"/>

													<ListBoxItem x:Name="appearanceTab" Tag="appearance"/>

												</ListBox>


											</Grid>

											<Grid x:Name="selectedTabUnderline" HorizontalAlignment="Left" Margin="102,-56,0,0" Width="600">
												<!-- Variable width element, always centered in surrounding Grid -->
												<!-- Width for animation -->
												<ls:LSNineSliceImage x:Name="tabSelector" Style="{StaticResource tabSelectorStyle}" Width="0" Margin="0,-20,0,20"/>
											</Grid>

										</StackPanel>

										<StackPanel x:Name="tabBarButtons" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="50,0,0,0">

											<ls:LSButton x:Name="prevTabButton" 
														 IsEnabled="{Binding HasPrevGameplayTab}"
														 Command="{Binding DataContext.PrevGameplayTab, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
														 CommandParameter="{Binding ElementName=gameplayTabs}"
														 ContentTemplate="{StaticResource ControllerButtonHintImageOnly}"
														 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabPrev, Converter={StaticResource FindInputEventConverter}}"
														 BoundEvent="UITabPrev"
														 Margin="-20,0,-20,0"/>

											<ls:LSButton x:Name="nextTabButton" 
														 IsEnabled="{Binding HasNextGameplayTab}"
														 Command="{Binding DataContext.NextGameplayTab, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" 
														 CommandParameter="{Binding ElementName=gameplayTabs}"
														 ContentTemplate="{StaticResource ControllerButtonHintImageOnly}"
														 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UITabNext, Converter={StaticResource FindInputEventConverter}}"
														 BoundEvent="UITabNext"
														 Margin="-20,0,-20,0"/>
										</StackPanel>
										<Border Margin="{StaticResource ButtonHint.Margin.Left}" HorizontalAlignment="Left" VerticalAlignment="Top">
											<ls:LSButton x:Name="backFromAppearanceButton" Margin="-94,150,0,0"
														 ContentTemplate="{StaticResource ControllerButtonHint}" 
														 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICreate, Converter={StaticResource FindInputEventConverter}}" 
														 BoundEvent="UICreate" 
														 Tag="{Binding Source=hb6342179gece9g4eddgbbe8ga11c8273bbeb,Converter={StaticResource TranslatedStringConverter}}" >
												<b:Interaction.Triggers>
													<b:EventTrigger EventName="Click">
														<b:ChangePropertyAction TargetName="gameplayTabs" PropertyName="SelectedIndex" Value="{Binding Tag, ElementName=tabBar}" />
														<b:ChangePropertyAction TargetName="tabBar" PropertyName="Tag" Value="CanJumpToAppearance" />
														<b:InvokeCommandAction Command="{Binding SetupGameplayTabNavigation}" CommandParameter="{Binding ElementName=gameplayTabs}"/>
													</b:EventTrigger>
												</b:Interaction.Triggers>
											</ls:LSButton>
										</Border>

										<ls:LSNineSliceImage x:Name="InvalidAppearanceError" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="Collapsed" Style="{StaticResource MissingRequirementsErrorStyle}" Margin="0,0,0,430">
											<TextBlock Foreground="{StaticResource CCTabToDo}" Text="{Binding AppearanceValidationError}" VerticalAlignment="Center" />
										</ls:LSNineSliceImage>

										<ls:LSNineSliceImage x:Name="MissingRequirementsMainError" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="Collapsed" Style="{StaticResource MissingRequirementsErrorStyle}" ContentTemplate="{StaticResource MissingRequirementsErrorTemplate}" Margin="0,140,46,0"   Content=""/>

											<ContentControl x:Name="gotoNamingButton" Template="{StaticResource buttonBackplateTemplate}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,148" >
											<ls:LSButton IsEnabled="{Binding IsCharacterCompleteExceptName}"
														ContentTemplate="{StaticResource ControllerButtonHint}" 
														Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIDelete, Converter={StaticResource FindInputEventConverter}}" 
														BoundEvent="UIDelete" 
														Tag="{Binding Source=h29f5143dgf3f8g4185ga82ag411205073b03,Converter={StaticResource TranslatedStringConverter}}">
												<b:Interaction.Triggers>
													<b:EventTrigger EventName="Click">
														<b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Collapsed" />
														<b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Visible" />
													</b:EventTrigger>
												</b:Interaction.Triggers>
											</ls:LSButton>
										</ContentControl>

									</Grid>

								</Grid>

								<Grid x:Name="summary" Visibility="Collapsed" HorizontalAlignment="Right">
									<b:Interaction.Triggers>
										<b:DataTrigger Binding="{Binding ElementName=summary, Path=IsVisible}" Value="False">
											<b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
											<b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
											<b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
											<b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
											<b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
											<ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
											<b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
										</b:DataTrigger>
									</b:Interaction.Triggers>

									<Rectangle x:Name="summaryBackground" HorizontalAlignment="Right" Width="{StaticResource summaryPanelBackgroundWidth}" RenderTransformOrigin="1,0.5" Fill="{StaticResource RightSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}">
										<Rectangle.RenderTransform>
											<ScaleTransform/>
										</Rectangle.RenderTransform>
									</Rectangle>

									<Grid x:Name="summaryAnimPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,230,34,0">
										<Grid.RenderTransform>
											<TranslateTransform X="0"/>
										</Grid.RenderTransform>

										<Control x:Name="summaryPanel" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True" Template="{StaticResource summaryPanelTemplate}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,70,16,0"/>

										<ls:LSInputBinding x:Name="backFromFocusedSummary" IsEnabled="{Binding IsEnabled, ElementName=summaryPanel}" BoundEvent="UICancel">
											<b:Interaction.Triggers>
												<b:EventTrigger EventName="LSInputBindingReleased" >
													<b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="True" />
													<b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
													<b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
													<b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
													<b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
													<ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=leftSidePanels}"/>
													<b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
												</b:EventTrigger>
												<b:EventTrigger EventName="LSInputBindingPressed">
													<ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
												</b:EventTrigger>
											</b:Interaction.Triggers>
										</ls:LSInputBinding>

										<ls:LSButton x:Name="focusSummaryPanelButton" 
													 Tag=" " 
													 ContentTemplate="{StaticResource ControllerButtonHint}"
													 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}"
													 BoundEvent="ToggleSummaryFocus" 
													 HorizontalAlignment="Right"
													 VerticalAlignment="Top">
											<b:Interaction.Triggers>
												<b:EventTrigger EventName="Click" >
													<b:ChangePropertyAction TargetName="leftSidePanels" PropertyName="IsEnabled" Value="False" />
													<b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True" />
													<b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Hidden" />
													<b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Visible" />
													<b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource SummaryBottomButtonsTemplate}"/>
													<ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=summaryPanel}"/>
													<b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
												</b:EventTrigger>
											</b:Interaction.Triggers>
										</ls:LSButton>

									</Grid>
								</Grid>

								<StackPanel x:Name="bottomButtonsHolder" Margin="0,0,24,56" Style="{StaticResource ButtonHint.Container.Right}">
									<Control x:Name="bottomButtons" Template="{StaticResource StandardBottomButtonsTemplate2}"/>
								</StackPanel>

							</Grid>

							<ControlTemplate.Triggers>
								<DataTrigger Binding="{Binding IsCharacterCompleteExceptName}" Value="False">
									<Setter TargetName="MissingRequirementsMainError" Property="Visibility" Value="Visible"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding AppearanceValidationError, Converter={StaticResource NullToBoolFalseConverter}, ConverterParameter='EmptyString', FallbackValue=False}" Value="True">
									<Setter TargetName="InvalidAppearanceError" Property="Visibility" Value="Visible"/>
								</DataTrigger>
								<!-- MOD START - Edit appearance for Origin characters -->
								<!--<DataTrigger Binding="{Binding SelectedOrigin.IsLockedAppearance}" Value="True">
									<Setter TargetName="appearanceTab" Property="Visibility" Value="Collapsed"/>
								</DataTrigger>-->
								<!-- MOD END -->

								<!-- Split Screen variation -->
								<DataTrigger Binding="{Binding Layout}" Value="Common">
									<Setter TargetName="leftSidePanels" Property="Margin" Value="170,140,0,0"/>
									<Setter TargetName="tabBarClipper" Property="Tag" Value="580"/>
									<Setter TargetName="tabBar" Property="Margin" Value="226,0,0,0"/>
									<Setter TargetName="selectedTabUnderline" Property="Margin" Value="252,-54,0,0"/>
									<Setter TargetName="appearancePanel" Property="Height" Value="{StaticResource appearancePanelHeight}"/>
									<Setter TargetName="appearancePanel" Property="Margin" Value="0,212,200,0"/>
									<Setter TargetName="leftSideShading" Property="Width" Value="{StaticResource leftSidePanelBackgroundWidth}"/>
									<Setter TargetName="gameplayPanel" Property="Height" Value="{StaticResource gameplayPanelHeight}" />
									<Setter TargetName="MissingRequirementsMainError" Property="HorizontalAlignment" Value="Center" />
									<Setter TargetName="MissingRequirementsMainError" Property="VerticalAlignment" Value="Bottom" />
									<Setter TargetName="MissingRequirementsMainError" Property="Margin" Value="0,0,0,300" />

									<Setter TargetName="bottomButtonsHolder" Property="Margin" Value="0,0,90,56"/>
								</DataTrigger>

								<!-- Animated Tabs Backplate Width matching -->
								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="race">
									<Setter TargetName="backplate" Property="Width">
										<Setter.Value>
											<MultiBinding Converter="{StaticResource AddMultipleConverter}">
												<Binding Path="ActualWidth" ElementName="raceTab"/>
												<Binding Path="ActualWidth" ElementName="subRaceTab"/>
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subrace">
									<Setter TargetName="backplate" Property="Width">
										<Setter.Value>
											<MultiBinding Converter="{StaticResource AddMultipleConverter}">
												<Binding Path="ActualWidth" ElementName="raceTab"/>
												<Binding Path="ActualWidth" ElementName="subRaceTab"/>
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">
									<Setter TargetName="backplate" Property="Width">
										<Setter.Value>
											<MultiBinding Converter="{StaticResource AddMultipleConverter}">
												<Binding Path="ActualWidth" ElementName="classTab"/>
												<Binding Path="ActualWidth" ElementName="subClassTab"/>
												<Binding Path="ActualWidth" ElementName="deityTab"/>
												<Binding Path="ActualWidth" ElementName="spellPrepTab"/>
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</DataTrigger>
								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">
									<Setter TargetName="backplate" Property="Width">
										<Setter.Value>
											<MultiBinding Converter="{StaticResource AddMultipleConverter}">
												<Binding Path="ActualWidth" ElementName="classTab"/>
												<Binding Path="ActualWidth" ElementName="subClassTab"/>
												<Binding Path="ActualWidth" ElementName="deityTab"/>
												<Binding Path="ActualWidth" ElementName="spellPrepTab"/>
											</MultiBinding>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding Tag, ElementName=tabBar}" Value="CanJumpToAppearance">
									<Setter TargetName="backFromAppearanceButton" Property="Visibility" Value="Collapsed"/>
								</DataTrigger>

								<DataTrigger Binding="{Binding IsEnabled, ElementName=leftSidePanels}" Value="False">
									<Setter TargetName="gotoNamingButton" Property="IsEnabled" Value="False"/>
								</DataTrigger>

								<DataTrigger Binding="{Binding Layout}" Value="Common">
									<Setter TargetName="summary" Property="Visibility" Value="Visible"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="ShowIfPossible">
									<Setter TargetName="summary" Property="Visibility" Value="Visible"/>
									<Setter TargetName="summary" Property="Tag" Value=""/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="HideIfPossible">
									<Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>
									<Setter TargetName="summary" Property="Tag" Value=""/>
								</DataTrigger>

								<!--
								Gameplay Panel Content 
								-->

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="origin">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<DockPanel Margin="0,0,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="{StaticResource gameplayPanelWidth}">
													<DockPanel DockPanel.Dock="Top" Height="Auto" HorizontalAlignment="Center" Width="{StaticResource gameplayPanelWidth}">
														<b:Interaction.Triggers>
															<b:EventTrigger EventName="Loaded">
																<b:ChangePropertyAction TargetName="bottomButtons" PropertyName="Template" Value="{StaticResource StandardBottomButtonsTemplate2}"/>
															</b:EventTrigger>
														</b:Interaction.Triggers>

														<Control Template="{StaticResource setOverviewCamera}"/>


														<!-- Used to set the SelectedOrigin back to Custom Origin -->
														<ListBox DockPanel.Dock="Top" x:Name="allOrigins" Visibility="Collapsed" ItemsSource="{Binding SelectableOrigins}" SelectedItem="{Binding SelectedOrigin}"/>

														<ListBox DockPanel.Dock="Top" x:Name="customCarousel" SelectedIndex="-1" >
															<b:Interaction.Triggers>
																<b:DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="0">
																	<b:ChangePropertyAction TargetName="allOrigins" PropertyName="SelectedIndex" Value="0" />
																</b:DataTrigger>
																<b:DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1">
																	<b:ChangePropertyAction TargetName="allOrigins" PropertyName="SelectedItem" Value="{Binding ElementName=originCarousel, Path=SelectedItem}" />
																</b:DataTrigger>

																<b:EventTrigger EventName="Loaded">
																	<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
																</b:EventTrigger>

															</b:Interaction.Triggers>
															<ListBox.Template>
																<ControlTemplate TargetType="ListBox">
																	<StackPanel Width="{StaticResource gameplayPanelWidth}">
																		<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,12,0,0">
																			<Image x:Name="dot0" Source="{StaticResource DotOff}" Stretch="None" Width="44" Height="44" Margin="-7,0,-7,0"/>
																			<Image x:Name="dot1" Source="{StaticResource DotOff}" Stretch="None" Width="44" Height="44" Margin="-7,0,-7,0"/>
																		</StackPanel>

																		<Grid Height="540" Margin="22,-100,0,-140" HorizontalAlignment="Center" >
																			<ContentControl Template="{StaticResource animatedHalo}" />
																			<StackPanel Margin="-6,-64,0,0" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">

																				<Rectangle x:Name="iconL" Fill="{StaticResource CCIconDefault}" Style="{DynamicResource CustomIconStyle}" Width="200" Height="200" DataContext="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Opacity="{StaticResource DisabledOpacity}">
																					<Rectangle.OpacityMask>
																						<ImageBrush x:Name="iconLimage" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/OriginCharacter.png" />
																					</Rectangle.OpacityMask>
																				</Rectangle>

																				<Rectangle x:Name="iconC" Fill="{StaticResource CCIconSelectedPad}" Style="{DynamicResource CustomIconStyle}" Width="300" Height="300" DataContext="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
																					<Rectangle.OpacityMask>
																						<ImageBrush x:Name="iconCimage" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/OriginCharacter.png" />
																					</Rectangle.OpacityMask>
																				</Rectangle>

																				<Rectangle x:Name="iconR" Fill="{StaticResource CCIconDefault}" Style="{DynamicResource CustomIconStyle}" Width="200" Height="200" DataContext="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Opacity="{StaticResource DisabledOpacity}">
																					<Rectangle.OpacityMask>
																						<ImageBrush  x:Name="iconRimage" ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/OriginCharacter.png"  />
																					</Rectangle.OpacityMask>
																				</Rectangle>

																			</StackPanel>
																		</Grid>


																		<Image Source="{StaticResource CarouselDecoration}" Stretch="None" Margin="25,-60,0,0" Height="108" HorizontalAlignment="Center"/>

																		<ContentControl x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True"  Template="{StaticResource CarouselButtonTemplate}" HorizontalAlignment="Center" Tag="notEnabled">
																			<Grid>
																				<ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" Style="{StaticResource IconCarouselButtonStyle}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="40,0,0,0" SoundID="{DynamicResource CarouselButtonSoundEvent}">
																					<ls:LSButton.RenderTransform>
																						<ScaleTransform ScaleX="-1" CenterX="32"/>
																					</ls:LSButton.RenderTransform>
																				</ls:LSButton>
																				<ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" Style="{StaticResource IconCarouselButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0" SoundID="{DynamicResource CarouselButtonSoundEvent}"/>

																				<TextBlock x:Name="cTxt" Text="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" Style="{StaticResource IconCarouselText}"/>
																				<b:Interaction.Triggers>
																					<b:EventTrigger SourceName="leftBtn" EventName="Click">
																						<ls:SelectNextListBoxItem Reversed="True" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" ForceSelect="True" ForceMode="Cycle"/>
																					</b:EventTrigger>
																					<b:EventTrigger SourceName="rightBtn" EventName="Click">
																						<ls:SelectNextListBoxItem TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}" ForceSelect="True" ForceMode="Cycle"/>
																					</b:EventTrigger>
																				</b:Interaction.Triggers>
																			</Grid>
																		</ContentControl>

																		<Image Source="{StaticResource CarouselDecoration}" Stretch="None" Margin="25,98,0,-148" Height="108" HorizontalAlignment="Center">
																			<Image.RenderTransform>
																				<ScaleTransform ScaleY="-1"></ScaleTransform>
																			</Image.RenderTransform>
																		</Image>

																	</StackPanel>
																	<ControlTemplate.Triggers>
																		<DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="0">
																			<Setter TargetName="iconL" Property="Visibility" Value="Hidden"/>
																			<Setter TargetName="iconC" Property="OpacityMask">
																				<Setter.Value>
																					<ImageBrush  ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/CustomCharacter.png"  />
																				</Setter.Value>
																			</Setter>
																			<Setter TargetName="iconR" Property="OpacityMask" >
																				<Setter.Value>
																					<ImageBrush  ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/OriginCharacter.png"  />
																				</Setter.Value>
																			</Setter>
																			<Setter TargetName="dot0" Property="Source" Value="{StaticResource DotOn}"/>
																		</DataTrigger>
																		<DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1">
																			<Setter TargetName="iconL" Property="OpacityMask" >
																				<Setter.Value>
																					<ImageBrush  ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/CustomCharacter.png"  />
																				</Setter.Value>
																			</Setter>
																			<Setter TargetName="iconC" Property="OpacityMask" >
																				<Setter.Value>
																					<ImageBrush  ImageSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/OriginCharacter.png"  />
																				</Setter.Value>
																			</Setter>
																			<Setter TargetName="iconR" Property="Visibility" Value="Hidden"/>
																			<Setter TargetName="dot1" Property="Source" Value="{StaticResource DotOn}"/>
																		</DataTrigger>

																		<DataTrigger Binding="{Binding FilteredItems.Count, ElementName=SelectablePresetOriginsCollection}" Value="0">
																			<Setter TargetName="iconL" Property="Visibility" Value="Hidden"/>
																			<Setter TargetName="iconR" Property="Visibility" Value="Hidden"/>
																			<Setter TargetName="dot1" Property="Visibility" Value="Collapsed"/>
																			<Setter TargetName="leftBtn" Property="IsEnabled" Value="False"/>
																			<Setter TargetName="rightBtn" Property="IsEnabled" Value="False"/>
																		</DataTrigger>

																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</ListBox.Template>

															<ListBoxItem x:Name="custom" Content="{Binding Source=hf50f6ecagc528g419fg9452g3f6da7e20a90, Converter={StaticResource TranslatedStringConverter}}"/>
															<ListBoxItem x:Name="origin" Content="{Binding Source=hdbd3c4acg4848g48f6g9a4cg2db477ee9b28, Converter={StaticResource TranslatedStringConverter}}"/>
														</ListBox>

														<Control DockPanel.Dock="Top" x:Name="originControls"/>

														<ContentControl x:Name="PlayIntroduction" DockPanel.Dock="Bottom" Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" Visibility="Collapsed">
															<ls:LSButton ContentTemplate="{StaticResource ControllerButtonHint}"
																	 Tag="{Binding Source='h0a5097d1g8471g4a05ga294gf9549ecf2151', Converter={StaticResource TranslatedStringConverter}}" 
																	 Command="{Binding PlayOriginTimeline}"
																	 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}"
																	 BoundEvent="UIAccept"
																	 TapTime="{StaticResource DefaultButtonTapTime}"
																	 Margin="0,0,0,0"/>
														</ContentControl>

														<Viewbox StretchDirection="DownOnly" Stretch="Uniform"  DockPanel.Dock="Top">
															<TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.OriginDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,60"/>
														</Viewbox>

													  

													</DockPanel>


													<ScrollViewer DockPanel.Dock="Top" Style="{StaticResource gameplayPanelScrollViewerStyle}" ls:ScrollViewerHelper.VerticalScrollOffsetMargin="300">
														<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

															<StackPanel x:Name="customControls" Visibility="Collapsed">
																<Control x:Name="bodyType" Template="{StaticResource BodyTypeChoice}" HorizontalAlignment="Center" Margin="0,28,0,0"/>
																<Control x:Name="identity" Template="{StaticResource IdentityChoice}" HorizontalAlignment="Center" Margin="0,20,0,0"/>

																<!-- Randomisation controls -->
																<Control Template="{StaticResource ChangeRandomCharacterCarouselTemplate}" Margin="0,92,0,0"/>

															</StackPanel>
														</StackPanel>
													</ScrollViewer>
												</DockPanel>
												<ControlTemplate.Triggers>

													<DataTrigger Binding="{Binding SelectedOrigin.IsCustom}" Value="True">
														<Setter TargetName="customCarousel" Property="SelectedIndex" Value="0"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding SelectedOrigin.IsCustom}" Value="False">
														<Setter TargetName="customCarousel" Property="SelectedIndex" Value="1"/>
													</DataTrigger>

													<DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="0">
														<Setter TargetName="customControls" Property="Visibility" Value="Visible"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding ElementName=customCarousel, Path=SelectedIndex}" Value="1">
														<Setter TargetName="originControls" Property="Template" Value="{StaticResource originControlsTemplate}"/>
														<Setter TargetName="PlayIntroduction" Property="Visibility" Value="Visible"/>
													</DataTrigger>

													<DataTrigger Binding="{Binding SelectedRace}" Value="{x:Null}">
														<Setter TargetName="bodyType" Property="Visibility" Value="Hidden"/>
													</DataTrigger>

												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="race">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<DockPanel>
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
														</b:EventTrigger>
													</b:Interaction.Triggers>

													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<StackPanel x:Name="raceCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

														<ListBox x:Name="raceCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableRaces}" SelectedItem="{Binding SelectedRace}">
															<ListBox.ItemTemplate>
																<DataTemplate>
																	<Rectangle x:Name="raceIcon" Fill="{StaticResource CCIconSelectedPad}" Style="{StaticResource RaceIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}" Opacity="1"/>
																	<DataTemplate.Triggers>
																		<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
																			<Setter TargetName="raceIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="raceIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="raceIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
																			<Setter TargetName="raceIcon" Property="Opacity" Value="0.8"/>
																		</DataTrigger>
																	</DataTemplate.Triggers>
																</DataTemplate>
															</ListBox.ItemTemplate>
														</ListBox>

														<ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,90,0,0">
															<TextBlock ls:TextBlockFormatter.SourceText="{Binding InfoRaceDescription}" Style="{StaticResource CarouselSideDescriptionText}"/>
														</ContentControl>

													</StackPanel>

													<Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top"/>

													<ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
														<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=RaceProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RaceSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=RaceSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

															<!-- MOD START - Racial passive selection -->
															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RacePassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=RacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}"/>
															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=RacePassiveSelectors}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=RacePassiveSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>
															<!-- MOD END -->

															<Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.RaceProgression}" HorizontalAlignment="Center"/>

														</StackPanel>

													</ScrollViewer>

												</DockPanel>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subrace">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<DockPanel>
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
														</b:EventTrigger>
													</b:Interaction.Triggers>

													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<StackPanel x:Name="subraceCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

														<ListBox x:Name="subraceCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableSubRaces}" SelectedItem="{Binding SelectedSubRace}">
															<ListBox.ItemTemplate>
																<DataTemplate>
																	<Rectangle x:Name="raceIcon" Fill="{StaticResource CCIconSelectedPad}" Style="{StaticResource RaceIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}"/>
																	<DataTemplate.Triggers>
																		<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
																			<Setter TargetName="raceIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="raceIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="raceIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
																			<Setter TargetName="raceIcon" Property="Opacity" Value="0.8"/>
																		</DataTrigger>
																	</DataTemplate.Triggers>
																</DataTemplate>
															</ListBox.ItemTemplate>
														</ListBox>

														<ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,90,0,0">
															<TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.Race.Description}" Style="{StaticResource CarouselSideDescriptionText}"/>
														</ContentControl>

													</StackPanel>

													<Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top"/>

													<ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
														<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRaceSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=SubRaceSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

															<!-- MOD START - Racial passive selection -->
															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRacePassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=RacePassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}"/>
															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubRacePassiveSelectors}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubRacePassiveSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>
															<!-- MOD END -->

															<Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.SubRaceProgression}" HorizontalAlignment="Center"/>

														</StackPanel>
													</ScrollViewer>

												</DockPanel>

											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="class">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<DockPanel>
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
														</b:EventTrigger>
													</b:Interaction.Triggers>

													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<StackPanel x:Name="classCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

														<ListBox x:Name="classCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableClasses}" SelectedItem="{Binding SelectedClass}">
															<ListBox.ItemTemplate>
																<DataTemplate>
																	<!-- MOD START - Use main class instead of subclass icon -->
																	<Image x:Name="classIcon" Style="{StaticResource MainClassIconStyle}" Stretch="None" Opacity="1" />
																	<!-- MOD END -->

																	<DataTemplate.Triggers>
																		<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
																			<Setter TargetName="classIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="classIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="classIcon" Property="Stretch" Value="Uniform"/>
																			<Setter TargetName="classIcon" Property="Opacity" Value="0.9"/>
																			<Setter TargetName="classIcon" Property="Effect">
																				<Setter.Value>
																					<ls:SaturationEffect Saturation="0.6"/>
																				</Setter.Value>
																			</Setter>
																		</DataTrigger>
																	</DataTemplate.Triggers>
																</DataTemplate>
															</ListBox.ItemTemplate>
														</ListBox>

														<ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,70,0,0">
															<TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedClass.Description}" Style="{StaticResource CarouselSideDescriptionText}"/>
														</ContentControl>

													</StackPanel>

													<Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top" />

													<ScrollViewer x:Name="scrollBar" Style="{StaticResource gameplayPanelScrollViewerStyle}" ls:ScrollViewerHelper.VerticalScrollOffsetMargin="124">
														<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=ClassSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=ClassProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

															<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=ClassPassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=ClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}"/>

															<Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.ClassProgression}" HorizontalAlignment="Center"/>

														</StackPanel>
													</ScrollViewer>

												</DockPanel>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="subclass">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<DockPanel>
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
														</b:EventTrigger>
													</b:Interaction.Triggers>

													<StackPanel x:Name="subclassCarouselAndDescription" Orientation="Horizontal" DockPanel.Dock="Top">

														<ListBox x:Name="subclassCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableSubClasses}" SelectedItem="{Binding SelectedSubClass}">
															<ListBox.ItemTemplate>
																<DataTemplate>
																	<Image x:Name="classIcon" Style="{StaticResource ClassIconStyle}" Stretch="None"/>
																	<DataTemplate.Triggers>
																		<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
																			<Setter TargetName="classIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="classIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
																			<Setter TargetName="classIcon" Property="Stretch" Value="Uniform"/>
																			<Setter TargetName="classIcon" Property="Opacity" Value="0.9"/>
																			<Setter TargetName="classIcon" Property="Effect">
																				<Setter.Value>
																					<ls:SaturationEffect Saturation="0.6"/>
																				</Setter.Value>
																			</Setter>
																		</DataTrigger>
																	</DataTemplate.Triggers>
																</DataTemplate>
															</ListBox.ItemTemplate>
														</ListBox>

														<ContentControl Template="{StaticResource PanelSideDescription}" VerticalAlignment="Top" Margin="-50,90,0,0">
															<TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedSubClass.Description}" Style="{StaticResource CarouselSideDescriptionText}"/>
														</ContentControl>

													</StackPanel>

													<StackPanel Width="{StaticResource gameplayPanelWidth}" HorizontalAlignment="Left">

														<Control Template="{StaticResource featuresGainedSubHeader}" HorizontalAlignment="Left" DockPanel.Dock="Top"/>

														<ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
															<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

																<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassProgressions}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassProgressions, Converter={StaticResource CountToVisibilityConverter}}"/>

																<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassPassiveFeatures}" ItemTemplate="{StaticResource progressionSpellsTemplate}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassPassiveFeatures, Converter={StaticResource CountToVisibilityConverter}}"/>

																<ItemsControl ItemsSource="{Binding FilteredItems, ElementName=SubClassSpellSelectors}" ItemTemplate="{StaticResource progressionSpellSelectors}" Visibility="{Binding FilteredItems.Count, ElementName=SubClassSpellSelectors, Converter={StaticResource CountToVisibilityConverter}}"/>

																<Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.SubClassProgression}" HorizontalAlignment="Center"/>

															</StackPanel>
														</ScrollViewer>

													</StackPanel>

												</DockPanel>

											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="deity">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<StackPanel>
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
														</b:EventTrigger>
													</b:Interaction.Triggers>

													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
														<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

															<ListBox x:Name="deityCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableDeities}" SelectedItem="{Binding SelectedDeity}">
																<ListBox.ItemTemplate>
																	<DataTemplate>
																		<Rectangle x:Name="deityIcon" Fill="{StaticResource CCIconSelectedPad}" Style="{StaticResource DeityIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}"/>
																		<DataTemplate.Triggers>
																			<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
																				<Setter TargetName="deityIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
																				<Setter TargetName="deityIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
																				<Setter TargetName="deityIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
																				<Setter TargetName="deityIcon" Property="Opacity" Value="0.8"/>
																			</DataTrigger>
																		</DataTemplate.Triggers>
																	</DataTemplate>
																</ListBox.ItemTemplate>
															</ListBox>

															<TextBlock ls:TextBlockFormatter.SourceText="{Binding SelectedDeity.Description}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>

														</StackPanel>
													</ScrollViewer>
												</StackPanel>

											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="spellprep">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Control Template="{StaticResource spellPrepTemplate}">
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
														</b:EventTrigger>
													</b:Interaction.Triggers>
												</Control>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="background">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<StackPanel>
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
														</b:EventTrigger>
													</b:Interaction.Triggers>

													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<ListBox x:Name="backgroundCarousel" Template="{StaticResource AnimatedIconCarouselTemplate}" ItemsSource="{Binding SelectableBackgrounds}" SelectedItem="{Binding SelectedBackground}">
														<ListBox.ItemTemplate>
															<DataTemplate>
																<Rectangle x:Name="backgroundIcon" Fill="{StaticResource CCIconSelectedPad}" Style="{StaticResource BackgroundIconStyle}" Width="{StaticResource SelectedCarouselIconSize}" Height="{StaticResource SelectedCarouselIconSize}"/>
																<DataTemplate.Triggers>
																	<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="False">
																		<Setter TargetName="backgroundIcon" Property="Width" Value="{StaticResource UnselectedCarouselIconSize}"/>
																		<Setter TargetName="backgroundIcon" Property="Height" Value="{StaticResource UnselectedCarouselIconSize}"/>
																		<Setter TargetName="backgroundIcon" Property="Fill" Value="{StaticResource CCIconDefault}"/>
																		<Setter TargetName="backgroundIcon" Property="Opacity" Value="0.8"/>
																	</DataTrigger>
																</DataTemplate.Triggers>
															</DataTemplate>
														</ListBox.ItemTemplate>
													</ListBox>

													<ScrollViewer Style="{StaticResource gameplayPanelScrollViewerStyle}">
														<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">

															<TextBlock ls:TextBlockFormatter.SourceText="{Binding DummyCharacter.Stats.BackgroundDescription}" Style="{StaticResource PanelDescriptionText}" Margin="0,30,0,0"/>

															<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source='h230f60c6g161fg481bgbe52g42bc264618dd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource FeatureListHeaderText}"/>

															<Control Template="{StaticResource progressionFeaturesList}" DataContext="{Binding ProgressionData.BackgroundProgression}" HorizontalAlignment="Center"/>

														</StackPanel>
													</ScrollViewer>

												</StackPanel>

											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="ability">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Grid>

													<DockPanel VerticalAlignment="Top">
														<b:Interaction.Triggers>
															<b:EventTrigger EventName="Loaded">
																<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
															</b:EventTrigger>
														</b:Interaction.Triggers>

														<Control Template="{StaticResource setGameplayCameraOffsets}"/>

														<TextBlock DockPanel.Dock="Top" ls:TextBlockFormatter.SourceText="{Binding Source='h711b5e8bgb67bg43f7gac08g36b2e2466acd', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

														<TextBlock DockPanel.Dock="Top"  ls:TextBlockFormatter.SourceText="{Binding Source='hf135a2ddg8e74g44b6gb899ga96c2410d384', Converter={StaticResource TranslatedStringConverter}}"  Style="{StaticResource PanelDescriptionText}" MaxWidth="1100"  Margin="0,0,0,0"/>

														<TextBlock DockPanel.Dock="Top"  ls:TextBlockFormatter.SourceText="{Binding Source='h0e1cbf9ege86fg4bebgb6e6g34aae0ab4460', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelDescriptionText}" MaxWidth="1100"  Margin="0,20,0,0"/>

														<ScrollViewer x:Name="scrollBar" Style="{StaticResource gameplayPanelScrollViewerStyle}" ls:ScrollViewerHelper.VerticalScrollOffsetMargin="124">
															<StackPanel Style="{StaticResource gameplayScrolledStackPanelStyle}">
															
																<ItemsControl ItemsSource="{Binding RaceProgressionDetails.AbilityBonusSelection}" Margin="0,24,0,0">
																	<ItemsControl.ItemTemplate>
																		<DataTemplate>
																			<ContentControl Template="{StaticResource CarouselButtonTemplate}" Tag="notEnabled" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True">
																				<Grid VerticalAlignment="Center" Margin="50,0,50,0">

																					<TextBlock x:Name="bonus" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextNormal}" HorizontalAlignment="Left" VerticalAlignment="Center">
																						<TextBlock.Text>
																							<MultiBinding Converter="{StaticResource ParameterizedTranslatedStringConverter}">
																								<Binding Source="hcb0e1e92ga5eeg4823g8e03gee3c7bdf9b58"/>
																								<Binding Path="AbilityBonus"/>
																							</MultiBinding>
																						</TextBlock.Text>
																					</TextBlock>

																					<ListBox x:Name="abilityBonuses" ItemsSource="{Binding BonusAbilities}" SelectedIndex="{Binding SelectedIndex}">

																						<ListBox.Template>
																							<ControlTemplate>
																								<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">

																									<ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" Command="{Binding DataContext.SelectPrevAbilityBonus, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" SoundID="{DynamicResource CarouselButtonSoundEvent}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Bottom">
																										<ls:LSButton.RenderTransform>
																											<ScaleTransform ScaleX="-1" CenterX="32"/>
																										</ls:LSButton.RenderTransform>
																									</ls:LSButton>

																									<Grid VerticalAlignment="Center" MinWidth="400">

																										<Control Template="{StaticResource AbilityDisplayName}" DataContext="{Binding SelectedItem, ElementName=abilityBonuses}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" HorizontalAlignment="Center"/>

																									</Grid>

																									<ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" Command="{Binding DataContext.SelectNextAbilityBonus, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" SoundID="{DynamicResource CarouselButtonSoundEvent}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Center"/>

																								</StackPanel>
																							</ControlTemplate>
																						</ListBox.Template>
																					</ListBox>
																				</Grid>

																			</ContentControl>
																		</DataTemplate>
																	</ItemsControl.ItemTemplate>
																</ItemsControl>

																<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,24,0,0">
																	<TextBlock x:Name="AssignAbilityPointsTitle" ls:TextBlockFormatter.SourceText="{Binding Source='h72161eb0g8981g45cfgba63ga76e152e1fe9', Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextNormal}"/>
																	<TextBlock x:Name="AssignAbilityPointsValue" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" Margin="20,0,0,0">
													<Run Text="{Binding UsedAbilityPoints}"/><Run Text="{Binding TotalAbilityPoints, StringFormat='/{0}'}"/>
																	</TextBlock>
																</StackPanel>

																<ItemsControl x:Name="abilities" ItemsSource="{Binding DummyCharacter.Stats.Abilities}" ItemTemplate="{StaticResource changeAbilityTemplate}" Margin="0,20,0,0">
																	<ItemsControl.Resources>
																		<ControlTemplate x:Key="buttonsAndValue">
																			<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="400,0,0,0">
																				<ls:LSButton x:Name="leftBtn" BoundEvent="UILeft" IsEnabled="{Binding CanDecrease}" Command="{Binding DataContext.DecreaseAbility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Bottom" SoundID="UI_HUD_CC_DecreaseAbility">
																					<ls:LSButton.RenderTransform>
																						<ScaleTransform ScaleX="-1" CenterX="32"/>
																					</ls:LSButton.RenderTransform>
																				</ls:LSButton>

																				<Grid VerticalAlignment="Center" MinWidth="80">
																					<TextBlock x:Name="value" ls:TextBlockFormatter.SourceText="{Binding Value}" FontSize="{StaticResource ScaledDefaultFontSize}" Foreground="{StaticResource CCTextPrimary}" HorizontalAlignment="Center"/>
																				</Grid>

																				<ls:LSButton x:Name="rightBtn" BoundEvent="UIRight" IsEnabled="{Binding CanIncrease}" Command="{Binding DataContext.IncreaseAbility, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="{Binding}" Style="{StaticResource IconCarouselButtonStyle}" VerticalAlignment="Bottom" SoundID="UI_HUD_CC_IncreaseAbility"/>
																			</StackPanel>
																		</ControlTemplate>
																	</ItemsControl.Resources>
																</ItemsControl>

																<!-- Add Use Recommended as a button -->
																<ContentControl Template="{StaticResource InteractiveListButtonTemplate}" x:Name="base" ls:MoveFocus.Focusable="True" Focusable="True" IsEnabled="{Binding CanUseRecommendedAbilities}" Margin="0,24,0,0">
																	<Grid>

																		<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
																			
																			<TextBlock x:Name="useRecommendedText" Text="{Binding Source='h44d84d6fg14d8g4606gb563gf458f155defa', Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource CarouselText}" FontSize="{StaticResource DefaultFontSize}" Margin="0,1,0,0"/>
																		</StackPanel>

																		<ls:LSInputBinding IsEnabled="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=base}" BoundEvent="UIAccept">
																			<b:Interaction.Triggers>
																				<b:EventTrigger EventName="LSInputBindingReleased">
																					<b:InvokeCommandAction Command="{Binding DataContext.UseRecommendedAbilities, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" CommandParameter="new"/>
																					<ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=abilities}"/>
																				</b:EventTrigger>
																			</b:Interaction.Triggers>
																		</ls:LSInputBinding>

																	</Grid>
																</ContentControl>

															</StackPanel>
														</ScrollViewer>

													</DockPanel>
												</Grid>

												<ControlTemplate.Triggers>
													<DataTrigger Binding="{Binding Path=(ls:MoveFocus.IsFocused), ElementName=base}" Value="True">
														<Setter TargetName="useRecommendedText" Property="Foreground" Value="{StaticResource LS_selectedTextPad}"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding CanUseRecommendedAbilities}" Value="False">
														<Setter TargetName="useRecommendedText" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding UnusedAbilityPoints, Converter={StaticResource GreaterThanConverter}, ConverterParameter=0}" Value="True">
														<Setter TargetName="AssignAbilityPointsTitle" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
														<Setter TargetName="AssignAbilityPointsValue" Property="Foreground" Value="{StaticResource CCTabToDo}"/>
													</DataTrigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>


								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="raceskills">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<StackPanel>
													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<Control Template="{StaticResource raceSkillProficiencyPanelTemplate}"/>
												</StackPanel>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>                                
								
								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="skills">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<StackPanel>
													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<Control Template="{StaticResource skillProficiencyPanelTemplate}"/>
												</StackPanel>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="expertise">
									<Setter TargetName="gameplayPanel" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<StackPanel>
													<Control Template="{StaticResource setGameplayCameraOffsets}"/>

													<Control Template="{StaticResource skillExpertisePanelTemplate}"/>
												</StackPanel>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</DataTrigger>

								<!-- MOD START - Add feat selection into CC -->
								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="feat">
									<Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource featsPanel}"/>
								</DataTrigger>

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="featdetails">
									<Setter TargetName="gameplayPanel" Property="Template" Value="{StaticResource featDetailsPanel}"/>
								</DataTrigger>
								<!-- MOD END -->

								<DataTrigger Binding="{Binding ElementName=gameplayTabs, Path=SelectedItem.Tag}" Value="appearance">

									<Setter TargetName="leftSideShading" Property="Visibility" Value="Collapsed"/>
									<Setter TargetName="gameplayPanel" Property="Visibility" Value="Collapsed"/>
									<Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>

									<Setter TargetName="appearanceBackground" Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Grid>
													<b:Interaction.Triggers>
														<b:EventTrigger EventName="Loaded">
															<b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Appearance"/>
														</b:EventTrigger>
														<b:EventTrigger EventName="Unloaded">
															<b:ChangePropertyAction TargetName="tabBar" PropertyName="Tag" Value="CanJumpToAppearance" />
														</b:EventTrigger>
													</b:Interaction.Triggers>

													<Control x:Name="setCameras" Template="{StaticResource setAppearanceCamera_Splitscreen}"/>
													<Control Template="{StaticResource AppearanceBackgroundTemplate}"/>

													<Grid x:Name="dummyMotionKey" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="50,0,0,200">
														<Image Source="{StaticResource CameraActionIndication}" Stretch="None"/>
														<Image Source="{StaticResource CameraActionStickIcon}" Stretch="None" Margin="0,8,0,0"/>
													</Grid>
												</Grid>
												<ControlTemplate.Triggers>
													<DataTrigger Binding="{Binding Layout}" Value="Common">
														<Setter TargetName="setCameras" Property="Template" Value="{StaticResource setAppearanceCamera}"/>
													</DataTrigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
									<Setter TargetName="appearancePanel" Property="Template" Value="{StaticResource AppearancePanelTemplate}"/>

								</DataTrigger>

							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Control.Template>
				</Control>

				<Control x:Name="namingPage" Visibility="Collapsed">
					<Control.Template>
						<ControlTemplate TargetType="Control">
							<Grid>
								<b:Interaction.Triggers>
									<b:DataTrigger Binding="{Binding ElementName=namingPage, Path=Visibility}" Value="Visible">
										<b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Naming"/>
									</b:DataTrigger>
								</b:Interaction.Triggers>

								<Control Template="{StaticResource setNamingCamera}" Visibility="{Binding Visibility, ElementName=namingPage}"/>

								<Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>
								
								<StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,148">

									<b:Interaction.Triggers>
										<b:EventTrigger EventName="Loaded">
											<ls:SetMoveFocusAction TargetName="CharacterCreation_c"/>
										</b:EventTrigger>
									</b:Interaction.Triggers>

									<TextBlock x:Name="CharacterNameHeader" ls:TextBlockFormatter.SourceText="{Binding Source=hfc928d2ega3a9g420egbeb5g0b20ab704959, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}"/>

									<Grid MinWidth="1100">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>

										<Rectangle Grid.Column="0" Fill="{StaticResource CCTextSpecial}" Opacity="0.8" Height="100"/>

										<ls:LSTextBox Grid.Column="0" x:Name="characterName" Text="{Binding CharacterName}" IsEnabled="{Binding CanEditName}" MaxLength="20" TextImmediateSourceUpdate="True"
													  Foreground="{StaticResource CCTextPrimary}" FontSize="{StaticResource ScaledMassiveFontSize}" TextAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center" ProfanityFilter="True"
													  Margin="16,0"/>

										<Control Grid.Column="0" x:Name="frame" Visibility="{Binding ElementName=characterName, Path=IsFocused, Converter={StaticResource BoolToVisibleConverter}, ConverterParameter=True}"
												 Template="{StaticResource FocusedListItemIndicatorTemplate}" Margin="-20,0" />
									</Grid>

									<ls:LSButton x:Name="focusNaming" IsEnabled="{Binding CanEditName}" Visibility="{Binding ElementName=characterName, Path=IsFocused, Converter={StaticResource BoolToHiddenConverter}}" BoundEvent="UIAccept"
												 ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}"
												 Tag="{Binding Source=h5cd3cabag657ag4abfga33fg9b1b2808ee7f,Converter={StaticResource TranslatedStringConverter}}">
										<b:Interaction.Triggers>
											<b:EventTrigger EventName="Click">
												<ls:SetMoveFocusAction TargetName="CharacterCreation_c" Reset="True"/>
												<noesis:SetFocusAction TargetName="characterName"/>
											</b:EventTrigger>
										</b:Interaction.Triggers>
									</ls:LSButton>

									<ContentPresenter x:Name="MissingRequirementsError" HorizontalAlignment="Center" Visibility="Collapsed" Margin="50,0,0,-20" ContentTemplate="{StaticResource MissingRequirementsErrorTemplate}" Content=""/>

									<ContentControl Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" Margin="50,0,0,0">

										<ls:LSButton x:Name="gotoDaisyButton"
														 ContentTemplate="{StaticResource ControllerButtonHint}" 
														 Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIDelete, Converter={StaticResource FindInputEventConverter}}" 
														 BoundEvent="UIDelete" 
														 Tag="{Binding Source=hddd20b39g5fc5g47ccgaf40g3ac1ed6a5da0,Converter={StaticResource TranslatedStringConverter}}">
											<b:Interaction.Triggers>
												<b:EventTrigger EventName="Click">
													<b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
													<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
												</b:EventTrigger>
											</b:Interaction.Triggers>
										</ls:LSButton>
									</ContentControl>

								</StackPanel>

								<!-- Naming Page Summary -->
								<Grid x:Name="summary" Visibility="Collapsed" HorizontalAlignment="Right">
									<Rectangle x:Name="summaryBackground" HorizontalAlignment="Right" Width="{StaticResource summaryPanelBackgroundWidth}" RenderTransformOrigin="1,0.5" Fill="{StaticResource RightSideShadingBrush}" OpacityMask="{StaticResource OpacityMaskShadingBrush}"/>

									<Grid x:Name="summaryAnimPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,230,34,0">
										<Grid.RenderTransform>
											<TranslateTransform X="0"/>
										</Grid.RenderTransform>

										<Control x:Name="summaryPanel" IsEnabled="False" ls:MoveFocus.IsMoveFocusScope="True" Template="{StaticResource summaryPanelTemplate}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,70,16,0"/>

										<ls:LSButton x:Name="focusGameplayPanelButton" 
													 Visibility="Hidden"
													 Tag=" "
													 ContentTemplate="{StaticResource ControllerButtonHint}" 
													 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}"
													 BoundEvent="ToggleSummaryFocus"
													 HorizontalAlignment="Right"
													 VerticalAlignment="Top">
											<b:Interaction.Triggers>
												<b:EventTrigger EventName="Click" >
													<ls:SetMoveFocusAction TargetName="CharacterCreation_c" Reset="True"/>
													<b:InvokeCommandAction Command="{Binding DataContext.HideTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
													<b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
													<b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
													<b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
													<b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>
												</b:EventTrigger>
											</b:Interaction.Triggers>
										</ls:LSButton>

										<ls:LSButton x:Name="focusSummaryPanelButton" 
													 Tag=" " 
													 ContentTemplate="{StaticResource ControllerButtonHint}"  
													 Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='ToggleSummaryFocus'}" 
													 BoundEvent="ToggleSummaryFocus"
													 HorizontalAlignment="Right"
													 VerticalAlignment="Top">
											<b:Interaction.Triggers>
												<b:EventTrigger EventName="Click" >
													<b:InvokeCommandAction Command="{Binding DataContext.EnableTooltipOnUIElement, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}"/>
													<b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="True" />
													<b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Hidden" />
													<b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Visible" />
													<ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=summaryPanel}"/>
													<b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource focusSummaryPanelStoryboard}"/>
												</b:EventTrigger>
											</b:Interaction.Triggers>
										</ls:LSButton>

									</Grid>
								</Grid>

								<!-- Naming Page Bottom Buttons -->
								<StackPanel Style="{StaticResource ButtonHint.Container.Right}">

									<ls:LSButton x:Name="showSummary" Visibility="{Binding ElementName=summary, Path=Visibility, Converter={StaticResource InvertVisibilityConverter}}" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}" BoundEvent="UISort" Tag="{Binding Source=h890f4cddg2bdcg4bb2gb73eg43fe16b11b08,Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}">
										<b:Interaction.Triggers>
											<b:EventTrigger EventName="Click">
												<b:ChangePropertyAction TargetName="summary" PropertyName="Tag" Value="ShowIfPossible" />
											</b:EventTrigger>
										</b:Interaction.Triggers>
									</ls:LSButton>
									<ls:LSButton x:Name="hideSummary" Visibility="{Binding ElementName=summary, Path=Visibility}" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UISort, Converter={StaticResource FindInputEventConverter}}" BoundEvent="UISort" Tag="{Binding Source=h70ec62ddg0cfcg4512ga0c6gbc591945b75b,Converter={StaticResource TranslatedStringConverter}}" TapTime="{StaticResource DefaultButtonTapTime}">
										<b:Interaction.Triggers>
											<b:EventTrigger EventName="Click">
												<b:ChangePropertyAction TargetName="summary" PropertyName="Tag" Value="HideIfPossible" />
											</b:EventTrigger>
										</b:Interaction.Triggers>
									</ls:LSButton>

									<ls:LSButton x:Name="backFromNamingButton"
									ContentTemplate="{StaticResource ControllerButtonHint}" 
									Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
									BoundEvent="UICancel" 
									Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}" 
									Margin="50,0,0,0">
										<b:Interaction.Triggers>
											<b:EventTrigger EventName="Click">
												<b:ChangePropertyAction TargetName="gamePlayPage" PropertyName="Visibility" Value="Visible" />
												<b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Collapsed" />
												<ls:SetMoveFocusAction TargetName="CharacterCreation_c" FocusElement="{Binding ElementName=gamePlayPage}"/>

												<b:ChangePropertyAction TargetName="summaryPanel" PropertyName="IsEnabled" Value="False" />
												<b:ChangePropertyAction TargetName="focusSummaryPanelButton" PropertyName="Visibility" Value="Visible" />
												<b:ChangePropertyAction TargetName="focusGameplayPanelButton" PropertyName="Visibility" Value="Hidden" />
												<b:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource unfocusSummaryPanelStoryboard}"/>

											</b:EventTrigger>
										</b:Interaction.Triggers>
									</ls:LSButton>

								</StackPanel>

							</Grid>
							<ControlTemplate.Triggers>
								<!--Note: Can't use "CanEditName" as it changes for daisy and during finish state. Origins should have a "IsLockedName" property-->
								<DataTrigger Binding="{Binding Path=SelectedOrigin.IsLockedAppearance}" Value="True">
									<Setter TargetName="characterName" Property="Text" Value="{Binding SelectedOrigin.Name, Mode=OneWay}"/>
									<Setter TargetName="CharacterNameHeader" Property="ls:TextBlockFormatter.SourceText" Value="{Binding Source=hfaa5d318g5f40g47eegac3bga7134a42232f, Converter={StaticResource TranslatedStringConverter}}"/>
								</DataTrigger>

								<DataTrigger Binding="{Binding Layout}" Value="Common">
									<Setter TargetName="summary" Property="Visibility" Value="Visible"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="ShowIfPossible">
									<Setter TargetName="summary" Property="Visibility" Value="Visible"/>
									<Setter TargetName="summary" Property="Tag" Value=""/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Tag, ElementName=summary}" Value="HideIfPossible">
									<Setter TargetName="summary" Property="Visibility" Value="Collapsed"/>
									<Setter TargetName="summary" Property="Tag" Value=""/>
								</DataTrigger>

								<DataTrigger Binding="{Binding IsCharacterCompleteExceptName}" Value="False">
									<Setter TargetName="gotoDaisyButton" Property="IsEnabled" Value="False"/>
									<Setter TargetName="MissingRequirementsError" Property="Visibility" Value="Visible"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Validity.Name}" Value="False">
									<Setter TargetName="gotoDaisyButton" Property="IsEnabled" Value="False"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Validity.SameOriginSelectedByMultiplePlayers}" Value="False">
									<Setter TargetName="gotoDaisyButton" Property="IsEnabled" Value="False"/>
								</DataTrigger>

							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Control.Template>
				</Control>

				<Control x:Name="daisyPage" Visibility="Collapsed">
					<Control.Template>
						<ControlTemplate TargetType="Control">
							<Grid>
								<Grid.Resources>
									<!-- Replacements for Avatar Appearance Templates -->
									<ControlTemplate x:Key="StandardBottomButtonsTemplate2">
										<ls:LSButton x:Name="backFromDaisyButton"
										ContentTemplate="{StaticResource ControllerButtonHint}" 
										Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
										BoundEvent="UICancel" 
										Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}" 
										Margin="50,0,0,0">
											<b:Interaction.Triggers>
												<b:EventTrigger EventName="Click">
													<b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Visible" />
													<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
												</b:EventTrigger>
											</b:Interaction.Triggers>
										</ls:LSButton>
									</ControlTemplate>

									<ControlTemplate x:Key="AppearanceItemSelectableBottomButtons">
										<StackPanel Orientation="Horizontal">

											<ls:LSButton x:Name="selectButton" ContentTemplate="{StaticResource ControllerButtonHint}" Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UIAccept, Converter={StaticResource FindInputEventConverter}}" Tag="{Binding Source=hd0c08193ga7f2g4a7eg8225g63748c7b3096,Converter={StaticResource TranslatedStringConverter}}" Margin="50,0,0,0">
												<b:Interaction.Triggers>
													<b:EventTrigger EventName="LSInputBindingPressed" >
														<ls:LSPlaySound Sound="UI_DefaultButton_Click"/>
													</b:EventTrigger>
												</b:Interaction.Triggers>
											</ls:LSButton>

											<ls:LSButton x:Name="backFromDaisyButton"
										ContentTemplate="{StaticResource ControllerButtonHint}" 
										Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
										BoundEvent="UICancel" 
										Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}" 
										Margin="50,0,0,0">
												<b:Interaction.Triggers>
													<b:EventTrigger EventName="Click">
														<b:ChangePropertyAction TargetName="namingPage" PropertyName="Visibility" Value="Visible" />
														<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
													</b:EventTrigger>
												</b:Interaction.Triggers>
											</ls:LSButton>
										</StackPanel>
									</ControlTemplate>
									<BitmapImage x:Key="daisyBackdrop" UriSource="pack://application:,,,/GustavNoesisGUI;component/Assets/CC_c/c_titleBG_guardian.png"/>
								</Grid.Resources>

								<b:Interaction.Triggers>
									<b:DataTrigger Binding="{Binding ElementName=daisyPage, Path=Visibility}" Value="Visible">
										<b:InvokeCommandAction Command="{Binding SetCharacterCreationStep}" CommandParameter="Companion"/>
									</b:DataTrigger>
								</b:Interaction.Triggers>

								<Control x:Name="setCameras" Template="{StaticResource setDaisyCamera_Splitscreen}"/>
								<Control Template="{StaticResource AppearanceBackgroundTemplate}"/>
								<Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>

								<ls:LSNineSliceImage x:Name="daisyHeader" Slices="240,130,820,130" MinWidth="800" MinHeight="264" ImageSource="{StaticResource daisyBackdrop}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="176,146,0,0" Padding="40 20 100 0">
									<TextBlock x:Name="pageTitle" ls:TextBlockFormatter.SourceText="{Binding Source=h0606bec2g5227g499ag8f4bg9ab2589ccded, Converter={StaticResource TranslatedStringConverter}}" FontSize="{StaticResource ScaledTitleFontSize}" Foreground="{StaticResource LS_extraspecialTxtColor}" TextWrapping="Wrap" VerticalAlignment="Top" Margin="40 20 40 20" MaxWidth="700"/>
								</ls:LSNineSliceImage>

								<Control x:Name="appearancePanel" Template="{StaticResource AppearancePanelTemplate}" Height="1700" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,212,50,0"/>

								<ContentControl Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,148">

									<ls:LSButton x:Name="VentureForthButton" Style="{StaticResource ControllerHoldButtonStyle}" Content="{Binding CurrentPlayer.UIData.InputEvents, Converter={StaticResource FindInputEventConverter}, ConverterParameter='UIDelete'}" Tag="{Binding Source='h06b74424gf3bdg4b6cgbe63g84b32198e162', Converter={StaticResource TranslatedStringConverter}}" Command="{Binding DataContext.FinishCreating, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" SoundID="UI_HUD_CC_VentureForth" Margin="2,0,0,0">
										<b:Interaction.Triggers>
											<b:EventTrigger EventName="Click">
												<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Collapsed" />
											</b:EventTrigger>
											<b:EventTrigger EventName="LSButtonReleased">
												<ls:LSPlaySound Sound="UI_HUD_CC_VentureForth_Controller_Release"/>
											</b:EventTrigger>
										</b:Interaction.Triggers>
									</ls:LSButton>

								</ContentControl>

								<!-- Daisy Page Bottom Buttons -->
								<StackPanel  Style="{StaticResource ButtonHint.Container.Right}">
									<Control x:Name="bottomButtons"/>
								</StackPanel>

							</Grid>
							<ControlTemplate.Triggers>
								<DataTrigger Binding="{Binding Layout}" Value="Common">
									<Setter TargetName="setCameras" Property="Template" Value="{StaticResource setDaisyCamera}"/>
									<Setter TargetName="appearancePanel" Property="Margin" Value="0,212,200,0"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Layout}" Value="Left">
									<Setter TargetName="pageTitle" Property="Style" Value="{StaticResource CCBaseText}"/>
									<Setter TargetName="daisyHeader" Property="Margin" Value="60 60 0 0"/>
								</DataTrigger>
								<DataTrigger Binding="{Binding Layout}" Value="Right">
									<Setter TargetName="pageTitle" Property="Style" Value="{StaticResource CCBaseText}"/>
									<Setter TargetName="daisyHeader" Property="Margin" Value="60 60 0 0"/>
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Control.Template>
				</Control>

				<Control x:Name="readyInfoPage" Visibility="Collapsed">
					<Control.Template>
						<ControlTemplate TargetType="Control">
							<Grid>
								<b:Interaction.Triggers>
									<b:PropertyChangedTrigger Binding="{Binding Layout}">
										<b:Interaction.Behaviors>
											<b:ConditionBehavior>
												<b:ConditionalExpression>
													<b:ComparisonCondition LeftOperand="{Binding Layout}" Operator="Equal" RightOperand="Common"/>
													<b:ComparisonCondition LeftOperand="{Binding CharacterCreationStep}" Operator="Equal" RightOperand="Finish"/>
													<b:ComparisonCondition LeftOperand="{Binding Data.Players.Count}" Operator="Equal" RightOperand="1"/>
												</b:ConditionalExpression>
											</b:ConditionBehavior>
										</b:Interaction.Behaviors>
										<!--Second player in splitscreen disconnects while first player ready-->
										<b:InvokeCommandAction Command="{Binding CancelReady}"  CommandParameter="Companion"/>
										<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
									</b:PropertyChangedTrigger>

									<b:DataTrigger Binding="{Binding ElementName=readyInfoPage, Path=Visibility}" Value="Visible">
										<b:InvokeCommandAction Command="{Binding SetCameraMode}" CommandParameter="Overview"/>
										<b:InvokeCommandAction Command="{Binding Path=SetCameraOffsets}">
											<b:InvokeCommandAction.CommandParameter>
												<MultiBinding Converter="{StaticResource PassThroughConverter}">
													<Binding>
														<Binding.Source>
															<System:Single>-6.0</System:Single>
														</Binding.Source>
													</Binding>
													<Binding>
														<Binding.Source>
															<System:Single>-2.2</System:Single>
														</Binding.Source>
													</Binding>
													<Binding>
														<Binding.Source>
															<System:Single>-2.2</System:Single>
														</Binding.Source>
													</Binding>
												</MultiBinding>
											</b:InvokeCommandAction.CommandParameter>
										</b:InvokeCommandAction>
									</b:DataTrigger>
								</b:Interaction.Triggers>

								<Rectangle x:Name="upperShading" Height="200" VerticalAlignment="Top" HorizontalAlignment="Stretch">
									<Rectangle.Fill>
										<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
											<GradientStop Color="Black" Offset="0" />
											<GradientStop Color="{StaticResource transparentBlack}" Offset="1"/>
										</LinearGradientBrush>
									</Rectangle.Fill>
								</Rectangle>
								
								<Rectangle x:Name="bottomShading" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="{StaticResource bottomBackgroundHeight}" Fill="{StaticResource BottomShadingBrush}"/>

								<TextBlock ls:TextBlockFormatter.SourceText="{Binding Source=hd0893eb3gec78g4c1ag8c10gf4860d887ff9, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" VerticalAlignment="Top" Margin="0,50,0,0"/>

								<!-- Waiting for other Players... -->
								<TextBlock x:Name="waitingMessage" Visibility="Collapsed" ls:TextBlockFormatter.SourceText="{Binding Source=he3eaec5bg75f0g4856g9b67g8cabfb128f56, Converter={StaticResource TranslatedStringConverter}}" Style="{StaticResource PanelHeaderText}" VerticalAlignment="Bottom" Margin="0,0,0,50"/>

								<ContentControl x:Name="cancelButton" Template="{StaticResource buttonBackplateTemplate}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,150">
									<ls:LSButton
										Command="{Binding CancelReady}"
										CommandParameter="Companion"
										ContentTemplate="{StaticResource ControllerButtonHint}" 
										Content="{Binding CurrentPlayer.UIData.InputEvents, ConverterParameter=UICancel, Converter={StaticResource FindInputEventConverter}}" 
										BoundEvent="UICancel" 
										Tag="{Binding Source=h77fec760g866dg4e47g8e81g467c9c05e447,Converter={StaticResource TranslatedStringConverter}}">
										<b:Interaction.Triggers>
											<b:EventTrigger EventName="Click" >
												<b:ChangePropertyAction TargetName="daisyPage" PropertyName="Visibility" Value="Visible" />
											</b:EventTrigger>
										</b:Interaction.Triggers>
									</ls:LSButton>
								</ContentControl>

							</Grid>
							<ControlTemplate.Triggers>
								<DataTrigger Binding="{Binding Layout}" Value="Common">
									<Setter TargetName="waitingMessage" Property="Visibility" Value="Visible"/>
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Control.Template>
				</Control>

				<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="{StaticResource ButtonHint.Margin.Left}">
					<Control x:Name="PlayerSlots" Template="{StaticResource PlayerSlotsTemplate}" VerticalAlignment="Center"/>
					<TextBlock x:Name="PressToJoinText" Foreground="{StaticResource LS_accent75TxtColor}" FontSize="{StaticResource ScaledSmallishFontSize}"
							   VerticalAlignment="Center" Visibility="Collapsed" Opacity="0" Margin="12,-18,0,18">
						<b:Interaction.Behaviors>
							<ls:CtxTransStringRunGeneratorBehavior LocaSource="{Binding Source='h562afe65ge87fg4863gb4fcg56a432b35903',Converter={StaticResource TranslatedStringConverter}}" 
																   PlayerId="{Binding DataContext.CurrentPlayer.PlayerId, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ls:UIWidget}}}" 
																   NamedParamContentStyle="{StaticResource ParamContentControllerStyle}"/>
						</b:Interaction.Behaviors>
					</TextBlock>
				</StackPanel>

				<ls:LSInputBinding x:Name="PinTooltipBinding" Style="{StaticResource PinTooltipBindingStyle}" EatInput="False"/>

				<ls:LSInputBinding x:Name="RotateLeftBinding" BoundEvent="CharacterCreationRotateLeft" GameInputCommand="{Binding GameInputRotateLeftCommand}"/>
				<ls:LSInputBinding x:Name="RotateRightBinding" BoundEvent="CharacterCreationRotateRight" GameInputCommand="{Binding GameInputRotateRightcommand}"/>
				<ls:LSInputBinding x:Name="PrevCameraBinding" BoundEvent="CameraZoomOut" Command="{Binding PrevCameraMode}"/>
				<ls:LSInputBinding x:Name="NextCameraBinding" BoundEvent="CameraZoomIn" Command="{Binding NextCameraMode}"/>
			</Grid>

			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding DataContext.Layout, RelativeSource={RelativeSource AncestorType={x:Type ls:UIWidget}}}" Value="Right">
					<Setter TargetName="PlayerSlots" Property="Visibility" Value="Collapsed"/>
				</DataTrigger>

				<MultiDataTrigger>
					<MultiDataTrigger.Conditions>
						<Condition Binding="{Binding Data.Players.Count}" Value="1"/>
						<Condition Binding="{Binding Data.ConnectedControllers, Converter={StaticResource GreaterThanConverter}, ConverterParameter=1}" Value="True"/>
					</MultiDataTrigger.Conditions>
					<MultiDataTrigger.EnterActions>
						<BeginStoryboard Name="IconBounce">
							<BeginStoryboard.Storyboard>
								<Storyboard FillBehavior="Stop">
									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressToJoinText">
										<EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
										<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
										<EasingDoubleKeyFrame KeyTime="0:0:6" Value="1"/>
										<EasingDoubleKeyFrame KeyTime="0:0:7" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PressToJoinText">
										<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
										<DiscreteObjectKeyFrame KeyTime="0:0:7" Value="{x:Static Visibility.Collapsed}"/>
									</ObjectAnimationUsingKeyFrames>
								</Storyboard>
							</BeginStoryboard.Storyboard>
						</BeginStoryboard>
					</MultiDataTrigger.EnterActions>
				</MultiDataTrigger>

			</DataTemplate.Triggers>
		</DataTemplate>
	</ls:UIWidget.ContentTemplate>
</ls:UIWidget>